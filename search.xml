<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>（补充中）网络&amp;软件缩写</title>
      <link href="/2021/10/26/%EF%BC%88%E8%A1%A5%E5%85%85%E4%B8%AD%EF%BC%89%E7%BD%91%E7%BB%9C&amp;%E8%BD%AF%E4%BB%B6%E7%BC%A9%E5%86%99/"/>
      <url>/2021/10/26/%EF%BC%88%E8%A1%A5%E5%85%85%E4%B8%AD%EF%BC%89%E7%BD%91%E7%BB%9C&amp;%E8%BD%AF%E4%BB%B6%E7%BC%A9%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="1-硬件"><a href="#1-硬件" class="headerlink" title="1. 硬件"></a>1. 硬件</h2><table><thead><tr><th align="center">缩写</th><th align="center">全称</th><th align="center">中文释义</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">central processing unit</td><td align="center">中央处理器</td></tr><tr><td align="center">HDMI</td><td align="center">High Definition Multimedia Interface</td><td align="center">高清多媒体接口</td></tr><tr><td align="center">USB</td><td align="center">Universal Serial Bus</td><td align="center">通用串行总线</td></tr><tr><td align="center">GPU</td><td align="center">Graphics Processing Unit</td><td align="center">图形处理器</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="2-软件"><a href="#2-软件" class="headerlink" title="2. 软件"></a>2. 软件</h2><table><thead><tr><th align="center">缩写</th><th align="center">全称</th><th align="center">中文释义</th></tr></thead><tbody><tr><td align="center">API</td><td align="center">Application Programming Interface</td><td align="center"><a href="https://baike.baidu.com/item/api/10154">应用程序编程接口</a></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="3-计算机网络"><a href="#3-计算机网络" class="headerlink" title="3. 计算机网络"></a>3. 计算机网络</h2><table><thead><tr><th align="center">缩写</th><th align="center">全称</th><th align="center">中文释义</th></tr></thead><tbody><tr><td align="center">HTTP</td><td align="center">Hyper Text Transfer Protocol</td><td align="center">超文本传输协议</td></tr><tr><td align="center">HTTPS</td><td align="center">Hyper Text Transfer Protocol over SecureSocket Layer</td><td align="center">超文本传输安全协议</td></tr><tr><td align="center">IP</td><td align="center">Internet Protocol</td><td align="center">网际互连协议</td></tr><tr><td align="center">TCP</td><td align="center">Transmission Control Protocol</td><td align="center">传输控制协议</td></tr><tr><td align="center">UDP</td><td align="center">User Datagram Protocol</td><td align="center">用户数据报协议</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="4-Web"><a href="#4-Web" class="headerlink" title="4. Web"></a>4. Web</h2><table><thead><tr><th align="center">缩写</th><th align="center">全称</th><th align="center">中文释义</th></tr></thead><tbody><tr><td align="center">SEM</td><td align="center">Search Engine Marketing</td><td align="center"><a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%90%A5%E9%94%80/9387327?fromtitle=sem&amp;fromid=2554866">搜索引擎营销</a></td></tr><tr><td align="center">SEO</td><td align="center">Search Engine Optimization</td><td align="center"><a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BC%98%E5%8C%96/3132?fromtitle=SEO&amp;fromid=102990">搜索引擎优化</a></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络名词缩写 </tag>
            
            <tag> 软件工程名词缩写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言寻址方式</title>
      <link href="/2021/10/22/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F/"/>
      <url>/2021/10/22/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>指令寻址方式可分为两种大类。一顺序寻址，二跳跃寻址。</p><p>可从字面意义读出，顺序寻址即依次寻址，当代码执行时，所执行代码的变换即为这种（没有函数调用与跳转的情况）。跳跃寻址很容易理解，即按所需要的情况，直接到指定地址队数据进行读取与修改。这种情况也最为常见。</p><blockquote><p>一般来说顺序寻址多为计算机本身的运行，而跳跃寻址为人为的为了达到某个目的而使用。</p></blockquote><p>以下对跳跃寻址进行分类，总结。</p><p>跳跃寻址又可分为数据寻址与转移地址寻址两大类。</p><div text-align:left;margin:0="" 0;=""><svg xmlns:ev="http://www.w3.org/2001/xml-events" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="917" height="539" viewBox="0 0 917 539"><defs></defs><g id="page1" transform="translate(5.5,5.5)"><rect width="907" fill="#ffffff" x="0" height="529" y="0"></rect><g id="group1"><path d="M.0,.0L907.1,.0L907.1,529.1L.0,529.1L.0,.0z" id="shape2" fill="#fbf9f7" fill-rule="nonzero"></path><path d="M.0,.0L.0,49.2L153.0,117.3L68.0,.0L.0,.0z" id="shape3" fill="#e0d9bd" fill-opacity="0.21" fill-rule="nonzero" transform="translate(1.77,0.00)"></path><path d="M.0,.0L284.9,46.4L57.1,80.2L.0,.0z" id="shape4" fill="#c7c7af" fill-opacity="0.21" fill-rule="nonzero" transform="translate(97.72,37.11)"></path><path d="M.0,.0L304.8,.0L170.0,60.2L27.9,37.1L.0,.0z" id="shape5" fill="#d6c5a0" fill-opacity="0.21" fill-rule="nonzero" transform="translate(69.78,-0.00)"></path><path d="M.0,60.2L281.8,106.3L312.1,.0L134.8,.0L.0,60.2z" id="shape6" fill="#e0d9bd" fill-opacity="0.21" fill-rule="nonzero" transform="translate(239.81,0.00)"></path><path d="M.0,106.3L64.4,117.3L30.4,.0L.0,106.3z" id="shape7" fill="#d6c5a0" fill-opacity="0.21" fill-rule="nonzero" transform="translate(521.58,0.00)"></path><path d="M19.4,64.5L354.6,1.3L.0,.0L19.4,64.5z" id="shape8" fill="#d3c29b" fill-opacity="0.21" fill-rule="nonzero" transform="translate(551.94,0.67)"></path><path d="M136.8,.0L235.6,54.5L14.6,77.6L.0,25.4L136.8,.0z" id="shape9" fill="#c7c7af" fill-opacity="0.21" fill-rule="nonzero" transform="translate(571.37,39.76)"></path><path d="M.0,36.1L202.8,.0L202.8,142.4L100.8,92.3L.0,36.1z" id="shape10" fill="#f0e9db" fill-opacity="0.52" fill-rule="nonzero" transform="translate(703.75,2.01)"></path><path d="M.0,.0L94.8,151.4L99.6,153.2L99.6,50.1L.0,.0z" id="shape11" fill="#d6c5a0" fill-opacity="0.21" fill-rule="nonzero" transform="translate(806.99,94.27)"></path><path d="M20.2,.0L25.0,1.8L25.0,144.3L.0,158.1L20.2,.0z" id="shape12" fill="#f0e9db" fill-opacity="0.18" fill-rule="nonzero" transform="translate(881.53,246.33)"></path><path d="M9.0,13.8L34.0,.0L34.0,138.5L.0,76.3L9.0,13.8z" id="shape13" fill="#d6c5a0" fill-opacity="0.14" fill-rule="nonzero" transform="translate(872.57,390.61)"></path><path d="M147.4,53.2L64.8,.0L.0,44.5L147.4,53.2z" id="shape14" fill="#c7c7af" fill-opacity="0.14" fill-rule="nonzero" transform="translate(725.16,413.81)"></path><path d="M115.8,.0L149.8,62.2L.0,62.0L115.8,.0z" id="shape15" fill="#c7c7af" fill-opacity="0.14" fill-rule="nonzero" transform="translate(756.74,466.96)"></path><path d="M115.8,5.5L20.5,.0L.0,67.7L115.8,5.5z" id="shape16" fill="#d6c5a0" fill-opacity="0.14" fill-rule="nonzero" transform="translate(756.28,461.44)"></path><path d="M120.7,.0L172.3,3.1L151.8,70.8L.0,70.8L78.6,26.3L120.7,.0z" id="shape17" fill="#f0e9db" fill-opacity="0.14" fill-rule="nonzero" transform="translate(604.47,458.31)"></path><path d="M165.9,47.5L.0,.0L91.8,90.6L165.9,47.5z" id="shape18" fill="#c7c7af" fill-opacity="0.14" fill-rule="nonzero" transform="translate(517.18,438.50)"></path><path d="M246.4,73.9L57.4,73.9L.0,.0L200.8,28.4L246.4,73.9z" id="shape19" fill="#d3c29b" fill-opacity="0.14" fill-rule="nonzero" transform="translate(362.63,455.26)"></path><path d="M215.7,96.9L170.5,50.9L.0,.0L15.9,68.9L215.7,96.9z" id="shape20" fill="#e0d9bd" fill-opacity="0.14" fill-rule="nonzero" transform="translate(346.69,386.73)"></path><path d="M1.8,162.3L.0,.0L150.5,238.8L1.8,162.3z" id="shape21" fill="#d3c29b" fill-opacity="0.14" fill-rule="nonzero" transform="translate(-0.00,271.57)"></path><path d="M.0,.0L.0,95.3L238.3,95.3L148.8,76.5L.0,.0z" id="shape22" fill="#ebe3d1" fill-opacity="0.14" fill-rule="nonzero" transform="translate(1.77,433.86)"></path><path d="M60.5,106.6L105.3,.0L.0,8.2L60.5,106.6z" id="shape23" fill="#c7c7af" fill-opacity="0.14" fill-rule="nonzero" transform="translate(88.56,403.78)"></path><path d="M.0,107.8L92.6,126.6L153.3,73.3L46.3,.0L.0,107.8z" id="shape24" fill="#f0e9db" fill-opacity="0.14" fill-rule="nonzero" transform="translate(149.03,402.52)"></path><path d="M105.5,89.1L149.8,.0L.0,15.8L105.5,89.1z" id="shape25" fill="#d3c29b" fill-opacity="0.14" fill-rule="nonzero" transform="translate(196.85,386.73)"></path><path d="M.0,89.1L60.0,67.8L44.3,.0L.0,89.1z" id="shape26" fill="#c7c7af" fill-opacity="0.14" fill-rule="nonzero" transform="translate(302.36,386.73)"></path><path d="M60.7,21.3L.0,74.6L178.4,74.6L120.7,.0L60.7,21.3z" id="shape27" fill="#e0d3b7" fill-opacity="0.14" fill-rule="nonzero" transform="translate(241.64,454.55)"></path><g id="group28" transform="matrix(-1.00,0.00,0.00,-1.00,35.8,283.4)"><path d="M20.2,.0L25.0,1.8L25.0,144.3L.0,158.1L20.2,.0z" id="shape29" fill="#f0e9db" fill-opacity="0.18" fill-rule="nonzero" transform="translate(8.96,0.00)"></path><path d="M9.0,13.8L34.0,.0L34.0,138.5L.0,76.3L9.0,13.8z" id="shape30" fill="#d6c5a0" fill-opacity="0.14" fill-rule="nonzero" transform="translate(0.00,144.29)"></path></g></g><path d="M-13.4,18.6C8.4,-11.7,24.5,-51.8,66.8,-51.8" stroke-width="2" stroke-linecap="round" id="shape31" fill="none" stroke="#303030" transform="translate(175.92,212.27)"></path><path d="M-12.5,-18.2L-0.3,-18.2C1.4,-18.2,2.7,-16.9,2.7,-15.2L2.7,9.2C2.7,10.9,2.5,13.4,3.4,15.1C4.5,17.0,6.4,18.2,8.7,18.2L12.5,18.2" stroke-linecap="round" id="shape32" fill="none" stroke="#303030" transform="translate(501.11,215.25)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape33" fill="none" stroke="#303030" transform="translate(675.96,233.50)"></path><path d="M-20.2,-36.7C3.3,4.6,13.9,70.0,66.8,70.0" stroke-width="2" stroke-linecap="round" id="shape34" fill="none" stroke="#303030" transform="translate(175.92,334.00)"></path><path d="M-12.5,54.8L-0.3,54.8C1.4,54.8,2.7,53.4,2.7,51.8L2.7,-45.8C2.7,-47.4,2.5,-49.9,3.4,-51.6C4.5,-53.5,6.4,-54.8,8.7,-54.8L12.5,-54.8" stroke-linecap="round" id="shape35" fill="none" stroke="#303030" transform="translate(380.65,105.75)"></path><path d="M-12.5,36.5L-0.3,36.5C1.4,36.5,2.7,35.2,2.7,33.5L2.7,-27.5C2.7,-29.2,2.5,-31.6,3.4,-33.4C4.5,-35.2,6.4,-36.5,8.7,-36.5L12.5,-36.5" stroke-linecap="round" id="shape36" fill="none" stroke="#303030" transform="translate(380.65,124.00)"></path><path d="M-12.5,-18.3L-0.3,-18.3C1.4,-18.3,2.7,-16.9,2.7,-15.3L2.7,9.3C2.7,10.9,2.5,13.4,3.4,15.1C4.5,17.0,6.4,18.3,8.7,18.3L12.5,18.3" stroke-linecap="round" id="shape37" fill="none" stroke="#303030" transform="translate(380.65,178.75)"></path><path d="M-12.5,36.5L-0.3,36.5C1.4,36.5,2.7,35.2,2.7,33.5L2.7,-27.5C2.7,-29.2,2.5,-31.6,3.4,-33.4C4.5,-35.2,6.4,-36.5,8.7,-36.5L12.5,-36.5" stroke-linecap="round" id="shape38" fill="none" stroke="#303030" transform="translate(501.11,160.50)"></path><path d="M-12.5,18.3L-0.3,18.3C1.4,18.3,2.7,16.9,2.7,15.3L2.7,-9.3C2.7,-10.9,2.5,-13.4,3.4,-15.1C4.5,-17.0,6.4,-18.3,8.7,-18.3L12.5,-18.3" stroke-linecap="round" id="shape39" fill="none" stroke="#303030" transform="translate(501.11,178.75)"></path><path d="M-12.5,.0L2.7,.0L2.7,.0C2.7,.0,5.4,-0.0,8.7,-0.0L12.5,-0.0" stroke-linecap="round" id="shape40" fill="none" stroke="#303030" transform="translate(501.11,197.00)"></path><path d="M-12.5,-36.5L-0.3,-36.5C1.4,-36.5,2.7,-35.2,2.7,-33.5L2.7,27.5C2.7,29.2,2.5,31.6,3.4,33.4C4.5,35.2,6.4,36.5,8.7,36.5L12.5,36.5" stroke-linecap="round" id="shape41" fill="none" stroke="#303030" transform="translate(501.11,233.50)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape42" fill="none" stroke="#303030" transform="translate(555.51,51.00)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape43" fill="none" stroke="#303030" transform="translate(528.31,87.50)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape44" fill="none" stroke="#303030" transform="translate(635.16,124.00)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape45" fill="none" stroke="#303030" transform="translate(675.96,160.50)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape46" fill="none" stroke="#303030" transform="translate(662.36,197.00)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape47" fill="none" stroke="#303030" transform="translate(689.56,270.00)"></path><path d="M-12.5,27.4L-0.3,27.4C1.4,27.4,2.7,26.0,2.7,24.4L2.7,-18.4C2.7,-20.0,2.5,-22.5,3.4,-24.3C4.5,-26.1,6.4,-27.4,8.7,-27.4L12.5,-27.4" stroke-linecap="round" id="shape48" fill="none" stroke="#303030" transform="translate(417.45,376.57)"></path><path d="M-12.5,-0.1L-0.3,-0.1C1.4,-0.1,3.7,.0,5.7,.1C6.6,.1,7.6,.1,8.7,.1L12.5,.1" stroke-linecap="round" id="shape49" fill="none" stroke="#303030" transform="translate(417.45,404.02)"></path><path d="M-12.5,-18.3L-0.3,-18.3C1.4,-18.3,2.7,-17.0,2.7,-15.3L2.7,9.3C2.7,11.0,2.5,13.4,3.4,15.2C4.5,17.1,6.4,18.3,8.7,18.3L12.5,18.3" stroke-linecap="round" id="shape50" fill="none" stroke="#303030" transform="translate(417.45,422.27)"></path><path d="M-12.5,-36.6L-0.3,-36.6C1.4,-36.6,2.7,-35.2,2.7,-33.6L2.7,27.6C2.7,29.2,2.5,31.7,3.4,33.5C4.5,35.3,6.4,36.6,8.7,36.6L12.5,36.6" stroke-linecap="round" id="shape51" fill="none" stroke="#303030" transform="translate(417.45,440.52)"></path><path d="M-12.5,.0L2.7,.0L2.7,.0C2.7,-0.0,5.4,-0.0,8.7,-0.0L12.5,-0.0" stroke-linecap="round" id="shape52" fill="none" stroke="#303030" transform="translate(578.71,349.20)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape53" fill="none" stroke="#303030" transform="translate(578.71,404.10)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape54" fill="none" stroke="#303030" transform="translate(578.71,440.60)"></path><path d="M-12.5,.0L-0.3,.0C1.4,.0,3.7,.0,5.7,.0C6.6,.0,7.6,.0,8.7,.0L12.5,.0" stroke-linecap="round" id="shape55" fill="none" stroke="#303030" transform="translate(578.71,477.10)"></path><g id="shape56" transform="translate(38.37,230.85)"><path d="M4.0,.0L137.4,.0C139.6,.0,141.4,1.8,141.4,4.0L141.4,62.4C141.4,64.6,139.6,66.4,137.4,66.4L4.0,66.4C1.8,66.4,.0,64.6,.0,62.4L.0,4.0C.0,1.8,1.8,.0,4.0,.0z" stroke-width="2" fill="#3f5cb8" fill-rule="nonzero" stroke="#3f5cb8"></path><text style="fill:#ffffff;font-family:Microsoft YaHei;font-size:18.00pt;font-weight:bold" xml:space="preserve"><tspan x="24.5" y="42.8">跳跃寻址</tspan></text></g><g id="shape57" transform="translate(242.77,137.90)"><path d="M22.6,.0L102.8,.0C115.3,.0,125.4,10.1,125.4,22.6C125.4,35.1,115.3,45.2,102.8,45.2L22.6,45.2C10.1,45.2,.0,35.1,.0,22.6C.0,10.1,10.1,.0,22.6,.0z" stroke-width="2" fill="#f5f6ff" fill-rule="nonzero" stroke="#d1d8fd"></path><text style="fill:#3f5cb8;font-family:Microsoft YaHei;font-size:14.00pt;font-weight:bold" xml:space="preserve"><tspan x="27.7" y="30.2">数据寻址</tspan></text></g><g id="shape58" transform="translate(242.77,381.35)"><path d="M22.6,.0L139.6,.0C152.1,.0,162.2,10.1,162.2,22.6C162.2,35.1,152.1,45.2,139.6,45.2L22.6,45.2C10.1,45.2,.0,35.1,.0,22.6C.0,10.1,10.1,.0,22.6,.0z" stroke-width="2" fill="#f5f6ff" fill-rule="nonzero" stroke="#d1d8fd"></path><text style="fill:#3f5cb8;font-family:Microsoft YaHei;font-size:14.00pt;font-weight:bold" xml:space="preserve"><tspan x="27.7" y="30.2">转移地址寻址</tspan></text></g><g id="shape59" transform="translate(393.15,37.10)"><path d="M13.9,.0L136.0,.0C143.6,.0,149.9,6.2,149.9,13.9C149.9,21.6,143.6,27.8,136.0,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">立即（数）寻址方式</tspan></text></g><g id="shape60" transform="translate(393.15,73.60)"><path d="M13.9,.0L108.8,.0C116.4,.0,122.7,6.2,122.7,13.9C122.7,21.6,116.4,27.8,108.8,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">寄存器寻址方式</tspan></text></g><g id="shape61" transform="translate(393.15,183.10)"><path d="M13.9,.0L81.6,.0C89.2,.0,95.5,6.2,95.5,13.9C95.5,21.6,89.2,27.8,81.6,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">存储器寻址</tspan></text></g><g id="shape62" transform="translate(513.61,110.10)"><path d="M13.9,.0L95.2,.0C102.8,.0,109.1,6.2,109.1,13.9C109.1,21.6,102.8,27.8,95.2,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">直接寻址方式</tspan></text></g><g id="shape63" transform="translate(513.61,146.60)"><path d="M13.9,.0L136.0,.0C143.6,.0,149.9,6.2,149.9,13.9C149.9,21.6,143.6,27.8,136.0,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">寄存器间接寻址方式</tspan></text></g><g id="shape64" transform="translate(513.61,183.10)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">基址变址寻址方式</tspan></text></g><g id="shape65" transform="translate(513.61,256.10)"><path d="M13.9,.0L149.6,.0C157.2,.0,163.5,6.2,163.5,13.9C163.5,21.6,157.2,27.8,149.6,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">相对基质变址寻址方式</tspan></text></g><g id="shape66" transform="translate(568.01,37.10)"><path d="M13.9,.0L88.0,.0C95.6,.0,101.9,6.2,101.9,13.9C101.9,21.6,95.6,27.8,88.0,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AL,18</tspan></text></g><g id="shape67" transform="translate(540.81,73.60)"><path d="M13.9,.0L91.2,.0C98.8,.0,105.1,6.2,105.1,13.9C105.1,21.6,98.8,27.8,91.2,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,BX</tspan></text></g><g id="shape68" transform="translate(647.66,110.10)"><path d="M13.9,.0L117.6,.0C125.2,.0,131.5,6.2,131.5,13.9C131.5,21.6,125.2,27.8,117.6,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,[400H]</tspan></text></g><g id="shape69" transform="translate(688.46,146.60)"><path d="M13.9,.0L95.2,.0C102.8,.0,109.1,6.2,109.1,13.9C109.1,21.6,102.8,27.8,95.2,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,[SI]</tspan></text></g><g id="shape70" transform="translate(674.86,183.10)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,[BX][SI]</tspan></text></g><g id="shape71" transform="translate(702.06,256.10)"><path d="M13.9,.0L152.8,.0C160.4,.0,166.7,6.2,166.7,13.9C166.7,21.6,160.4,27.8,152.8,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,DISP[BX][SI]</tspan></text></g><g id="shape72" transform="translate(429.95,335.30)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">段内直接寻址方式</tspan></text></g><g id="shape73" transform="translate(429.95,390.20)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">段内间接寻址方式</tspan></text></g><g id="shape74" transform="translate(429.95,426.70)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">段间直接寻址方式</tspan></text></g><g id="shape75" transform="translate(429.95,463.20)"><path d="M13.9,.0L122.4,.0C130.0,.0,136.3,6.2,136.3,13.9C136.3,21.6,130.0,27.8,122.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">段间间接寻址方式</tspan></text></g><g id="shape76" transform="translate(591.21,316.90)"><path d="M32.3,.0L173.7,.0C191.5,.0,206.0,14.5,206.0,32.3C206.0,50.1,191.5,64.6,173.7,64.6L32.3,64.6C14.5,64.6,.0,50.1,.0,32.3C.0,14.5,14.5,.0,32.3,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="27.8" y="19.6">JMP NEAR  PTR ADDR1</tspan><tspan x="27.8" y="38.0">JMP SHORT ADDR2</tspan><tspan x="27.8" y="56.4">JMP 400H</tspan></text></g><g id="shape77" transform="translate(591.21,390.20)"><path d="M13.9,.0L62.4,.0C70.0,.0,76.3,6.2,76.3,13.9C76.3,21.6,70.0,27.8,62.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">JMP BX</tspan></text></g><g id="shape78" transform="translate(591.21,426.70)"><path d="M13.9,.0L150.4,.0C158.0,.0,164.3,6.2,164.3,13.9C164.3,21.6,158.0,27.8,150.4,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">JMP FAR PTR ADDR4</tspan></text></g><g id="shape79" transform="translate(591.21,463.20)"><path d="M13.9,.0L220.8,.0C228.4,.0,234.7,6.2,234.7,13.9C234.7,21.6,228.4,27.8,220.8,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">JMP DWORD PTR [ADDR5 +BX]</tspan></text></g><g id="shape80" transform="translate(513.61,219.60)"><path d="M13.9,.0L136.0,.0C143.6,.0,149.9,6.2,149.9,13.9C149.9,21.6,143.6,27.8,136.0,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">寄存器相对寻址方式</tspan></text></g><g id="shape81" transform="translate(688.46,219.60)"><path d="M13.9,.0L128.0,.0C135.6,.0,141.9,6.2,141.9,13.9C141.9,21.6,135.6,27.8,128.0,27.8L13.9,27.8C6.2,27.8,.0,21.6,.0,13.9C.0,6.2,6.2,.0,13.9,.0z" fill="none" stroke="#e3e3e3"></path><text style="fill:#303030;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve"><tspan x="15.5" y="19.1">MOV AX,DISP[DI]</tspan></text></g></g></svg></div><h2 id="1-0-隐含寻址方式"><a href="#1-0-隐含寻址方式" class="headerlink" title="1.0 隐含寻址方式"></a>1.0 隐含寻址方式</h2><p>常用指令：PUSH,POP,等。</p><p>多体现在一些特定指令。如     PUSH;POP指令等寄存器或地址在指令中不存在，操作的地址为默认的。</p><h2 id="2-0-立即寻址方式"><a href="#2-0-立即寻址方式" class="headerlink" title="2.0 立即寻址方式"></a>2.0 立即寻址方式</h2><p>立即寻址方式的目的就是将操作数紧跟在操作码后面，与操作码一起放在指令代码段中，在程序运行时，程序直接调用该操作数，而不需要到其他地址单元中去取相应的操作数。</p>  <pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AL,18MOV AH,80H<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>代码为将18移入AX寄存器低位，80H移入AX寄存器高位。</p><h2 id="3-0-直接寻址方式"><a href="#3-0-直接寻址方式" class="headerlink" title="3.0 直接寻址方式"></a>3.0 直接寻址方式</h2><p>直接寻址方式时操作数地址的偏移量直接包含在指令中，和指令操作码一起放在代码段，而操作数则在数据段中。操作数的地址时数据段寄存器DS中的内容左移4位后，加上指令给定的地址偏移量。</p><p>格式</p>  <pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,[400H]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当数据寄存器数据 （DS）=1000H，则代码意思为将 10400H 处的地址移至AX寄存器内。<br>10000H（段基地址）+400H（偏移地址）=10400（物理地址）</p><h2 id="4-0-寄存器寻址方式"><a href="#4-0-寄存器寻址方式" class="headerlink" title="4.0 寄存器寻址方式"></a>4.0 寄存器寻址方式</h2><p>寄存器寻址方式中，操作数在CPU的内部寄存器中。执行时，直接操作寄存器中数。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,BX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述指令为将BX寄存器中数据移至AX中。</p><h2 id="5-0-寄存器间接寻址方式"><a href="#5-0-寄存器间接寻址方式" class="headerlink" title="5.0 寄存器间接寻址方式"></a>5.0 寄存器间接寻址方式</h2><p> 操作数的有效地址有变址寄存器SI、DIJ或基址寄存器BX、BP提供。</p><blockquote><p>  $物理地址 = 10H*(DS)+(BX、BI或DI)$</p></blockquote><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,[SI]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 如上代码，如果（DS）=2000H，（SI）=1500H，<br>$则物理地址:20000H(段基地址)+1500H(偏移地址)=21500H(物理地址)$<br>即运行完，(AX) 为 21500H 处的数据</p><h2 id="6-0-寄存器相对寻址方式"><a href="#6-0-寄存器相对寻址方式" class="headerlink" title="6.0 寄存器相对寻址方式"></a>6.0 寄存器相对寻址方式</h2><p>此寻址方式是以知道那个的寄存器内容，加上指令中给出的位移量（8或16位），并以一个段寄存器位基准，作为操作数的地址。</p><blockquote><p>  $物理地址=10H*(DS) +(BX、SI或DI)+8位(16位)位移量$<br>  ​       $物理地址=10H*(SS) +(BP)+8位(16位)位移量$</p></blockquote><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,DISP[DI] ;或 MOV AX,[DISP + DI]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>DISP 为偏移量的符号地址。</p><p>如果(DS)=3000H,(DI)=2000H,DISP=600H,则</p><p>$物理地址：30000H(段基地址)+2000H(变址)+600H(位移量)=32600H(物理地址)$</p><h2 id="7-0-基址加变址寻址方式"><a href="#7-0-基址加变址寻址方式" class="headerlink" title="7.0 基址加变址寻址方式"></a>7.0 基址加变址寻址方式</h2><p>通常将BX和BP看作是基址寄存器，把SI和DI作为变址寄存器。两个寄存器均由指令指定。</p><blockquote><p>   $物理地址=10H*(DS)+(BX)+(SI或DI)$<br>          $物理地址=10H*(SS)+(BP)+(SI或DI)$</p></blockquote><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,[BX][DI];或MOV AX,[BX+DI]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>若（DS）=1000H,(BX)=2000H,(DI)=3000H,</p><p>$物理地址：10000H(段基地址)+2000H(基址)+3000H(变址)=15000(物理地址)$</p><h2 id="8-0-相对基址变址寻址方式"><a href="#8-0-相对基址变址寻址方式" class="headerlink" title="8.0 相对基址变址寻址方式"></a>8.0 相对基址变址寻址方式</h2><p>通常把BX和BP看作基址寄存器，把SI和DI看作变址寄存器。其原理就是把一个基址寄存器BX或BP的内容，加上变址寄存器SI或DI的内容，再加上指令中给出的8或16位跑位移量，并以一个段寄存器作为地址基准，作为操作数的地址。</p><blockquote><p>$物理地址=10H*(DS)+(BX)+(SI或DI)+8或16位偏移量$<br>      $物理地址=10H*(SS)+(BP)+(SI或DI)+8或16位偏移量$</p></blockquote>  <pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV AX,DISP[BX][SI]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若(DS)=4000H,(BX)=2000H,(SI)=1000H,DISP=800H,则</p><p>​    $物理地址：4000H(段基地址)+[2000H(基址)+1000H(变址)+800H(位移量)]=43800H$</p><h2 id="9-0-段寻址方式"><a href="#9-0-段寻址方式" class="headerlink" title="9.0 段寻址方式"></a>9.0 段寻址方式</h2><h3 id="9-1-段内直接寻址方式"><a href="#9-1-段内直接寻址方式" class="headerlink" title="9.1 段内直接寻址方式"></a>9.1 段内直接寻址方式</h3><p>将当前IP寄存器的内容和指令中指定的8位或16位位移量之和作为转向的有效地址。</p><p>这种寻址方式的汇编格式有如下3种：</p><ol><li>指令名 SHORT 转移目标地址标号。表示位移量被强制位8位，跳转距离位为-128~+127。</li><li>指令名 转移目标地址标号</li><li>指令名 NEAR PTR 转移目标地址标号。表示位移量被强制位16位，跳转距离为-32768 ~ +32767</li></ol><p>位移量可以是一个带符号的8位数，段内短程转移。也可以是一个带符号的16位数，段内近程转移。什么都不加，计算机默认为16位。</p><p>且无论是8/16位，地址标号在指令码中都是用补码表示的带符号数。适应于无条件转移或者条件转移，但条件转移只能有8位的位移量。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">JMP SHORT ADDR2JMP ADDR3JMP NEAR PTR ADDR1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>ADDR (123) 皆为地址标号。</p></blockquote><p>例：</p><blockquote><p>  给定 (IP) =2BC0H，试为此转移指令找出转移的偏移地址。<br>  JMP NEAR PTR 5119H ；</p><p>  解：<br>  ​    (IP) = 5119H + ((IP) + 03H) = 7CDCH，物理地址PA = 09CDCH</p></blockquote><p> IP 的当前值是指从存储器中取出转移指令后的 IP   值（下一条指令的地址）。因为位移量是相对于当前 IP 的内容来计算的，所以又称为相对寻址。</p><p><a href="https://baike.baidu.com/item/%E6%AE%B5%E5%86%85%E7%9B%B4%E6%8E%A5%E5%AF%BB%E5%9D%80"><mark>参考链接</mark></a></p><h3 id="9-2段内间接寻址方式"><a href="#9-2段内间接寻址方式" class="headerlink" title="9.2段内间接寻址方式"></a>9.2段内间接寻址方式</h3><p>这种方式用于段间转移，当前CS和IP由存储器中连续4个字节单元提供。</p><p>常用指令：JMP,</p><p>指令中给出访问内存单元的寻址方式。段内间接寻址的转向有效地址是一个寄存器或一个存储单元的内容，并且可以用数据寻址方式中除立即数以外的任何一种寻址方式取得转向的有效地址。</p><blockquote><p>$物理地址: 10H*(CS)+EA$     ，(EA)为有效偏移地址。</p></blockquote><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">JMP AX;有效地址为一个寄存器JMP [BX][SI];有效地址为一个存储单元<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如上指令，若(DS)=2000H,(BX)=2000H,(SI)=3000H,(25000H)=3200H,</p><p>则，$(IP)=(10H)*(DS)+(BX)+(SI))=(25000H)=3200H$</p><h3 id="9-3-段间直接寻址方式"><a href="#9-3-段间直接寻址方式" class="headerlink" title="9.3 段间直接寻址方式"></a>9.3 段间直接寻址方式</h3><p>直接提供转向的段地址（16位）和偏移地址（16位）。用指令中指定的偏移地址取代IP寄存器内容，用指定段地址取代CS寄存器内容。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">JMP FAR PTR ADD1 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将其中的段地址传送给CS,偏移地址传给IP，完成程序控制间的段间转移。ADD1为装箱的符号地址，FAR PTR 则是表示段间转义的操作符。</p><h3 id="9-4段间间接寻址方式"><a href="#9-4段间间接寻址方式" class="headerlink" title="9.4段间间接寻址方式"></a>9.4段间间接寻址方式</h3><p>用存储器中的两个相继字的内容来取代IP和CS。内存单元的地址使用指令指定的除立即寻址和寄存器寻址方式意外的任何一种数据寻址方式取得。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">JMP DWORD PTR [DISP+BX]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[DISP+BX]说明数据寻址方式位基础年起间接寻址方式，DWORD PRT 为双字操作符。</p>]]></content>
      
      
      <categories>
          
          <category> 汇编语言 </category>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>伪选择器</title>
      <link href="/2021/10/16/%E4%BC%AA%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2021/10/16/%E4%BC%AA%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-selection"><a href="#1-selection" class="headerlink" title="1. ::selection"></a>1. ::selection</h2><h2 id="2-before"><a href="#2-before" class="headerlink" title="2. ::before"></a>2. ::before</h2><h2 id="3-after"><a href="#3-after" class="headerlink" title="3. ::after"></a>3. ::after</h2><h2 id="4-first-line"><a href="#4-first-line" class="headerlink" title="4. ::first-line"></a>4. ::first-line</h2><h2 id="5-first-letter"><a href="#5-first-letter" class="headerlink" title="5. ::first-letter"></a>5. ::first-letter</h2><div><style>​    p,​    div {​      white-space: nopre;​      text-indent: 2rem;​      width: 400px;​    p::selection {​      color: springgreen;​      background-color: sienna;​    }​    div::before {​      content: "this is a div tag";​    }​    div::after {​      content: "div is over";​    }​    div::selection {​      background-color: cornflowerblue;​    }​    p,​    div {​      margin: 20px auto;​    }​    p::first-line {​      background-color: darkviolet;​    }​    div::first-letter {​      font-size: 40px;​      text-transform: uppercase;​      background-color: firebrick;​      border-radius: 3px;​      padding: 0 3px 0 0;​    }  </style>&nbsp; &nbsp; <div> 燕子去了，有再来的时候；杨柳枯了，有再青的时候；桃花谢了，有再开的时候。但是，聪明的，你告诉我，我们的日子为什么一去不复返呢？--是有人偷了他们罢：那是谁？又藏在何处呢？是他们自己逃走了罢：现在又到了哪里呢？  </div>&nbsp; &nbsp; <p>我不知道他们给了我多少日子；但我的手确乎是渐渐空虚了。在默默里算着，八千多日子已经从我手中溜去；像针尖上一滴水滴在大海里，我的日子滴在时间的流里，没有声音，也没有影子。我不禁头涔涔而泪潸潸了。</p>&nbsp; &nbsp; <p>去的尽管去了，来的尽管来着；去来的中间，又怎样地匆匆呢？早上我起来的时候，小屋里射进两三方斜斜的太阳。太阳他有脚啊，轻轻悄悄地挪移了；我也茫茫然跟着旋转。于是--洗手的时候，日子从水盆里过去；吃饭的时候，日子从饭碗里过去；默默时，便从凝然的双眼前过去。我觉察他去的匆匆了，伸出手遮挽时，他又从遮挽着的手边过去，天黑时，我躺在床上，他便伶伶俐俐地从我身上跨过，从我脚边飞去了。等我睁开眼和太阳再见，这算又溜走了一日。我掩着面叹息。但是新来的日子的影儿又开始在叹息里闪过了。</p>&nbsp; &nbsp; <p>在逃去如飞的日子里，在千门万户的世界里的我能做些什么呢？只有徘徊罢了，只有匆匆罢了；在八千多日的匆匆里，除徘徊外，又剩些什么呢？过去的日子如轻烟，被微风吹散了，如薄雾，被初阳蒸融了；我留着些什么痕迹呢？我何曾留着像游丝样的痕迹呢？我赤裸裸来到这世界，转眼间也将赤裸裸的回去罢？但不能平的，为什么偏要白白走这一遭啊？  </p>&nbsp; &nbsp; <p>你聪明的，告诉我，我们的日子为什么一去不复返呢？</p></div>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html设置背景图片透明度(不影响子标签与内容)</title>
      <link href="/2021/10/14/html%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E9%80%8F%E6%98%8E%E5%BA%A6-%E4%B8%8D%E5%BD%B1%E5%93%8D%E5%AD%90%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%86%85%E5%AE%B9/"/>
      <url>/2021/10/14/html%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E9%80%8F%E6%98%8E%E5%BA%A6-%E4%B8%8D%E5%BD%B1%E5%93%8D%E5%AD%90%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="1-目前就这一种"><a href="#1-目前就这一种" class="headerlink" title="1.目前就这一种"></a>1.目前就这一种</h2><p>​    通过给子内容添加具有透明效果的背景色，以实现背景透明效果。</p><p>如</p><div>    <div id="apend" style=" background-image:     url(https://gitee.com/blogofxyz/blogofxyz/raw/master/medias/background.JPG);background-size: cover; width: 800px; height: auto;">        <div id="ap" style="width: 800px; height: auto;background: rgba(255, 255, 255, 0.3);">         <h1 style="    margin-left: 80px;  line-height: 100px;">             有的人            </h1>            <h7 style="float: right; margin-right: 20px;">————纪念鲁迅逝世十三周年有感</h7>            <p style="margin-left: 50px; white-space: break-spaces;line-height: 30px; font-family: cursive; font-size: 30px;">有的人活着他已经死了；有的人死了他还活着。有的人骑在人民头上：“啊，我多伟大！”有的人俯下身子给人民当牛马。有的人把名字刻入石头，想“不朽”；有的人情愿作野草，等着地下的火烧。有的人他活着别人就不能活；有的人他活着为了多数人更好地活。骑在人民头上的人民把他摔垮；给人民作牛马的人民永远记住他！把名字刻入石头的名字比尸首烂得更早；只要春风吹到的地方到处是青青的野草。他活着别人就不能活的人，他的下场可以看到；他活着为了多数人更好地活着的人，群众把他抬举得很高，很高。             </p>        </div>    </div></div><p>其代码可简略为</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>apend<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> background-image: url(<span class="token punctuation">"</span></span></span><span class="token attr-name">--图片链接--")"</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ap<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">--诗题对齐的代码--</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>有的人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h7</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">引言对齐的代码</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>————纪念鲁迅逝世十三周年有感<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h7</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">--设置字体与对齐--</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>            ----诗句----        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最外层 div 设置背景图片，然后下一层 div 设置白色背景并指定透明度，此时的透明部分为内容以外的部分。</p><p>最后实现效果与料想中的一样。</p><blockquote><p>注：也可设置其他颜色的透明效果。rgba(x,y,z,p)。前四位分别为红、绿、蓝值，取值范围为0~255。第四位为透明度，取值范围0~1，值越大，透明效果越明显。当然，事实是用白色rgb(255, 255, 255)覆盖下边图像，所以，当这时底层div非最大层时会露馅。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程同步笔记</title>
      <link href="/2021/10/06/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/10/06/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-0进程同步机制"><a href="#1-0进程同步机制" class="headerlink" title="1.0进程同步机制"></a>1.0进程同步机制</h3><h4 id="1-1-0概念"><a href="#1-1-0概念" class="headerlink" title="1.1.0概念"></a>1.1.0概念</h4><p><mark style="border-radius:10px;padding:5px;background-color:#47a6e8">异步环境</mark>下一组开发进程因直接制约而互相发送消息，互相合作、互相等待，使得各进程按一定的速度执行的过程。</p><h4 id="1-1-2-目的"><a href="#1-1-2-目的" class="headerlink" title="1.1.2 目的"></a>1.1.2 目的</h4><p>在执行次序上对多个写作进程进行协调，使并发执行的诸多协作进程之间能按照一定的规则（或时序）共享系统资源，并能很好地互相合作，从而使程序的执行具有可再现性。</p><h4 id="1-1-3-进程的制约关系"><a href="#1-1-3-进程的制约关系" class="headerlink" title="1.1.3 进程的制约关系"></a>1.1.3 进程的制约关系</h4><ul><li><p>互斥关系</p><p>  间接相互制约，多程序并发执行，由于共享的系统资源（CPU、I/O设备等），这些并发执行的程序之间会形成相互制约的关系。</p><p>  为保证进程间有序运行，对于系统间的这些资源，必须由系统实施统一分配。</p></li><li><p>同步关系</p><p>  某些程序执行某些任务时会建立两个或更多的进程。这些进程为了完成同一任务而相互合作。</p></li></ul><blockquote><p>  协作进程间  的制约关系即进程同步。根据上述可分为互斥关系与同步关系，且互斥输入同步。同步强调保证进程之间操作的先后次序的约束，而互斥强调对共享资源的互斥访问。</p></blockquote><h2 id="2-0-软件同步机制"><a href="#2-0-软件同步机制" class="headerlink" title="2.0 软件同步机制"></a>2.0 软件同步机制</h2><h2 id="3-0-硬件同步机制"><a href="#3-0-硬件同步机制" class="headerlink" title="3.0 硬件同步机制"></a>3.0 硬件同步机制</h2><h2 id="4-0-信号量机制"><a href="#4-0-信号量机制" class="headerlink" title="4.0 信号量机制"></a>4.0 信号量机制</h2><h2 id="5-0-管程机制"><a href="#5-0-管程机制" class="headerlink" title="5.0 管程机制"></a>5.0 管程机制</h2><h4 id="5-1-1-定义"><a href="#5-1-1-定义" class="headerlink" title="5.1.1 定义"></a>5.1.1 定义</h4><p>对于系统中的各种硬件资源和软件资源，忽略他们的内部结构和实现细节，利用数据结构抽象地描述他们的资源特性。即用少量信息和对此资源所执行的操作来表征该资源。于是，利用共享数据结构抽象地表示系统中的共享资源，并且将对该共享数据结构实施的特定操作定义为一组过程。</p><h4 id="5-1-2-机理"><a href="#5-1-2-机理" class="headerlink" title="5.1.2 机理"></a>5.1.2 机理</h4><p>进程对共享资源的申请、释放和相关操作，必须通过由这组过程间接地对共享数据结构进行操作加以实现</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git上传后缀名改变</title>
      <link href="/2021/09/26/git%E4%B8%8A%E4%BC%A0%E5%90%8E%E7%BC%80%E5%90%8D%E6%94%B9%E5%8F%98/"/>
      <url>/2021/09/26/git%E4%B8%8A%E4%BC%A0%E5%90%8E%E7%BC%80%E5%90%8D%E6%94%B9%E5%8F%98/</url>
      
        <content type="html"><![CDATA[<p>刚开始搞blog时遇到的奇葩问题。</p><hr><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>最开始是<code>jpg</code>结尾的图片，结果上传到仓库后发现是<code>JPG</code>。当时给我懵逼的。<br>后来就想着吧。jpg不给搞那就改成png，结果又<code>png</code>与<code>PNG</code>过不去.</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>找到 git 所操作仓库的配置文件。就是说，你操作不同的仓库，git会生成许多配置文件集。一般是隐藏的（win），需要开启显示隐藏文件。然后在此启动git命令行，或者启动后路径切换至此。</p><p>切换或打得开成功会如下图</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/%E7%AC%94%E8%AE%B0&amp;%E5%BF%83%E5%BE%97/git_png_error.png" style="zoom: 67%;"><p>输入以下命令，回车</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config core.ignorecase false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>git默认是大小写不敏感的。所以在你上传文件之后，如果第一次上传的是<code>abc.jpg</code> 那么，在以后上传<code>abc.JPG</code>时就会认为，这是一个文件。当然，图片文件是会替换的，但文件名是不会改变的。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（未完）进程与线程</title>
      <link href="/2021/09/22/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%BF%9B%E7%A8%8B/"/>
      <url>/2021/09/22/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-进程"><a href="#1-进程" class="headerlink" title="1. 进程"></a>1. 进程</h2><h3 id="1-1-进程定义"><a href="#1-1-进程定义" class="headerlink" title="1.1 进程定义"></a>1.1 进程定义</h3><p>​    进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</p><p>​    可固体为：</p><ul><li><p>进程是程序的一次执行。</p></li><li><p>进程是一个程序及其数据在处理机上顺序执行时所发生的活动。</p></li><li><p>进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。</p></li></ul><h4 id="1-1-1进程控制块-PCB"><a href="#1-1-1进程控制块-PCB" class="headerlink" title="1.1.1进程控制块( PCB)"></a>1.1.1进程控制块( PCB)</h4><p>​    PCB ( process control block ) 是进程的一部分，是操作系统中最重要的记录型数据结构，是进程存在的唯一标志，常驻内存。</p><p>​    作用：</p><ul><li>作为独立运行基本单位的标志；</li><li>能实现间断性运行方式；</li><li>提供进程管理所需要的信息；</li><li>提供进程调度所需要的信息；</li><li>实现与其他进程的同步与通信。</li></ul><h3 id="1-2-进程的几个特征"><a href="#1-2-进程的几个特征" class="headerlink" title="1.2 进程的几个特征"></a>1.2 进程的几个特征</h3><ul><li>动态性（最基本的特征)–&gt;生命期</li><li>并发性–&gt;一段时间内同时运行</li><li>独立性–&gt;进程实体是一个能独立运行的基本单位,是系统中独立获得资     源和独立调度的基本单位</li><li>异步性–&gt;按各自独立的、不可预知的速度向前推进</li></ul><h3 id="1-3-进程的状态与转换"><a href="#1-3-进程的状态与转换" class="headerlink" title="1.3 进程的状态与转换"></a>1.3 进程的状态与转换</h3><ul><li><p>就绪状态</p><p>​    一个较大的程序通常都由若干个程序段组成，程序在执行时，必须按照某种先后次序逐个执行，仅当前一操作执行完后，才能执行后继操作。</p></li><li><p>执行状态</p><p>​    已获得CPU，正在执行的状态</p></li><li><p>阻塞状态</p><p>​    正在执行的进程由于发生某事件而暂时无法继续执行的状态。如：请求I/O、申请缓冲空间</p></li></ul><div style="text-align:center"> <svg width="620" viewBox="0 0 620 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="294">    <defs></defs>    <g transform="translate(-146.87,-126.87)">        <g id="shape1" transform="translate(252.54,127.87)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M.0,40.0C.0,17.9,26.9,.0,60.0,.0C93.1,.0,120.0,17.9,120.0,40.0C120.0,62.1,93.1,80.0,60.0,80.0C26.9,80.0,.0,62.1,.0,40.0z"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:16.00pt">                <tspan y="47.6" x="38.4">就绪</tspan>            </text>        </g>        <g id="shape2" transform="translate(535.28,127.87)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M.0,40.0C.0,17.9,26.9,.0,60.0,.0C93.1,.0,120.0,17.9,120.0,40.0C120.0,62.1,93.1,80.0,60.0,80.0C26.9,80.0,.0,62.1,.0,40.0z"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:16.00pt">                <tspan y="47.6" x="38.4">执行</tspan>            </text>        </g>        <g id="shape3" transform="translate(396.85,340.16)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M.0,40.0C.0,17.9,26.9,.0,60.0,.0C93.1,.0,120.0,17.9,120.0,40.0C120.0,62.1,93.1,80.0,60.0,80.0C26.9,80.0,.0,62.1,.0,40.0z"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:16.00pt">                <tspan y="47.6" x="38.4">阻塞</tspan>            </text>        </g>        <g id="shape4" transform="translate(369.17,181.12)">            <path fill="none" stroke="#191919" d="M.0,.0L163.5,-0.0"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M163.5,-3.0L169.5,-0.0L163.5,3.0L163.5,-3.0" stroke-linecap="round"></path>            <rect y="-13.3" width="73.6" fill="#ffffff" x="55.5" height="24.0"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:14.00pt">                <tspan y="5.9" x="55.5">进程调度</tspan>            </text>        </g>        <g id="shape5" transform="translate(396.85,380.16)">            <path fill="none" stroke="#191919" d="M.0,.0L-81.7,-166.9"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M-84.4,-165.6L-84.3,-172.3L-79.0,-168.2L-84.4,-165.6" stroke-linecap="round"></path>            <rect y="-97.2" width="70.4" fill="#ffffff" x="-74.8" height="25.6"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="-76.4" x="-74.8">I/O完成</tspan>            </text>        </g>        <g id="shape6" transform="translate(552.43,195.87)">            <path fill="none" stroke="#191919" d="M.0,.0L-34.4,178.4"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M-31.5,179.0L-35.6,184.3L-37.4,177.8L-31.5,179.0" stroke-linecap="round"></path>            <rect y="66.4" width="70.4" fill="#ffffff" x="-49.8" height="25.6"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="87.2" x="-49.8">I/O请求</tspan>            </text>        </g>        <g id="shape7" transform="translate(542.40,148.95)">            <path fill="none" stroke="#191919" d="M.0,.0L-171.0,-0.0"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M-171.0,3.0L-177.0,-0.0L-171.0,-3.0L-171.0,3.0" stroke-linecap="round"></path>            <rect y="-14.3" width="80.0" fill="#ffffff" x="-119.3" height="25.6"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="6.5" x="-119.3">时间片完成</tspan>            </text>        </g>        <g id="shape8" transform="translate(640.69,194.01)">            <path fill="none" stroke="#191919" d="M.0,.0L62.7,140.7"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M65.4,139.4L65.1,146.1L59.9,141.9L65.4,139.4" stroke-linecap="round"></path>            <rect y="40.6" width="40.0" fill="#ffffff" x="5.5" height="25.6"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="61.4" x="5.5">释放</tspan>            </text>        </g>        <g id="shape9" transform="translate(268.07,194.73)">            <path fill="none" stroke="#191919" d=""></path>        </g>        <g id="shape10" transform="translate(207.87,340.16)">            <path fill="none" stroke="#191919" d="M.0,.0L57.2,-140.4"></path>            <path fill="#191919" stroke="#191919" stroke-width="1" d="M54.5,-141.5L59.5,-146.0L60.0,-139.3L54.5,-141.5" stroke-linecap="round"></path>            <rect y="-85.6" width="40.0" fill="#ffffff" x="10.1" height="25.6"></rect>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="-64.8" x="10.1">许可</tspan>            </text>        </g>        <g id="shape11" transform="translate(147.87,340.16)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M.0,40.0C.0,17.9,26.9,.0,60.0,.0C93.1,.0,120.0,17.9,120.0,40.0C120.0,62.1,93.1,80.0,60.0,80.0C26.9,80.0,.0,62.1,.0,40.0z"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="46.5" x="40.0">创建</tspan>            </text>        </g>        <g id="shape12" transform="translate(645.83,340.16)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M.0,40.0C.0,17.9,26.9,.0,60.0,.0C93.1,.0,120.0,17.9,120.0,40.0C120.0,62.1,93.1,80.0,60.0,80.0C26.9,80.0,.0,62.1,.0,40.0z"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:15.00pt">                <tspan y="46.5" x="40.0">终止</tspan>            </text>        </g>    </g></svg></div><h3 id="1-4-进程控制"><a href="#1-4-进程控制" class="headerlink" title="1.4 进程控制"></a>1.4 进程控制</h3><p>​    一般由OS内核中的原语实现，是进程管理的基本功能。</p><ul><li><p>进程创建</p></li><li><p>进程终止</p></li><li><p>进程阻塞与唤醒 </p></li><li><p>进程挂起与激活</p></li></ul><h4 id="1-4-1-进程创建"><a href="#1-4-1-进程创建" class="headerlink" title="1.4.1 进程创建"></a>1.4.1 进程创建</h4><p>  ​    引起进程创建的事件：用户登录、作业调度、提供服务、应用请求等。</p>  <pre class="mermaid">  graph LR  a[申请空白PCB]--&gt;b[分配所需资源]  b--&gt;c[初始化PCB]  c--&gt;d[插入就绪队列]</pre><h4 id="1-4-2-进程终止"><a href="#1-4-2-进程终止" class="headerlink" title="1.4.2 进程终止"></a>1.4.2 进程终止</h4><p>  ​    引起进程终止的事件：正常结束、异常结束、外界干预等。</p><p>  ​    </p><h4 id="1-4-3-进程阻塞与唤醒"><a href="#1-4-3-进程阻塞与唤醒" class="headerlink" title="1.4.3 进程阻塞与唤醒"></a>1.4.3 进程阻塞与唤醒</h4><p>  ​    向系统请求共享资源失败、等待某种操作的完成、新数据尚未到达、等待新任务的到达等。</p><p>  ​    阻塞唤醒需要成对使用。</p><ul><li><p>阻塞：</p><p>​    进程的阻塞是进程自身的一种主动行为。</p><pre class="mermaid">    graph LRa[停止执行]--&gt;b[状态由执行改为阻塞]b--&gt;c[将PCB插入阻塞队列]</pre></li><li><p>唤醒：</p><pre class="mermaid">    graph LRa[从阻塞队列中移出]--&gt;b[状态由阻塞改为就绪]b--&gt;c[将PCB插入就绪队列]</pre></li></ul><h4 id="1-4-4-进程挂起与激活"><a href="#1-4-4-进程挂起与激活" class="headerlink" title="1.4.4 进程挂起与激活"></a>1.4.4 进程挂起与激活</h4>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 进程 </tag>
            
            <tag> 线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(未完)计算机怎么计算四则运算(定点)</title>
      <link href="/2021/09/15/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%EF%BC%88%E5%AE%9A%E7%82%B9%EF%BC%89/"/>
      <url>/2021/09/15/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%EF%BC%88%E5%AE%9A%E7%82%B9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="加-●’◡’●-加"><a href="#加-●’◡’●-加" class="headerlink" title="加 (●’◡’●) 加"></a>加 (●’◡’●) 加</h2><h3 id="1-整数相加。"><a href="#1-整数相加。" class="headerlink" title="1.整数相加。"></a>1.整数相加。</h3><ul><li><p>两个数全为正数，二进制形式数直接相加。</p><p>如：x=10<sub>D</sub>=01010<sub>O</sub>,y=15<sub>D</sub>=01111<sub>O</sub>,计算x+y.</p><p>则直接同位相加,以八位（根据实际数据类型而定）数据位计算，x=0000 1010 ,y=0000 1111</p><pre><code>  0000 1010 +0000 1111 ----------  0001 1001</code></pre><p>​    0001 1001<sub>O</sub>=25<sub>D</sub> </p></li><li><p>两数有负数，用补码运算。</p><p>如：x= -10<sub>D</sub>,y=15<sub>D</sub>,计算x+y.</p><p>同样用八位举例。</p><p>[x]<sub>原</sub>=1000 1010, [y]<sub>补</sub>=[y]<sub>原</sub>=0000 1111,</p><p>[x]<sub>补</sub>=1111 0110,</p><pre><code>  1111 0110 +0000 1111 ----------  0000 0101</code></pre><p><mark>此时算出结果是补码</mark>&gt;，故需要首先进行求反码的逆运算。即先看首位，如果是 <code>0</code> ,则无需变动。否则末尾减一，除符号位外，其它位求反。</p><p>​    0000 0101<sub>O</sub>=5<sub>D</sub> </p></li></ul><hr><h3 id="2-小数相加。"><a href="#2-小数相加。" class="headerlink" title="2. 小数相加。"></a>2. 小数相加。</h3><hr><h2 id="●’◡’●-减-●’◡’●"><a href="#●’◡’●-减-●’◡’●" class="headerlink" title="(●’◡’●) 减 (●’◡’●)"></a>(●’◡’●) 减 (●’◡’●)</h2><h3 id="1-整数减"><a href="#1-整数减" class="headerlink" title="1. 整数减"></a>1. 整数减</h3><p>无论正负，两数相减皆为两数的补码相加。就是这么神奇，不信下边举个例子。</p><h2 id="●’◡’●-乘-●’◡’●-乘-●’◡’●"><a href="#●’◡’●-乘-●’◡’●-乘-●’◡’●" class="headerlink" title="(●’◡’●) 乘 (●’◡’●) 乘 (●’◡’●)"></a>(●’◡’●) 乘 (●’◡’●) 乘 (●’◡’●)</h2><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>用原码进行乘法运算。在定点计算机中，用两个原码表示的数相乘，乘积的符号由两数的符号位异或（         ）得到，乘积的数值部分是两数的绝对值相乘之积。即，原码的乘法的实质是两个正数相乘。<br>         其运算规则是： 根据乘数Y绝对值每个数位上的值Yi是“1”还是“0”(从最低位Y0开始)，决定本次部分积是加上被乘数X的绝对值，还是加上全“0”，得到的新部分积右移一位，再重复上面的动作，直到乘法做完为止。</p><h2 id="●’◡’●-除-●’◡’●-除-●’◡’●-除-●’◡’●"><a href="#●’◡’●-除-●’◡’●-除-●’◡’●-除-●’◡’●" class="headerlink" title="(●’◡’●) 除 (●’◡’●) 除 (●’◡’●) 除 (●’◡’●)"></a>(●’◡’●) 除 (●’◡’●) 除 (●’◡’●) 除 (●’◡’●)</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
            <tag> 二进制运算 </tag>
            
            <tag> 定点运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(未完)计算机怎么进行四则运算（浮点）</title>
      <link href="/2021/09/15/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%EF%BC%88%E6%B5%AE%E7%82%B9%EF%BC%89/"/>
      <url>/2021/09/15/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%EF%BC%88%E6%B5%AE%E7%82%B9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="加减"><a href="#加减" class="headerlink" title="加减"></a>加减</h2><ol><li><p>0操作数检查<br>浮点加减运算过程比定点运算过程复杂。如两操作数中有一个数为0,即没有必要再进行后续的一系列操作。</p></li><li><p>比较阶码大小并对阶<br>两浮点数加减,首先看两数的小数点位置是否对齐（阶码是否相同）。若阶码相同,表示小数点对齐,可进行尾数的加减运算。反之,若两数阶码不同,表示小数点位置没有对齐,此时必须使两数阶码相同,即对阶。</p><ul><li><p>对阶</p><p>​    先求两阶码差的绝对值，然后使小的阶码增加，其对应尾数右移相应的长度。之所以右移，是因为向左移的话如果最左位发生溢出，对数值影响较大。而向右移溢出时最末位丢失影响较小。<mark style="background-color:#57a2ed;padding:5px;border-radius:5px">想想你在乎你钱包余额的最左位还是最右位。</mark></p></li></ul></li></ol><ol start="3"><li></li><li><p>规格化</p><blockquote><p>  参考：<a href="https://zhuanlan.zhihu.com/p/372880386">浮点数的表示和规格化 - 知乎 </a></p></blockquote><p>  ​    <strong>左规：</strong>当浮点数运算的结果为非规格化时要进行规格化处理，将尾数算术左移一位、阶码减1(基数为2时）的方法称为左规，左归可能要进行多次。</p><p>  ​    <strong>右规：</strong>当浮点数运算的结果尾数出现溢出（双符号位为01或10)时，将尾数算术右移一位、阶码加1（基数为2时）的方法称为右规。需要右归时，只需进行一次。</p><p>  规格化浮点数的尾数M的绝对值应满足条件1/r≤|M|≤1。若r=2，则有1/2≤ |M|≤1。规格化表示的尾数形式如下。</p><p>  ​    <strong>1）原码规格化后。</strong></p><p>  ​        ● 正数为0.1××…×的形式，其最大值表示为0.11…1，最小值表示为0.100…0。尾数的表示范围为1/2≤M≤(1-2)。</p><p>  ​        ● 负数为1.1××…×的形式，其最大值表示为1.10…0，最小值表示为1.11…1。尾数的表示范围为-(1-2)≤M≤-1/2。</p><p>  ​    <strong>2）补码规格化后。</strong></p><p>  ​        ● 正数为0.1××…×的形式，其最大值表示为0.11…1，最小值表示为0.100…0。尾数的表示范围为1/2≤M≤(1-2)。</p><p>  ​        ● 负数为1.0××…×的形式，其最大值表示为1.01…1，最小值表示为1.00…0。尾数的表示范围为-1≤M≤-(1/2＋2)。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
            <tag> 二进制运算 </tag>
            
            <tag> 定点运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（未完）溢出判断</title>
      <link href="/2021/09/09/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E6%BA%A2%E5%87%BA%E5%88%A4%E6%96%AD/"/>
      <url>/2021/09/09/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E6%BA%A2%E5%87%BA%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机中的数据</title>
      <link href="/2021/09/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0/"/>
      <url>/2021/09/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>为了区别一般书写表示的数和机器中这些编码表示的数,通常将前者称为真值,后者称为机器<br>数或机器码。类似于<code>-01110</code>、<code>+1001000</code>等就是真值。即前有<code>±</code>号，后有<code>0</code> <code>1</code>。。而机器码就是全部的 <code>0</code> <code>1</code>。</p><hr><h2 id="1-原码"><a href="#1-原码" class="headerlink" title="1. 原码"></a>1. 原码</h2><p>首先，原码没有<code>±</code>号。即<code>-01101</code> 与<code>+10010</code> 等属于真值。</p><p>原码是最左侧第一位作为符号位 ，0表示正数，1表示负数；其余各位等与真值相同。</p><p>(-3)<sub>D</sub> =(1110)<sub>原</sub> =(-110)<sub>真值</sub> </p><p>特别的：（0）<sub>D</sub> = (0000)<sub>原</sub>=1000<sub>原</sub> </p><h2 id="2-反码"><a href="#2-反码" class="headerlink" title="2. 反码"></a>2. 反码</h2><p>符号位的用法及正数的表示与“原码”相同；负数的表示是在“原码”表示的基础上，将符号位以外的各位取反。</p><p>特别的 “0” 。</p><p>（+5）<sub>D</sub>=  (0101)<sub>原</sub>=(0010)<sub>反</sub></p><p>（-5）<sub>D</sub>=  (1101)<sub>原</sub>=(1010)<sub>反</sub></p><p>  ( 0 )  <sub>D</sub>=  (0000)<sub>原</sub>=(0111)<sub>反</sub></p><p>​            =  (1000)<sub>原</sub>=(1111)<sub>反</sub></p><h2 id="3-补码"><a href="#3-补码" class="headerlink" title="3. 补码"></a>3. 补码</h2><p>​        符号位的用法及正数的表示与“原码”相同；负数的表示是在“反码”表示的基础上，通过加1来获得的。</p><p><u>巧的是，当原码为负时，补码即此负数对字节长所表示最大数（无符号位）取余。另，如果真值为负，则可对每一位求反得出补码。即，当真值小于零，原码与补码的各位相加，所有位皆为<code>0</code></u></p><p>(-3)=(1011) <sub>原</sub> (1100)<sub>反</sub>   (1101) <sub>补</sub> 。</p><p>( 0 )  <sub>D</sub> =  (0000)<sub>原</sub> = (0111)<sub>反</sub>  =  (1000)<sub>原</sub>=(1111)<sub>反</sub>=(0000)<sub>补</sub></p><p>​    等价于： -3 %16  = 13 -&gt; <code>1101</code> <sub>原码</sub></p><h2 id="4-移码"><a href="#4-移码" class="headerlink" title="4.移码"></a>4.移码</h2><p>移码通常用于表示浮点数的阶码，32位浮点数中阶码范围为。先抛个公式，<br>$$<br>[e]_移=2^k+e，2^k&gt;e≥-2^k,([e]_移为机器码，e为真值，k为数据长度，如此移码为八位)<br>$$<br>在同一前提、环境下，k不变，比如在32位浮点数中，k为7（因为有一位需要表示正负，同时，）。举个计算例子。</p><p>​            在一八位的移码标准下。(+100110)<sub>真值</sub>=2<sup>8</sup> + 100110=1 010 0110。</p><p>​                                                    (- 110110)<sub>真值</sub>=2<sup>8</sup> -  110110=0 100 1010。       </p><p>其中，最左侧为符号位。正好与其他几种码相反。</p><h2 id="5-ASCII-码"><a href="#5-ASCII-码" class="headerlink" title="5.  ASCII 码"></a>5.  ASCII 码</h2><h3 id="5-1-常用-ASCII-码"><a href="#5-1-常用-ASCII-码" class="headerlink" title="5.1 常用 ASCII 码"></a>5.1 常用 ASCII 码</h3><table><thead><tr><th align="right">DEC</th><th align="right">OCT</th><th align="right">HEX</th><th align="right">BIN</th><th align="center">缩写/符号</th><th align="center">HTML实体</th><th align="left">描述</th></tr></thead><tbody><tr><td align="right">0</td><td align="right">000</td><td align="right">00</td><td align="right">00000000</td><td align="center">NUL</td><td align="center">&amp;#000;</td><td align="left">Null char (空字符)</td></tr><tr><td align="right">1</td><td align="right">001</td><td align="right">01</td><td align="right">00000001</td><td align="center">SOH</td><td align="center">&amp;#001;</td><td align="left">Start of Heading (标题开始)</td></tr><tr><td align="right">2</td><td align="right">002</td><td align="right">02</td><td align="right">00000010</td><td align="center">STX</td><td align="center">&amp;#002;</td><td align="left">Start of Text (正文开始)</td></tr><tr><td align="right">3</td><td align="right">003</td><td align="right">03</td><td align="right">00000011</td><td align="center">ETX</td><td align="center">&amp;#003;</td><td align="left">End of Text (正文结束)</td></tr><tr><td align="right">4</td><td align="right">004</td><td align="right">04</td><td align="right">00000100</td><td align="center">EOT</td><td align="center">&amp;#004;</td><td align="left">End of Transmission (传输结束)</td></tr><tr><td align="right">5</td><td align="right">005</td><td align="right">05</td><td align="right">00000101</td><td align="center">ENQ</td><td align="center">&amp;#005;</td><td align="left">Enquiry (请求)</td></tr><tr><td align="right">6</td><td align="right">006</td><td align="right">06</td><td align="right">00000110</td><td align="center">ACK</td><td align="center">&amp;#006;</td><td align="left">Acknowledgment (收到通知)</td></tr><tr><td align="right">7</td><td align="right">007</td><td align="right">07</td><td align="right">00000111</td><td align="center">BEL</td><td align="center">&amp;#007;</td><td align="left">Bell (响铃)</td></tr><tr><td align="right">8</td><td align="right">010</td><td align="right">08</td><td align="right">00001000</td><td align="center">BS</td><td align="center">&amp;#008;</td><td align="left">Back Space (退格)</td></tr><tr><td align="right">9</td><td align="right">011</td><td align="right">09</td><td align="right">00001001</td><td align="center">HT</td><td align="center">&amp;#009;</td><td align="left">Horizontal Tab (水平制表符)</td></tr><tr><td align="right">10</td><td align="right">012</td><td align="right">0A</td><td align="right">00001010</td><td align="center">LF</td><td align="center">&amp;#010;</td><td align="left">Line Feed (换行键)</td></tr><tr><td align="right">11</td><td align="right">013</td><td align="right">0B</td><td align="right">00001011</td><td align="center">VT</td><td align="center">&amp;#011;</td><td align="left">Vertical Tab (垂直制表符)</td></tr><tr><td align="right">12</td><td align="right">014</td><td align="right">0C</td><td align="right">00001100</td><td align="center">FF</td><td align="center">&amp;#012;</td><td align="left">Form Feed (换页键)</td></tr><tr><td align="right">13</td><td align="right">015</td><td align="right">0D</td><td align="right">00001101</td><td align="center">CR</td><td align="center">&amp;#013;</td><td align="left">Carriage Return (回车键)</td></tr><tr><td align="right">14</td><td align="right">016</td><td align="right">0E</td><td align="right">00001110</td><td align="center">SO</td><td align="center">&amp;#014;</td><td align="left">Shift Out / X-On (不用切换)</td></tr><tr><td align="right">15</td><td align="right">017</td><td align="right">0F</td><td align="right">00001111</td><td align="center">SI</td><td align="center">&amp;#015;</td><td align="left">Shift In / X-Off (启用切换)</td></tr><tr><td align="right">16</td><td align="right">020</td><td align="right">10</td><td align="right">00010000</td><td align="center">DLE</td><td align="center">&amp;#016;</td><td align="left">Data Line Escape (数据链路转义)</td></tr><tr><td align="right">17</td><td align="right">021</td><td align="right">11</td><td align="right">00010001</td><td align="center">DC1</td><td align="center">&amp;#017;</td><td align="left">Device Control 1 (设备控制1)</td></tr><tr><td align="right">18</td><td align="right">022</td><td align="right">12</td><td align="right">00010010</td><td align="center">DC2</td><td align="center">&amp;#018;</td><td align="left">Device Control 2 (设备控制2)</td></tr><tr><td align="right">19</td><td align="right">023</td><td align="right">13</td><td align="right">00010011</td><td align="center">DC3</td><td align="center">&amp;#019;</td><td align="left">Device Control 3 (设备控制3)</td></tr><tr><td align="right">20</td><td align="right">024</td><td align="right">14</td><td align="right">00010100</td><td align="center">DC4</td><td align="center">&amp;#020;</td><td align="left">Device Control 4 (设备控制4)</td></tr><tr><td align="right">21</td><td align="right">025</td><td align="right">15</td><td align="right">00010101</td><td align="center">NAK</td><td align="center">&amp;#021;</td><td align="left">Negative Acknowledgement (拒绝接收)</td></tr><tr><td align="right">22</td><td align="right">026</td><td align="right">16</td><td align="right">00010110</td><td align="center">SYN</td><td align="center">&amp;#022;</td><td align="left">Synchronous Idle (同步空闲)</td></tr><tr><td align="right">23</td><td align="right">027</td><td align="right">17</td><td align="right">00010111</td><td align="center">ETB</td><td align="center">&amp;#023;</td><td align="left">End of Transmit Block (传输块结束)</td></tr><tr><td align="right">24</td><td align="right">030</td><td align="right">18</td><td align="right">00011000</td><td align="center">CAN</td><td align="center">&amp;#024;</td><td align="left">Cancel (取消)</td></tr><tr><td align="right">25</td><td align="right">031</td><td align="right">19</td><td align="right">00011001</td><td align="center">EM</td><td align="center">&amp;#025;</td><td align="left">End of Medium (介质中断)</td></tr><tr><td align="right">26</td><td align="right">032</td><td align="right">1A</td><td align="right">00011010</td><td align="center">SUB</td><td align="center">&amp;#026;</td><td align="left">Substitute (替补)</td></tr><tr><td align="right">27</td><td align="right">033</td><td align="right">1B</td><td align="right">00011011</td><td align="center">ESC</td><td align="center">&amp;#027;</td><td align="left">Escape (溢出)</td></tr><tr><td align="right">28</td><td align="right">034</td><td align="right">1C</td><td align="right">00011100</td><td align="center">FS</td><td align="center">&amp;#028;</td><td align="left">File Separator (文件分割符)</td></tr><tr><td align="right">29</td><td align="right">035</td><td align="right">1D</td><td align="right">00011101</td><td align="center">GS</td><td align="center">&amp;#029;</td><td align="left">Group Separator (分组符)</td></tr><tr><td align="right">30</td><td align="right">036</td><td align="right">1E</td><td align="right">00011110</td><td align="center">RS</td><td align="center">&amp;#030;</td><td align="left">Record Separator (记录分离符)</td></tr><tr><td align="right">31</td><td align="right">037</td><td align="right">1F</td><td align="right">00011111</td><td align="center">US</td><td align="center">&amp;#031;</td><td align="left">Unit Separator (单元分隔符)</td></tr><tr><td align="right">32</td><td align="right">040</td><td align="right">20</td><td align="right">00100000</td><td align="center"></td><td align="center">&amp;#32;</td><td align="left">Space (空格)</td></tr><tr><td align="right">33</td><td align="right">041</td><td align="right">21</td><td align="right">00100001</td><td align="center">!</td><td align="center">&amp;#33;</td><td align="left">Exclamation mark</td></tr><tr><td align="right">34</td><td align="right">042</td><td align="right">22</td><td align="right">00100010</td><td align="center">“</td><td align="center">&amp;#34;</td><td align="left">Double quotes</td></tr><tr><td align="right">35</td><td align="right">043</td><td align="right">23</td><td align="right">00100011</td><td align="center">#</td><td align="center">&amp;#35;</td><td align="left">Number</td></tr><tr><td align="right">36</td><td align="right">044</td><td align="right">24</td><td align="right">00100100</td><td align="center">$</td><td align="center">&amp;#36;</td><td align="left">Dollar</td></tr><tr><td align="right">37</td><td align="right">045</td><td align="right">25</td><td align="right">00100101</td><td align="center">%</td><td align="center">&amp;#37;</td><td align="left">Procenttecken</td></tr><tr><td align="right">38</td><td align="right">046</td><td align="right">26</td><td align="right">00100110</td><td align="center">&amp;</td><td align="center">&amp;#38;</td><td align="left">Ampersand</td></tr><tr><td align="right">39</td><td align="right">047</td><td align="right">27</td><td align="right">00100111</td><td align="center">‘</td><td align="center">&amp;#39;</td><td align="left">Single quote</td></tr><tr><td align="right">40</td><td align="right">050</td><td align="right">28</td><td align="right">00101000</td><td align="center">(</td><td align="center">&amp;#40;</td><td align="left">Open parenthesis</td></tr><tr><td align="right">41</td><td align="right">051</td><td align="right">29</td><td align="right">00101001</td><td align="center">)</td><td align="center">&amp;#41;</td><td align="left">Close parenthesis</td></tr><tr><td align="right">42</td><td align="right">052</td><td align="right">2A</td><td align="right">00101010</td><td align="center">*</td><td align="center">&amp;#42;</td><td align="left">Asterisk</td></tr><tr><td align="right">43</td><td align="right">053</td><td align="right">2B</td><td align="right">00101011</td><td align="center">+</td><td align="center">&amp;#43;</td><td align="left">Plus</td></tr><tr><td align="right">44</td><td align="right">054</td><td align="right">2C</td><td align="right">00101100</td><td align="center">,</td><td align="center">&amp;#44;</td><td align="left">Comma</td></tr><tr><td align="right">45</td><td align="right">055</td><td align="right">2D</td><td align="right">00101101</td><td align="center">-</td><td align="center">&amp;#45;</td><td align="left">Hyphen</td></tr><tr><td align="right">46</td><td align="right">056</td><td align="right">2E</td><td align="right">00101110</td><td align="center">.</td><td align="center">&amp;#46;</td><td align="left">Period, dot or full stop</td></tr><tr><td align="right">47</td><td align="right">057</td><td align="right">2F</td><td align="right">00101111</td><td align="center">/</td><td align="center">&amp;#47;</td><td align="left">Slash or divide</td></tr><tr><td align="right">48</td><td align="right">060</td><td align="right">30</td><td align="right">00110000</td><td align="center">0</td><td align="center">&amp;#48;</td><td align="left">Zero</td></tr><tr><td align="right">49</td><td align="right">061</td><td align="right">31</td><td align="right">00110001</td><td align="center">1</td><td align="center">&amp;#49;</td><td align="left">One</td></tr><tr><td align="right">50</td><td align="right">062</td><td align="right">32</td><td align="right">00110010</td><td align="center">2</td><td align="center">&amp;#50;</td><td align="left">Two</td></tr><tr><td align="right">51</td><td align="right">063</td><td align="right">33</td><td align="right">00110011</td><td align="center">3</td><td align="center">&amp;#51;</td><td align="left">Three</td></tr><tr><td align="right">52</td><td align="right">064</td><td align="right">34</td><td align="right">00110100</td><td align="center">4</td><td align="center">&amp;#52;</td><td align="left">Four</td></tr><tr><td align="right">53</td><td align="right">065</td><td align="right">35</td><td align="right">00110101</td><td align="center">5</td><td align="center">&amp;#53;</td><td align="left">Five</td></tr><tr><td align="right">54</td><td align="right">066</td><td align="right">36</td><td align="right">00110110</td><td align="center">6</td><td align="center">&amp;#54;</td><td align="left">Six</td></tr><tr><td align="right">55</td><td align="right">067</td><td align="right">37</td><td align="right">00110111</td><td align="center">7</td><td align="center">&amp;#55;</td><td align="left">Seven</td></tr><tr><td align="right">56</td><td align="right">070</td><td align="right">38</td><td align="right">00111000</td><td align="center">8</td><td align="center">&amp;#56;</td><td align="left">Eight</td></tr><tr><td align="right">57</td><td align="right">071</td><td align="right">39</td><td align="right">00111001</td><td align="center">9</td><td align="center">&amp;#57;</td><td align="left">Nine</td></tr><tr><td align="right">58</td><td align="right">072</td><td align="right">3A</td><td align="right">00111010</td><td align="center">:</td><td align="center">&amp;#58;</td><td align="left">Colon</td></tr><tr><td align="right">59</td><td align="right">073</td><td align="right">3B</td><td align="right">00111011</td><td align="center">;</td><td align="center">&amp;#59;</td><td align="left">Semicolon</td></tr><tr><td align="right">60</td><td align="right">074</td><td align="right">3C</td><td align="right">00111100</td><td align="center">&lt;</td><td align="center">&amp;#60;</td><td align="left">Less than</td></tr><tr><td align="right">61</td><td align="right">075</td><td align="right">3D</td><td align="right">00111101</td><td align="center">=</td><td align="center">&amp;#61;</td><td align="left">Equals</td></tr><tr><td align="right">62</td><td align="right">076</td><td align="right">3E</td><td align="right">00111110</td><td align="center">&gt;</td><td align="center">&amp;#62;</td><td align="left">Greater than</td></tr><tr><td align="right">63</td><td align="right">077</td><td align="right">3F</td><td align="right">00111111</td><td align="center">?</td><td align="center">&amp;#63;</td><td align="left">Question mark</td></tr><tr><td align="right">64</td><td align="right">100</td><td align="right">40</td><td align="right">01000000</td><td align="center">@</td><td align="center">&amp;#64;</td><td align="left">At symbol</td></tr><tr><td align="right">65</td><td align="right">101</td><td align="right">41</td><td align="right">01000001</td><td align="center">A</td><td align="center">&amp;#65;</td><td align="left">Uppercase A</td></tr><tr><td align="right">66</td><td align="right">102</td><td align="right">42</td><td align="right">01000010</td><td align="center">B</td><td align="center">&amp;#66;</td><td align="left">Uppercase B</td></tr><tr><td align="right">67</td><td align="right">103</td><td align="right">43</td><td align="right">01000011</td><td align="center">C</td><td align="center">&amp;#67;</td><td align="left">Uppercase C</td></tr><tr><td align="right">68</td><td align="right">104</td><td align="right">44</td><td align="right">01000100</td><td align="center">D</td><td align="center">&amp;#68;</td><td align="left">Uppercase D</td></tr><tr><td align="right">69</td><td align="right">105</td><td align="right">45</td><td align="right">01000101</td><td align="center">E</td><td align="center">&amp;#69;</td><td align="left">Uppercase E</td></tr><tr><td align="right">70</td><td align="right">106</td><td align="right">46</td><td align="right">01000110</td><td align="center">F</td><td align="center">&amp;#70;</td><td align="left">Uppercase F</td></tr><tr><td align="right">71</td><td align="right">107</td><td align="right">47</td><td align="right">01000111</td><td align="center">G</td><td align="center">&amp;#71;</td><td align="left">Uppercase G</td></tr><tr><td align="right">72</td><td align="right">110</td><td align="right">48</td><td align="right">01001000</td><td align="center">H</td><td align="center">&amp;#72;</td><td align="left">Uppercase H</td></tr><tr><td align="right">73</td><td align="right">111</td><td align="right">49</td><td align="right">01001001</td><td align="center">I</td><td align="center">&amp;#73;</td><td align="left">Uppercase I</td></tr><tr><td align="right">74</td><td align="right">112</td><td align="right">4A</td><td align="right">01001010</td><td align="center">J</td><td align="center">&amp;#74;</td><td align="left">Uppercase J</td></tr><tr><td align="right">75</td><td align="right">113</td><td align="right">4B</td><td align="right">01001011</td><td align="center">K</td><td align="center">&amp;#75;</td><td align="left">Uppercase K</td></tr><tr><td align="right">76</td><td align="right">114</td><td align="right">4C</td><td align="right">01001100</td><td align="center">L</td><td align="center">&amp;#76;</td><td align="left">Uppercase L</td></tr><tr><td align="right">77</td><td align="right">115</td><td align="right">4D</td><td align="right">01001101</td><td align="center">M</td><td align="center">&amp;#77;</td><td align="left">Uppercase M</td></tr><tr><td align="right">78</td><td align="right">116</td><td align="right">4E</td><td align="right">01001110</td><td align="center">N</td><td align="center">&amp;#78;</td><td align="left">Uppercase N</td></tr><tr><td align="right">79</td><td align="right">117</td><td align="right">4F</td><td align="right">01001111</td><td align="center">O</td><td align="center">&amp;#79;</td><td align="left">Uppercase O</td></tr><tr><td align="right">80</td><td align="right">120</td><td align="right">50</td><td align="right">01010000</td><td align="center">P</td><td align="center">&amp;#80;</td><td align="left">Uppercase P</td></tr><tr><td align="right">81</td><td align="right">121</td><td align="right">51</td><td align="right">01010001</td><td align="center">Q</td><td align="center">&amp;#81;</td><td align="left">Uppercase Q</td></tr><tr><td align="right">82</td><td align="right">122</td><td align="right">52</td><td align="right">01010010</td><td align="center">R</td><td align="center">&amp;#82;</td><td align="left">Uppercase R</td></tr><tr><td align="right">83</td><td align="right">123</td><td align="right">53</td><td align="right">01010011</td><td align="center">S</td><td align="center">&amp;#83;</td><td align="left">Uppercase S</td></tr><tr><td align="right">84</td><td align="right">124</td><td align="right">54</td><td align="right">01010100</td><td align="center">T</td><td align="center">&amp;#84;</td><td align="left">Uppercase T</td></tr><tr><td align="right">85</td><td align="right">125</td><td align="right">55</td><td align="right">01010101</td><td align="center">U</td><td align="center">&amp;#85;</td><td align="left">Uppercase U</td></tr><tr><td align="right">86</td><td align="right">126</td><td align="right">56</td><td align="right">01010110</td><td align="center">V</td><td align="center">&amp;#86;</td><td align="left">Uppercase V</td></tr><tr><td align="right">87</td><td align="right">127</td><td align="right">57</td><td align="right">01010111</td><td align="center">W</td><td align="center">&amp;#87;</td><td align="left">Uppercase W</td></tr><tr><td align="right">88</td><td align="right">130</td><td align="right">58</td><td align="right">01011000</td><td align="center">X</td><td align="center">&amp;#88;</td><td align="left">Uppercase X</td></tr><tr><td align="right">89</td><td align="right">131</td><td align="right">59</td><td align="right">01011001</td><td align="center">Y</td><td align="center">&amp;#89;</td><td align="left">Uppercase Y</td></tr><tr><td align="right">90</td><td align="right">132</td><td align="right">5A</td><td align="right">01011010</td><td align="center">Z</td><td align="center">&amp;#90;</td><td align="left">Uppercase Z</td></tr><tr><td align="right">91</td><td align="right">133</td><td align="right">5B</td><td align="right">01011011</td><td align="center">[</td><td align="center">&amp;#91;</td><td align="left">Opening bracket</td></tr><tr><td align="right">92</td><td align="right">134</td><td align="right">5C</td><td align="right">01011100</td><td align="center">\</td><td align="center">&amp;#92;</td><td align="left">Backslash</td></tr><tr><td align="right">93</td><td align="right">135</td><td align="right">5D</td><td align="right">01011101</td><td align="center">]</td><td align="center">&amp;#93;</td><td align="left">Closing bracket</td></tr><tr><td align="right">94</td><td align="right">136</td><td align="right">5E</td><td align="right">01011110</td><td align="center">^</td><td align="center">&amp;#94;</td><td align="left">Caret - circumflex</td></tr><tr><td align="right">95</td><td align="right">137</td><td align="right">5F</td><td align="right">01011111</td><td align="center">_</td><td align="center">&amp;#95;</td><td align="left">Underscore</td></tr><tr><td align="right">96</td><td align="right">140</td><td align="right">60</td><td align="right">01100000</td><td align="center">`</td><td align="center">&amp;#96;</td><td align="left">Grave accent</td></tr><tr><td align="right">97</td><td align="right">141</td><td align="right">61</td><td align="right">01100001</td><td align="center">a</td><td align="center">&amp;#97;</td><td align="left">Lowercase a</td></tr><tr><td align="right">98</td><td align="right">142</td><td align="right">62</td><td align="right">01100010</td><td align="center">b</td><td align="center">&amp;#98;</td><td align="left">Lowercase b</td></tr><tr><td align="right">99</td><td align="right">143</td><td align="right">63</td><td align="right">01100011</td><td align="center">c</td><td align="center">&amp;#99;</td><td align="left">Lowercase c</td></tr><tr><td align="right">100</td><td align="right">144</td><td align="right">64</td><td align="right">01100100</td><td align="center">d</td><td align="center">&amp;#100;</td><td align="left">Lowercase d</td></tr><tr><td align="right">101</td><td align="right">145</td><td align="right">65</td><td align="right">01100101</td><td align="center">e</td><td align="center">&amp;#101;</td><td align="left">Lowercase e</td></tr><tr><td align="right">102</td><td align="right">146</td><td align="right">66</td><td align="right">01100110</td><td align="center">f</td><td align="center">&amp;#102;</td><td align="left">Lowercase f</td></tr><tr><td align="right">103</td><td align="right">147</td><td align="right">67</td><td align="right">01100111</td><td align="center">g</td><td align="center">&amp;#103;</td><td align="left">Lowercase g</td></tr><tr><td align="right">104</td><td align="right">150</td><td align="right">68</td><td align="right">01101000</td><td align="center">h</td><td align="center">&amp;#104;</td><td align="left">Lowercase h</td></tr><tr><td align="right">105</td><td align="right">151</td><td align="right">69</td><td align="right">01101001</td><td align="center">i</td><td align="center">&amp;#105;</td><td align="left">Lowercase i</td></tr><tr><td align="right">106</td><td align="right">152</td><td align="right">6A</td><td align="right">01101010</td><td align="center">j</td><td align="center">&amp;#106;</td><td align="left">Lowercase j</td></tr><tr><td align="right">107</td><td align="right">153</td><td align="right">6B</td><td align="right">01101011</td><td align="center">k</td><td align="center">&amp;#107;</td><td align="left">Lowercase k</td></tr><tr><td align="right">108</td><td align="right">154</td><td align="right">6C</td><td align="right">01101100</td><td align="center">l</td><td align="center">&amp;#108;</td><td align="left">Lowercase l</td></tr><tr><td align="right">109</td><td align="right">155</td><td align="right">6D</td><td align="right">01101101</td><td align="center">m</td><td align="center">&amp;#109;</td><td align="left">Lowercase m</td></tr><tr><td align="right">110</td><td align="right">156</td><td align="right">6E</td><td align="right">01101110</td><td align="center">n</td><td align="center">&amp;#110;</td><td align="left">Lowercase n</td></tr><tr><td align="right">111</td><td align="right">157</td><td align="right">6F</td><td align="right">01101111</td><td align="center">o</td><td align="center">&amp;#111;</td><td align="left">Lowercase o</td></tr><tr><td align="right">112</td><td align="right">160</td><td align="right">70</td><td align="right">01110000</td><td align="center">p</td><td align="center">&amp;#112;</td><td align="left">Lowercase p</td></tr><tr><td align="right">113</td><td align="right">161</td><td align="right">71</td><td align="right">01110001</td><td align="center">q</td><td align="center">&amp;#113;</td><td align="left">Lowercase q</td></tr><tr><td align="right">114</td><td align="right">162</td><td align="right">72</td><td align="right">01110010</td><td align="center">r</td><td align="center">&amp;#114;</td><td align="left">Lowercase r</td></tr><tr><td align="right">115</td><td align="right">163</td><td align="right">73</td><td align="right">01110011</td><td align="center">s</td><td align="center">&amp;#115;</td><td align="left">Lowercase s</td></tr><tr><td align="right">116</td><td align="right">164</td><td align="right">74</td><td align="right">01110100</td><td align="center">t</td><td align="center">&amp;#116;</td><td align="left">Lowercase t</td></tr><tr><td align="right">117</td><td align="right">165</td><td align="right">75</td><td align="right">01110101</td><td align="center">u</td><td align="center">&amp;#117;</td><td align="left">Lowercase u</td></tr><tr><td align="right">118</td><td align="right">166</td><td align="right">76</td><td align="right">01110110</td><td align="center">v</td><td align="center">&amp;#118;</td><td align="left">Lowercase v</td></tr><tr><td align="right">119</td><td align="right">167</td><td align="right">77</td><td align="right">01110111</td><td align="center">w</td><td align="center">&amp;#119;</td><td align="left">Lowercase w</td></tr><tr><td align="right">120</td><td align="right">170</td><td align="right">78</td><td align="right">01111000</td><td align="center">x</td><td align="center">&amp;#120;</td><td align="left">Lowercase x</td></tr><tr><td align="right">121</td><td align="right">171</td><td align="right">79</td><td align="right">01111001</td><td align="center">y</td><td align="center">&amp;#121;</td><td align="left">Lowercase y</td></tr><tr><td align="right">122</td><td align="right">172</td><td align="right">7A</td><td align="right">01111010</td><td align="center">z</td><td align="center">&amp;#122;</td><td align="left">Lowercase z</td></tr><tr><td align="right">123</td><td align="right">173</td><td align="right">7B</td><td align="right">01111011</td><td align="center">{</td><td align="center">&amp;#123;</td><td align="left">Opening brace</td></tr><tr><td align="right">124</td><td align="right">174</td><td align="right">7C</td><td align="right">01111100</td><td align="center">|</td><td align="center">&amp;#124;</td><td align="left">Vertical bar</td></tr><tr><td align="right">125</td><td align="right">175</td><td align="right">7D</td><td align="right">01111101</td><td align="center">}</td><td align="center">&amp;#125;</td><td align="left">Closing brace</td></tr><tr><td align="right">126</td><td align="right">176</td><td align="right">7E</td><td align="right">01111110</td><td align="center">~</td><td align="center">&amp;#126;</td><td align="left">Equivalency sign (tilde)</td></tr><tr><td align="right">127</td><td align="right">177</td><td align="right">7F</td><td align="right">01111111</td><td align="center"></td><td align="center">&amp;#127;</td><td align="left">Delete</td></tr></tbody></table><h3 id="5-2-拓展ASCII码："><a href="#5-2-拓展ASCII码：" class="headerlink" title="5.2 拓展ASCII码："></a>5.2 拓展ASCII码：</h3><table><thead><tr><th align="right">DEC</th><th align="right">OCT</th><th align="right">HEX</th><th align="right">BIN</th><th align="center">缩写/符号</th><th align="center">HTML实体</th><th align="left">描述</th></tr></thead><tbody><tr><td align="right">128</td><td align="right">200</td><td align="right">80</td><td align="right">10000000</td><td align="center">€</td><td align="center">&amp;#128;</td><td align="left">Euro sign</td></tr><tr><td align="right">129</td><td align="right">201</td><td align="right">81</td><td align="right">10000001</td><td align="center"></td><td align="center"></td><td align="left"></td></tr><tr><td align="right">130</td><td align="right">202</td><td align="right">82</td><td align="right">10000010</td><td align="center">‚</td><td align="center">&amp;#130;</td><td align="left">Single low-9 quotation mark</td></tr><tr><td align="right">131</td><td align="right">203</td><td align="right">83</td><td align="right">10000011</td><td align="center">ƒ</td><td align="center">&amp;#131;</td><td align="left">Latin small letter f with hook</td></tr><tr><td align="right">132</td><td align="right">204</td><td align="right">84</td><td align="right">10000100</td><td align="center">„</td><td align="center">&amp;#132;</td><td align="left">Double low-9 quotation mark</td></tr><tr><td align="right">133</td><td align="right">205</td><td align="right">85</td><td align="right">10000101</td><td align="center">…</td><td align="center">&amp;#133;</td><td align="left">Horizontal ellipsis</td></tr><tr><td align="right">134</td><td align="right">206</td><td align="right">86</td><td align="right">10000110</td><td align="center">†</td><td align="center">&amp;#134;</td><td align="left">Dagger</td></tr><tr><td align="right">135</td><td align="right">207</td><td align="right">87</td><td align="right">10000111</td><td align="center">‡</td><td align="center">&amp;#135;</td><td align="left">Double dagger</td></tr><tr><td align="right">136</td><td align="right">210</td><td align="right">88</td><td align="right">10001000</td><td align="center">ˆ</td><td align="center">&amp;#136;</td><td align="left">Modifier letter circumflex accent</td></tr><tr><td align="right">137</td><td align="right">211</td><td align="right">89</td><td align="right">10001001</td><td align="center">‰</td><td align="center">&amp;#137;</td><td align="left">Per mille sign</td></tr><tr><td align="right">138</td><td align="right">212</td><td align="right">8A</td><td align="right">10001010</td><td align="center">Š</td><td align="center">&amp;#138;</td><td align="left">Latin capital letter S with caron</td></tr><tr><td align="right">139</td><td align="right">213</td><td align="right">8B</td><td align="right">10001011</td><td align="center">‹</td><td align="center">&amp;#139;</td><td align="left">Single left-pointing angle quotation</td></tr><tr><td align="right">140</td><td align="right">214</td><td align="right">8C</td><td align="right">10001100</td><td align="center">Œ</td><td align="center">&amp;#140;</td><td align="left">Latin capital ligature OE</td></tr><tr><td align="right">141</td><td align="right">215</td><td align="right">8D</td><td align="right">10001101</td><td align="center"></td><td align="center"></td><td align="left"></td></tr><tr><td align="right">142</td><td align="right">216</td><td align="right">8E</td><td align="right">10001110</td><td align="center">Ž</td><td align="center">&amp;#142;</td><td align="left">Latin capital letter Z with caron</td></tr><tr><td align="right">143</td><td align="right">217</td><td align="right">8F</td><td align="right">10001111</td><td align="center"></td><td align="center"></td><td align="left"></td></tr><tr><td align="right">144</td><td align="right">220</td><td align="right">90</td><td align="right">10010000</td><td align="center"></td><td align="center"></td><td align="left"></td></tr><tr><td align="right">145</td><td align="right">221</td><td align="right">91</td><td align="right">10010001</td><td align="center">‘</td><td align="center">&amp;#145;</td><td align="left">Left single quotation mark</td></tr><tr><td align="right">146</td><td align="right">222</td><td align="right">92</td><td align="right">10010010</td><td align="center">’</td><td align="center">&amp;#146;</td><td align="left">Right single quotation mark</td></tr><tr><td align="right">147</td><td align="right">223</td><td align="right">93</td><td align="right">10010011</td><td align="center">“</td><td align="center">&amp;#147;</td><td align="left">Left double quotation mark</td></tr><tr><td align="right">148</td><td align="right">224</td><td align="right">94</td><td align="right">10010100</td><td align="center">”</td><td align="center">&amp;#148;</td><td align="left">Right double quotation mark</td></tr><tr><td align="right">149</td><td align="right">225</td><td align="right">95</td><td align="right">10010101</td><td align="center">•</td><td align="center">&amp;#149;</td><td align="left">Bullet</td></tr><tr><td align="right">150</td><td align="right">226</td><td align="right">96</td><td align="right">10010110</td><td align="center">–</td><td align="center">&amp;#150;</td><td align="left">En dash</td></tr><tr><td align="right">151</td><td align="right">227</td><td align="right">97</td><td align="right">10010111</td><td align="center">—</td><td align="center">&amp;#151;</td><td align="left">Em dash</td></tr><tr><td align="right">152</td><td align="right">230</td><td align="right">98</td><td align="right">10011000</td><td align="center">˜</td><td align="center">&amp;#152;</td><td align="left">Small tilde</td></tr><tr><td align="right">153</td><td align="right">231</td><td align="right">99</td><td align="right">10011001</td><td align="center">™</td><td align="center">&amp;#153;</td><td align="left">Trade mark sign</td></tr><tr><td align="right">154</td><td align="right">232</td><td align="right">9A</td><td align="right">10011010</td><td align="center">š</td><td align="center">&amp;#154;</td><td align="left">Latin small letter S with caron</td></tr><tr><td align="right">155</td><td align="right">233</td><td align="right">9B</td><td align="right">10011011</td><td align="center">›</td><td align="center">&amp;#155;</td><td align="left">Single right-pointing angle quotation mark</td></tr><tr><td align="right">156</td><td align="right">234</td><td align="right">9C</td><td align="right">10011100</td><td align="center">œ</td><td align="center">&amp;#156;</td><td align="left">Latin small ligature oe</td></tr><tr><td align="right">157</td><td align="right">235</td><td align="right">9D</td><td align="right">10011101</td><td align="center"></td><td align="center"></td><td align="left"></td></tr><tr><td align="right">158</td><td align="right">236</td><td align="right">9E</td><td align="right">10011110</td><td align="center">ž</td><td align="center">&amp;#158;</td><td align="left">Latin small letter z with caron</td></tr><tr><td align="right">159</td><td align="right">237</td><td align="right">9F</td><td align="right">10011111</td><td align="center">Ÿ</td><td align="center">&amp;#159;</td><td align="left">Latin capital letter Y with diaeresis</td></tr><tr><td align="right">160</td><td align="right">240</td><td align="right">A0</td><td align="right">10100000</td><td align="center"></td><td align="center">&amp;#160;</td><td align="left">Non-breaking space</td></tr><tr><td align="right">161</td><td align="right">241</td><td align="right">A1</td><td align="right">10100001</td><td align="center">¡</td><td align="center">&amp;#161;</td><td align="left">Inverted exclamation mark</td></tr><tr><td align="right">162</td><td align="right">242</td><td align="right">A2</td><td align="right">10100010</td><td align="center">¢</td><td align="center">&amp;#162;</td><td align="left">Cent sign</td></tr><tr><td align="right">163</td><td align="right">243</td><td align="right">A3</td><td align="right">10100011</td><td align="center">£</td><td align="center">&amp;#163;</td><td align="left">Pound sign</td></tr><tr><td align="right">164</td><td align="right">244</td><td align="right">A4</td><td align="right">10100100</td><td align="center">¤</td><td align="center">&amp;#164;</td><td align="left">Currency sign</td></tr><tr><td align="right">165</td><td align="right">245</td><td align="right">A5</td><td align="right">10100101</td><td align="center">¥</td><td align="center">&amp;#165;</td><td align="left">Yen sign</td></tr><tr><td align="right">166</td><td align="right">246</td><td align="right">A6</td><td align="right">10100110</td><td align="center">¦</td><td align="center">&amp;#166;</td><td align="left">Pipe, Broken vertical bar</td></tr><tr><td align="right">167</td><td align="right">247</td><td align="right">A7</td><td align="right">10100111</td><td align="center">§</td><td align="center">&amp;#167;</td><td align="left">Section sign</td></tr><tr><td align="right">168</td><td align="right">250</td><td align="right">A8</td><td align="right">10101000</td><td align="center">¨</td><td align="center">&amp;#168;</td><td align="left">Spacing diaeresis - umlaut</td></tr><tr><td align="right">169</td><td align="right">251</td><td align="right">A9</td><td align="right">10101001</td><td align="center">©</td><td align="center">&amp;#169;</td><td align="left">Copyright sign</td></tr><tr><td align="right">170</td><td align="right">252</td><td align="right">AA</td><td align="right">10101010</td><td align="center">ª</td><td align="center">&amp;#170;</td><td align="left">Feminine ordinal indicator</td></tr><tr><td align="right">171</td><td align="right">253</td><td align="right">AB</td><td align="right">10101011</td><td align="center">«</td><td align="center">&amp;#171;</td><td align="left">Left double angle quotes</td></tr><tr><td align="right">172</td><td align="right">254</td><td align="right">AC</td><td align="right">10101100</td><td align="center">¬</td><td align="center">&amp;#172;</td><td align="left">Not sign</td></tr><tr><td align="right">173</td><td align="right">255</td><td align="right">AD</td><td align="right">10101101</td><td align="center">­</td><td align="center">&amp;#173;</td><td align="left">Soft hyphen</td></tr><tr><td align="right">174</td><td align="right">256</td><td align="right">AE</td><td align="right">10101110</td><td align="center">®</td><td align="center">&amp;#174;</td><td align="left">Registered trade mark sign</td></tr><tr><td align="right">175</td><td align="right">257</td><td align="right">AF</td><td align="right">10101111</td><td align="center">¯</td><td align="center">&amp;#175;</td><td align="left">Spacing macron - overline</td></tr><tr><td align="right">176</td><td align="right">260</td><td align="right">B0</td><td align="right">10110000</td><td align="center">°</td><td align="center">&amp;#176;</td><td align="left">Degree sign</td></tr><tr><td align="right">177</td><td align="right">261</td><td align="right">B1</td><td align="right">10110001</td><td align="center">±</td><td align="center">&amp;#177;</td><td align="left">Plus-or-minus sign</td></tr><tr><td align="right">178</td><td align="right">262</td><td align="right">B2</td><td align="right">10110010</td><td align="center">²</td><td align="center">&amp;#178;</td><td align="left">Superscript two - squared</td></tr><tr><td align="right">179</td><td align="right">263</td><td align="right">B3</td><td align="right">10110011</td><td align="center">³</td><td align="center">&amp;#179;</td><td align="left">Superscript three - cubed</td></tr><tr><td align="right">180</td><td align="right">264</td><td align="right">B4</td><td align="right">10110100</td><td align="center">´</td><td align="center">&amp;#180;</td><td align="left">Acute accent - spacing acute</td></tr><tr><td align="right">181</td><td align="right">265</td><td align="right">B5</td><td align="right">10110101</td><td align="center">µ</td><td align="center">&amp;#181;</td><td align="left">Micro sign</td></tr><tr><td align="right">182</td><td align="right">266</td><td align="right">B6</td><td align="right">10110110</td><td align="center">¶</td><td align="center">&amp;#182;</td><td align="left">Pilcrow sign - paragraph sign</td></tr><tr><td align="right">183</td><td align="right">267</td><td align="right">B7</td><td align="right">10110111</td><td align="center">·</td><td align="center">&amp;#183;</td><td align="left">Middle dot - Georgian comma</td></tr><tr><td align="right">184</td><td align="right">270</td><td align="right">B8</td><td align="right">10111000</td><td align="center">¸</td><td align="center">&amp;#184;</td><td align="left">Spacing cedilla</td></tr><tr><td align="right">185</td><td align="right">271</td><td align="right">B9</td><td align="right">10111001</td><td align="center">¹</td><td align="center">&amp;#185;</td><td align="left">Superscript one</td></tr><tr><td align="right">186</td><td align="right">272</td><td align="right">BA</td><td align="right">10111010</td><td align="center">º</td><td align="center">&amp;#186;</td><td align="left">Masculine ordinal indicator</td></tr><tr><td align="right">187</td><td align="right">273</td><td align="right">BB</td><td align="right">10111011</td><td align="center">»</td><td align="center">&amp;#187;</td><td align="left">Right double angle quotes</td></tr><tr><td align="right">188</td><td align="right">274</td><td align="right">BC</td><td align="right">10111100</td><td align="center">¼</td><td align="center">&amp;#188;</td><td align="left">Fraction one quarter</td></tr><tr><td align="right">189</td><td align="right">275</td><td align="right">BD</td><td align="right">10111101</td><td align="center">½</td><td align="center">&amp;#189;</td><td align="left">Fraction one half</td></tr><tr><td align="right">190</td><td align="right">276</td><td align="right">BE</td><td align="right">10111110</td><td align="center">¾</td><td align="center">&amp;#190;</td><td align="left">Fraction three quarters</td></tr><tr><td align="right">191</td><td align="right">277</td><td align="right">BF</td><td align="right">10111111</td><td align="center">¿</td><td align="center">&amp;#191;</td><td align="left">Inverted question mark</td></tr><tr><td align="right">192</td><td align="right">300</td><td align="right">C0</td><td align="right">11000000</td><td align="center">À</td><td align="center">&amp;#192;</td><td align="left">Latin capital letter A with grave</td></tr><tr><td align="right">193</td><td align="right">301</td><td align="right">C1</td><td align="right">11000001</td><td align="center">Á</td><td align="center">&amp;#193;</td><td align="left">Latin capital letter A with acute</td></tr><tr><td align="right">194</td><td align="right">302</td><td align="right">C2</td><td align="right">11000010</td><td align="center">Â</td><td align="center">&amp;#194;</td><td align="left">Latin capital letter A with circumflex</td></tr><tr><td align="right">195</td><td align="right">303</td><td align="right">C3</td><td align="right">11000011</td><td align="center">Ã</td><td align="center">&amp;#195;</td><td align="left">Latin capital letter A with tilde</td></tr><tr><td align="right">196</td><td align="right">304</td><td align="right">C4</td><td align="right">11000100</td><td align="center">Ä</td><td align="center">&amp;#196;</td><td align="left">Latin capital letter A with diaeresis</td></tr><tr><td align="right">197</td><td align="right">305</td><td align="right">C5</td><td align="right">11000101</td><td align="center">Å</td><td align="center">&amp;#197;</td><td align="left">Latin capital letter A with ring above</td></tr><tr><td align="right">198</td><td align="right">306</td><td align="right">C6</td><td align="right">11000110</td><td align="center">Æ</td><td align="center">&amp;#198;</td><td align="left">Latin capital letter AE</td></tr><tr><td align="right">199</td><td align="right">307</td><td align="right">C7</td><td align="right">11000111</td><td align="center">Ç</td><td align="center">&amp;#199;</td><td align="left">Latin capital letter C with cedilla</td></tr><tr><td align="right">200</td><td align="right">310</td><td align="right">C8</td><td align="right">11001000</td><td align="center">È</td><td align="center">&amp;#200;</td><td align="left">Latin capital letter E with grave</td></tr><tr><td align="right">201</td><td align="right">311</td><td align="right">C9</td><td align="right">11001001</td><td align="center">É</td><td align="center">&amp;#201;</td><td align="left">Latin capital letter E with acute</td></tr><tr><td align="right">202</td><td align="right">312</td><td align="right">CA</td><td align="right">11001010</td><td align="center">Ê</td><td align="center">&amp;#202;</td><td align="left">Latin capital letter E with circumflex</td></tr><tr><td align="right">203</td><td align="right">313</td><td align="right">CB</td><td align="right">11001011</td><td align="center">Ë</td><td align="center">&amp;#203;</td><td align="left">Latin capital letter E with diaeresis</td></tr><tr><td align="right">204</td><td align="right">314</td><td align="right">CC</td><td align="right">11001100</td><td align="center">Ì</td><td align="center">&amp;#204;</td><td align="left">Latin capital letter I with grave</td></tr><tr><td align="right">205</td><td align="right">315</td><td align="right">CD</td><td align="right">11001101</td><td align="center">Í</td><td align="center">&amp;#205;</td><td align="left">Latin capital letter I with acute</td></tr><tr><td align="right">206</td><td align="right">316</td><td align="right">CE</td><td align="right">11001110</td><td align="center">Î</td><td align="center">&amp;#206;</td><td align="left">Latin capital letter I with circumflex</td></tr><tr><td align="right">207</td><td align="right">317</td><td align="right">CF</td><td align="right">11001111</td><td align="center">Ï</td><td align="center">&amp;#207;</td><td align="left">Latin capital letter I with diaeresis</td></tr><tr><td align="right">208</td><td align="right">320</td><td align="right">D0</td><td align="right">11010000</td><td align="center">Ð</td><td align="center">&amp;#208;</td><td align="left">Latin capital letter ETH</td></tr><tr><td align="right">209</td><td align="right">321</td><td align="right">D1</td><td align="right">11010001</td><td align="center">Ñ</td><td align="center">&amp;#209;</td><td align="left">Latin capital letter N with tilde</td></tr><tr><td align="right">210</td><td align="right">322</td><td align="right">D2</td><td align="right">11010010</td><td align="center">Ò</td><td align="center">&amp;#210;</td><td align="left">Latin capital letter O with grave</td></tr><tr><td align="right">211</td><td align="right">323</td><td align="right">D3</td><td align="right">11010011</td><td align="center">Ó</td><td align="center">&amp;#211;</td><td align="left">Latin capital letter O with acute</td></tr><tr><td align="right">212</td><td align="right">324</td><td align="right">D4</td><td align="right">11010100</td><td align="center">Ô</td><td align="center">&amp;#212;</td><td align="left">Latin capital letter O with circumflex</td></tr><tr><td align="right">213</td><td align="right">325</td><td align="right">D5</td><td align="right">11010101</td><td align="center">Õ</td><td align="center">&amp;#213;</td><td align="left">Latin capital letter O with tilde</td></tr><tr><td align="right">214</td><td align="right">326</td><td align="right">D6</td><td align="right">11010110</td><td align="center">Ö</td><td align="center">&amp;#214;</td><td align="left">Latin capital letter O with diaeresis</td></tr><tr><td align="right">215</td><td align="right">327</td><td align="right">D7</td><td align="right">11010111</td><td align="center">×</td><td align="center">&amp;#215;</td><td align="left">Multiplication sign</td></tr><tr><td align="right">216</td><td align="right">330</td><td align="right">D8</td><td align="right">11011000</td><td align="center">Ø</td><td align="center">&amp;#216;</td><td align="left">Latin capital letter O with slash</td></tr><tr><td align="right">217</td><td align="right">331</td><td align="right">D9</td><td align="right">11011001</td><td align="center">Ù</td><td align="center">&amp;#217;</td><td align="left">Latin capital letter U with grave</td></tr><tr><td align="right">218</td><td align="right">332</td><td align="right">DA</td><td align="right">11011010</td><td align="center">Ú</td><td align="center">&amp;#218;</td><td align="left">Latin capital letter U with acute</td></tr><tr><td align="right">219</td><td align="right">333</td><td align="right">DB</td><td align="right">11011011</td><td align="center">Û</td><td align="center">&amp;#219;</td><td align="left">Latin capital letter U with circumflex</td></tr><tr><td align="right">220</td><td align="right">334</td><td align="right">DC</td><td align="right">11011100</td><td align="center">Ü</td><td align="center">&amp;#220;</td><td align="left">Latin capital letter U with diaeresis</td></tr><tr><td align="right">221</td><td align="right">335</td><td align="right">DD</td><td align="right">11011101</td><td align="center">Ý</td><td align="center">&amp;#221;</td><td align="left">Latin capital letter Y with acute</td></tr><tr><td align="right">222</td><td align="right">336</td><td align="right">DE</td><td align="right">11011110</td><td align="center">Þ</td><td align="center">&amp;#222;</td><td align="left">Latin capital letter THORN</td></tr><tr><td align="right">223</td><td align="right">337</td><td align="right">DF</td><td align="right">11011111</td><td align="center">ß</td><td align="center">&amp;#223;</td><td align="left">Latin small letter sharp s - ess-zed</td></tr><tr><td align="right">224</td><td align="right">340</td><td align="right">E0</td><td align="right">11100000</td><td align="center">à</td><td align="center">&amp;#224;</td><td align="left">Latin small letter a with grave</td></tr><tr><td align="right">225</td><td align="right">341</td><td align="right">E1</td><td align="right">11100001</td><td align="center">á</td><td align="center">&amp;#225;</td><td align="left">Latin small letter a with acute</td></tr><tr><td align="right">226</td><td align="right">342</td><td align="right">E2</td><td align="right">11100010</td><td align="center">â</td><td align="center">&amp;#226;</td><td align="left">Latin small letter a with circumflex</td></tr><tr><td align="right">227</td><td align="right">343</td><td align="right">E3</td><td align="right">11100011</td><td align="center">ã</td><td align="center">&amp;#227;</td><td align="left">Latin small letter a with tilde</td></tr><tr><td align="right">228</td><td align="right">344</td><td align="right">E4</td><td align="right">11100100</td><td align="center">ä</td><td align="center">&amp;#228;</td><td align="left">Latin small letter a with diaeresis</td></tr><tr><td align="right">229</td><td align="right">345</td><td align="right">E5</td><td align="right">11100101</td><td align="center">å</td><td align="center">&amp;#229;</td><td align="left">Latin small letter a with ring above</td></tr><tr><td align="right">230</td><td align="right">346</td><td align="right">E6</td><td align="right">11100110</td><td align="center">æ</td><td align="center">&amp;#230;</td><td align="left">Latin small letter ae</td></tr><tr><td align="right">231</td><td align="right">347</td><td align="right">E7</td><td align="right">11100111</td><td align="center">ç</td><td align="center">&amp;#231;</td><td align="left">Latin small letter c with cedilla</td></tr><tr><td align="right">232</td><td align="right">350</td><td align="right">E8</td><td align="right">11101000</td><td align="center">è</td><td align="center">&amp;#232;</td><td align="left">Latin small letter e with grave</td></tr><tr><td align="right">233</td><td align="right">351</td><td align="right">E9</td><td align="right">11101001</td><td align="center">é</td><td align="center">&amp;#233;</td><td align="left">Latin small letter e with acute</td></tr><tr><td align="right">234</td><td align="right">352</td><td align="right">EA</td><td align="right">11101010</td><td align="center">ê</td><td align="center">&amp;#234;</td><td align="left">Latin small letter e with circumflex</td></tr><tr><td align="right">235</td><td align="right">353</td><td align="right">EB</td><td align="right">11101011</td><td align="center">ë</td><td align="center">&amp;#235;</td><td align="left">Latin small letter e with diaeresis</td></tr><tr><td align="right">236</td><td align="right">354</td><td align="right">EC</td><td align="right">11101100</td><td align="center">ì</td><td align="center">&amp;#236;</td><td align="left">Latin small letter i with grave</td></tr><tr><td align="right">237</td><td align="right">355</td><td align="right">ED</td><td align="right">11101101</td><td align="center">í</td><td align="center">&amp;#237;</td><td align="left">Latin small letter i with acute</td></tr><tr><td align="right">238</td><td align="right">356</td><td align="right">EE</td><td align="right">11101110</td><td align="center">î</td><td align="center">&amp;#238;</td><td align="left">Latin small letter i with circumflex</td></tr><tr><td align="right">239</td><td align="right">357</td><td align="right">EF</td><td align="right">11101111</td><td align="center">ï</td><td align="center">&amp;#239;</td><td align="left">Latin small letter i with diaeresis</td></tr><tr><td align="right">240</td><td align="right">360</td><td align="right">F0</td><td align="right">11110000</td><td align="center">ð</td><td align="center">&amp;#240;</td><td align="left">Latin small letter eth</td></tr><tr><td align="right">241</td><td align="right">361</td><td align="right">F1</td><td align="right">11110001</td><td align="center">ñ</td><td align="center">&amp;#241;</td><td align="left">Latin small letter n with tilde</td></tr><tr><td align="right">242</td><td align="right">362</td><td align="right">F2</td><td align="right">11110010</td><td align="center">ò</td><td align="center">&amp;#242;</td><td align="left">Latin small letter o with grave</td></tr><tr><td align="right">243</td><td align="right">363</td><td align="right">F3</td><td align="right">11110011</td><td align="center">ó</td><td align="center">&amp;#243;</td><td align="left">Latin small letter o with acute</td></tr><tr><td align="right">244</td><td align="right">364</td><td align="right">F4</td><td align="right">11110100</td><td align="center">ô</td><td align="center">&amp;#244;</td><td align="left">Latin small letter o with circumflex</td></tr><tr><td align="right">245</td><td align="right">365</td><td align="right">F5</td><td align="right">11110101</td><td align="center">õ</td><td align="center">&amp;#245;</td><td align="left">Latin small letter o with tilde</td></tr><tr><td align="right">246</td><td align="right">366</td><td align="right">F6</td><td align="right">11110110</td><td align="center">ö</td><td align="center">&amp;#246;</td><td align="left">Latin small letter o with diaeresis</td></tr><tr><td align="right">247</td><td align="right">367</td><td align="right">F7</td><td align="right">11110111</td><td align="center">÷</td><td align="center">&amp;#247;</td><td align="left">Division sign</td></tr><tr><td align="right">248</td><td align="right">370</td><td align="right">F8</td><td align="right">11111000</td><td align="center">ø</td><td align="center">&amp;#248;</td><td align="left">Latin small letter o with slash</td></tr><tr><td align="right">249</td><td align="right">371</td><td align="right">F9</td><td align="right">11111001</td><td align="center">ù</td><td align="center">&amp;#249;</td><td align="left">Latin small letter u with grave</td></tr><tr><td align="right">250</td><td align="right">372</td><td align="right">FA</td><td align="right">11111010</td><td align="center">ú</td><td align="center">&amp;#250;</td><td align="left">Latin small letter u with acute</td></tr><tr><td align="right">251</td><td align="right">373</td><td align="right">FB</td><td align="right">11111011</td><td align="center">û</td><td align="center">&amp;#251;</td><td align="left">Latin small letter u with circumflex</td></tr><tr><td align="right">252</td><td align="right">374</td><td align="right">FC</td><td align="right">11111100</td><td align="center">ü</td><td align="center">&amp;#252;</td><td align="left">Latin small letter u with diaeresis</td></tr><tr><td align="right">253</td><td align="right">375</td><td align="right">FD</td><td align="right">11111101</td><td align="center">ý</td><td align="center">&amp;#253;</td><td align="left">Latin small letter y with acute</td></tr><tr><td align="right">254</td><td align="right">376</td><td align="right">FE</td><td align="right">11111110</td><td align="center">þ</td><td align="center">&amp;#254;</td><td align="left">Latin small letter thorn</td></tr><tr><td align="right">255</td><td align="right">377</td><td align="right">FF</td><td align="right">11111111</td><td align="center">ÿ</td><td align="center">&amp;#255;</td><td align="left">Latin small letter y with diaeresis</td></tr></tbody></table><p>转载于网站：<a href="https://tool.ip138.com/ascii_code/">传送门)</a></p><h2 id="6-BCD-码"><a href="#6-BCD-码" class="headerlink" title="6. BCD 码"></a>6. BCD 码</h2><ul><li>BCD码与二进制无关</li></ul><p>BCD码也称为二进制编码的十进制数，是将十进制数码0—9分别用四位二进制数来表示，这四位二进制数的权从左到右分别展开后为8、4、2、1，故称为8421 BCD码。 只需将十进制数的各位数字用与其对应的一组（4位）二进制数代替即可得到BCD码形式。</p><p>325<sub>D</sub> = 0011 0010 0101 <sub>BCD</sub> </p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/%E7%AC%94%E8%AE%B0&amp;%E5%BF%83%E5%BE%97/BCD%E7%A0%81.png" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ASCII码 </tag>
            
            <tag> 反码 </tag>
            
            <tag> 补码 </tag>
            
            <tag> 原码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端网站收藏</title>
      <link href="/2021/09/07/%E6%8A%80%E6%9C%AF%E8%83%96%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
      <url>/2021/09/07/%E6%8A%80%E6%9C%AF%E8%83%96%E6%94%B6%E8%97%8F%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="自学前端程序-私藏工具和网站分享"><a href="#自学前端程序-私藏工具和网站分享" class="headerlink" title="自学前端程序 私藏工具和网站分享"></a>自学前端程序 私藏工具和网站分享</h1><p>转载于 B站 宝藏up主 —— <a href="https://space.bilibili.com/165659472/?spm_id_from=333.999.0.0">技术胖</a> 分享收藏夹。</p><h2 id="01-JavaScript"><a href="#01-JavaScript" class="headerlink" title="01.JavaScript"></a>01.JavaScript</h2><ul><li><a href="https://wangdoc.com/javascript/">JavaScript 教程 | 通俗易懂的JavaScript教程</a></li><li><a href="https://es6.ruanyifeng.com/">ES6 入门教程 | 通俗易懂的ES6入门教程</a></li><li><a href="https://javascript30.com/">JavaScript 30  |  使用原生JavaScript在30天内完成30个项目</a></li><li><a href="https://zh.javascript.info/">现代 JavaScript 教程 |  最近很流行的JavaScript教程</a></li><li><a href="https://blog.poetries.top/node-learning-notes/">Node.js学习指南 | 系统的Node.js学习教程和笔记系统整理</a></li><li><a href="https://github.com/ryanmcdermott/clean-code-javascript">JS 代码规范 | 优秀的 JS代码规范</a></li><li><a href="https://github.com/xcatliu/typescript-tutorial">TypeScript 教程 | 通俗易懂的TypeScript教程</a></li><li><a href="https://jspang.com/detailed?id=63">TypeScript 教程 |  最好的TypeScript 视频+图文教程</a></li></ul><h2 id="02-CSS样式"><a href="#02-CSS样式" class="headerlink" title="02.CSS样式"></a>02.CSS样式</h2><ul><li><a href="https://lhammer.cn/You-need-to-know-css/#/zh-cn/">CSS Tricks 效果大全 | CSS的各种效果实现 有很多动画效果</a></li><li><a href="https://github.com/chokcoco/CSS-Inspiration">CSS Inspiration |  CSS灵感的诞生地  我每天都的网站</a></li><li><a href="https://github.com/QiShaoXuan/css_tricks"> CSS 常用样式 |  有很多常用的CSS样式</a></li><li><a href="https://animista.net/"> Animista | CSS动画库  主打按需定制CSS动画效果</a></li><li><a href="https://cssminifier.com/"> CSS Minifier | 在线CSS代码简化/压缩工具</a></li><li><a href="https://sass.bootcss.com/documentation"> Sass: Sass 文档 | Sass 中文网  成熟、稳定、强大的CSS扩展语言</a></li><li><a href="https://less.bootcss.com/"> Less 快速入门 | Less.js 中文文档 将CSS赋予了动态语言特性的样式语言</a></li><li><a href="https://stylus-lang.com/"> stylus | CSS扩展  富有变现里、动态、健壮的CSS</a></li></ul><h2 id="03-算法数据"><a href="#03-算法数据" class="headerlink" title="03.算法数据"></a>03.算法数据</h2><ul><li><a href="http://github.com/trekhleb/javascript-algorithms"> JavaScript 算法与数据结构 | 多种基于JavaScript的算法与数据结构</a></li><li><a href="https://github.com/azl397985856/leetcode"> leetcode 解题之路 |  私藏LeetCode解题攻略 </a></li><li><a href="https://github.com/MisterBooo/LeetCodeAnimation"> 五分钟学算法 |  每天拿出五分钟  学学算法  比如上个厕所就学了 </a></li><li><a href="https://github.com/biaochenxuying/blog/issues/43">数据结构与算法项目推荐 | Github上170K+Star的前端学习数据结构和算法题目 </a></li><li><a href="https://github.com/biaochenxuying/blog/issues/42">JavaScript  十大经典排序算法 | JavaScript排序必会题目  作者功力很深 值得学习 </a></li><li><a href="https://github.com/algorithm-visualizer/algorithm-visualizer">算法可视化工具 |  用可视化工具和交互方式 让你从代码中可视化算法 </a></li><li><a href="https://visualgo.net/en">算法可视化来源 </a></li><li><a href="https://github.com/skidding/illustrated-algorithms">算法的工作方式 | 变量和操作的可视化表示 增强了控制流和实际源代码 </a></li></ul><h2 id="04-前端面试"><a href="#04-前端面试" class="headerlink" title="04.前端面试"></a>04.前端面试</h2><ul><li><a href="https://blog.poetries.top/FE-Interview-Questions/">前端面试常考问题整理 |  按模块和知识点分类</a></li><li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions">前端开发面试题</a></li><li><a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions/">WEB前端面试宝典</a></li><li><a href="https://github.com/shfshanyue/blog/blob/master/post/juejin-interview.md">掘金前端面试题合集</a></li><li><a href="https://yuchengkai.cn/">前端面试图谱</a></li><li><a href="https://github.com/biaochenxuying/blog/issues/47">前端面试开源项目汇总 | Github上100K+ Star 的前端面试开源项目汇总</a></li></ul><h2 id="05-技术社区"><a href="#05-技术社区" class="headerlink" title="05.技术社区"></a>05.技术社区</h2><ul><li><a href="https://github.com/">GitHub  |  高质量内容创作和分享平台</a></li><li><a href="https://stackoverflow.com/">Stackoverflow |一个回答技术问题的网站</a></li><li><a href="https://juejin.cn/">掘金 | 国内的很多优质前端文章都掘金</a></li><li><a href="https://www.cnblogs.com/">博客园  | 一个很纯粹的技术博客平台</a></li><li><a href="https://www.zhihu.com/">知乎 |  很多程序人喜欢泡在知乎</a></li><li><a href="https://www.csdn.net/">CSDN  | 老牌社区  程序员必上的一个社区</a></li><li><a href="https://www.v2ex.com/">v2ex  | 程序员分享和探索的社区</a></li><li><a href="https://segmentfault.com/">segmentfault  | 低调技术博客社区</a></li><li><a href="https://cnodejs.org/">Node.js 中文社区 |  node专业中文社区</a></li><li><a href="https://www.smashingmagazine.com/">博客杂志站点 | 一个 web 技术类的博客杂志站点</a></li><li><a href="https://www.jstips.co/">JS 技术的网站 | 每天推出一个JS技巧的网站</a></li><li><a href="https://www.jstips.co/">W3Cplus | 推广国内行业的技术博客</a></li><li><a href="https://docschina.org/">印记中文 | 最权威的技术中文文档社区</a></li></ul><h2 id="06-前端博客"><a href="#06-前端博客" class="headerlink" title="06.前端博客"></a>06.前端博客</h2><ul><li><a href="https://jspang.com/">技术胖博客 |  专注前端 每年100集免费前端视频</a></li><li><a href="http://www.alloyteam.com/">腾讯Alloy Team  | 腾讯前端博客 每天必看</a></li><li><a href="https://isux.tencent.com/">腾讯用户体验博客 | 专注于前端用户体验</a></li><li><a href="https://fed.taobao.org/">淘系前端博客 |  淘宝前端博客 代表中国最强前端实力</a></li><li><a href="https://aotu.io/">京东凹凸实验室  |  京东前端技术博客</a></li><li><a href="https://zhuanlan.zhihu.com/ElemeFE">饿了么前端博客  |  知乎上的最强前端博客</a></li><li><a href="http://fex.baidu.com/">百度前端博客  |  百度前端团队旗下博客</a></li><li><a href="https://75.team/">360奇舞团  |  360公司前端团队</a></li><li><a href="https://tech.meituan.com/">美团技术博客  |  美团技术团队博客</a></li></ul><h2 id="07-构建工具"><a href="#07-构建工具" class="headerlink" title="07.构建工具"></a>07.构建工具</h2><ul><li><a href="https://www.npmjs.com/">NPM |  包管理 和 项目构建工具</a></li><li><a href="https://webpack.js.org/">webpack  | 前端最流行的项目构建工具</a></li><li><a href="https://yarnpkg.com/">Yarn  |  后起之秀 优秀的包管理和构建工具</a></li><li><a href="https://www.gulpjs.com.cn/">Gulp  |  老牌构建工具</a></li><li><a href="https://babeljs.io/">Babel  | ES6构建转换工具</a></li><li><a href="https://cn.eslint.org/">ESLint  | 可组装的JavaScript和JSX检查工具</a></li><li><a href="https://www.postcss.com.cn/">PostCSS | 用JavaScript转换CSS代码的工具</a></li></ul><h2 id="08-部署工具"><a href="#08-部署工具" class="headerlink" title="08.部署工具"></a>08.部署工具</h2><ul><li><a href="https://pages.github.com/">Github Page  | Github提供的免费静态网站托管服务</a></li><li><a href="https://www.netlify.com/">Netlify  |  30秒内部署你的网站</a></li><li><a href="https://vercel.com/">Vercel  |  快速部署你的网站 国外很流行</a></li><li><a href="https://surge.sh/">Surge  |  一个命令部署你的网站</a></li><li><a href="https://www.heroku.com/">Heroku  |  运动构建 、 运行你的网站和应用</a></li></ul><h2 id="09-静态站点搭建"><a href="#09-静态站点搭建" class="headerlink" title="09.静态站点搭建"></a>09.静态站点搭建</h2><ul><li><a href="https://hexo.io/zh-cn/">Hexo  |  最流行的静态博客程序 Markdown编写 生成静态站点</a></li><li><a href="https://www.vuepress.cn/">VuePress  |  Vue驱动的静态网站生成器</a></li><li><a href="https://www.gitbook.com/">GitBook  | 现代化的文档平台，支持团队协作</a></li></ul><h2 id="10-前端代码规范"><a href="#10-前端代码规范" class="headerlink" title="10.前端代码规范"></a>10.前端代码规范</h2><ul><li><a href="https://tgideas.qq.com/doc/index.html">Tgideas | 腾讯前端代码规范 值得参考</a></li><li><a href="https://guide.aotu.io/index.html">京东  |  京东前端代码规范文档 分类详细</a></li><li><a href="https://codeguide.bootcss.com/">Bootstrap编码规范  |  适合个人和小团队使用的代码规范 不复杂</a></li><li><a href="https://es6.ruanyifeng.com/#docs/style">ES6 编程风格  | 阮一峰编写的ES6代码规范  值得每个人阅读并参考</a></li><li><a href="https://github.com/airbnb/javascript">Airbnb  前端代码规范  |  国外企业的前端代码规范</a></li><li><a href="https://eslint.org/">ESLint  |  代码规范检查和格式化工具</a></li><li><a href="https://prettier.io/">Prettier  | VSCode 最热门的代码格式化工具  让你写出漂亮的代码</a></li></ul><h2 id="11-调试抓包"><a href="#11-调试抓包" class="headerlink" title="11.调试抓包"></a>11.调试抓包</h2><ul><li><a href="https://wproxy.org/whistle/">Whistle  |  代理抓包工具  我一直在用的工具 很好很强大</a></li><li><a href="https://www.telerik.com/fiddler">Fiddler  |  使用人数最多的抓包工具</a></li></ul><h2 id="12-在线工具"><a href="#12-在线工具" class="headerlink" title="12.在线工具"></a>12.在线工具</h2><ul><li><a href="https://codepen.io/">CodePen  |  前端在线测试和演示工具  国外站点</a></li><li><a href="https://caniuse.com/">Can  I  use |  Web前端兼容性列表</a></li><li><a href="https://tinypng.com/">TinyPNG  |  PNG/JPG 图片在线压缩工具</a></li><li><a href="https://www.umeng.com/">CNZZ |  老牌站点统计工具  5年前国内站长必上网站</a></li><li><a href="https://web.dev/measure/">web.dev  |  评测网站性能  基于Lighthouse</a></li><li><a href="https://www.shapedivider.app/">Shape Divider  | 定制各种形状SVG的工具</a></li><li><a href="https://gtmetrix.com/">GTmetrix  |  网页性能在线分析工具</a></li><li><a href="https://carbon.now.sh/">Carbon  |  代码转图片工具  </a></li><li><a href="https://www.wappalyzer.com/">Wappalyzer  |  检测某个网站的技术栈  </a></li><li><a href="https://unbug.github.io/codelf">CODEIF | 变量方法起名工具  人工智能加持  </a></li><li><a href="https://tool.lu/"> tool.lu  |  程序员在线工具大全   </a></li></ul><h2 id="13-开发工具"><a href="#13-开发工具" class="headerlink" title="13.开发工具"></a>13.开发工具</h2><ul><li><a href="https://code.visualstudio.com/"> VSCode  |  前端最流行的编辑器   </a></li><li><a href="https://www.sublimetext.com/"> Sublime Text  |  轻量级代码编辑工具 曾经我的最爱   </a></li><li><a href="https://www.jetbrains.com/webstorm/"> WebStom |  忠爱粉最多的编辑器 </a></li><li><a href="https://atom.io/"> Atom  |   用的人很多  我却不喜欢的编辑器 </a></li><li><a href="https://www.typora.io/"> Typora |  程序人Mrakdown笔记  一直在用的笔记工具 </a></li></ul><h2 id="14-开发者大会"><a href="#14-开发者大会" class="headerlink" title="14.开发者大会"></a>14.开发者大会</h2><ul><li><a href="https://fequan.com/"> Vue.js开发者大会 |  前端人必须关注的前端大会 </a></li><li><a href="https://jsconfchina.com/"> 中国JS开发者大会  |  公司每年必组织参加的技术大会 </a></li><li><a href="https://css.w3ctech.com/"> CSS开发者大会 |  提高CSS技术的开发者大会  打开视野 面向世界 </a></li><li><a href="https://www.alibabaf2e.com/"> D2前端开发者大会 |  阿里组织的大会 可以看直播  </a></li></ul><h2 id="15-WEB图标"><a href="#15-WEB图标" class="headerlink" title="15.WEB图标"></a>15.WEB图标</h2><ul><li><a href="http://www.fontawesome.com.cn/"> Font Awesome  |  网站开发最流行的图标集  </a></li><li><a href="https://feathericons.com/"> Feather |  简洁美观的开源图标  </a></li><li><a href="https://material.io/resources/icons/"> Material  Design Icons  |  轻快、精美的符号图标  </a></li><li><a href="https://tablericons.com/"> Tabler Icons | 681枚可定制的开源SVG图标  </a></li><li><a href="https://simpleicons.org/"> 常见品牌的SVG图标  </a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网站资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（未完）SEO</title>
      <link href="/2021/09/02/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89SEO/"/>
      <url>/2021/09/02/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89SEO/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SEO了解"><a href="#1-SEO了解" class="headerlink" title="1. SEO了解"></a>1. <code>SEO</code>了解</h2><h3 id="1-1-SE"><a href="#1-1-SE" class="headerlink" title="1.1 SE"></a>1.1 SE</h3><p>搜索引擎（Search Engine）的缩写。是指根据一定的策略、运用特定的计算机程序从互联网上搜集信息，在对信息进行组织和处理后，为用户提供检索服务，并将相关信息展示给用户的系统。</p><h4 id="1-1-1-SEO-分类"><a href="#1-1-1-SEO-分类" class="headerlink" title="1.1.1 SEO 分类"></a>1.1.1 SEO 分类</h4><h5 id="1-1-1-1-全文搜索引擎"><a href="#1-1-1-1-全文搜索引擎" class="headerlink" title="1.1.1.1 全文搜索引擎"></a>1.1.1.1 全文搜索引擎</h5><ul><li>通过计算机索引程序扫描网页中每个词建立一个索引，当用户查询时，检索程序会根据事前建立的索引进行查询，并将结果反馈给用户。</li><li>全文搜索引擎搜索方法分为按字检索和按词检索。</li><li>举例：谷歌，百度。</li></ul><h5 id="1-1-1-2目录搜索引擎"><a href="#1-1-1-2目录搜索引擎" class="headerlink" title="1.1.1.2目录搜索引擎"></a>1.1.1.2目录搜索引擎</h5><ul><li>以人工或半自动的方式搜集信息，由编辑人员看后，人工进行信息摘要，将信息置于事前确定的分类框架中，这些信息主要面向网站，提供目录浏览服务和章节检索服务。</li><li>类似于浏览器的导航页。</li><li>举例：Yahoo、新浪。</li></ul><h5 id="1-1-1-3-元搜索引擎"><a href="#1-1-1-3-元搜索引擎" class="headerlink" title="1.1.1.3 元搜索引擎"></a>1.1.1.3 元搜索引擎</h5><ul><li>通过一个统一的用户界面帮助用户在多个搜索引擎中选中和利用合适的搜索引擎来实现检索操作，是对分布于网络中的多种检索工具的全局控制机制。</li><li>一种输入，同时用多种搜索引擎进行搜索。然后一起呈现结果。</li><li>360搜索。</li></ul><h3 id="1-2-SEO"><a href="#1-2-SEO" class="headerlink" title="1.2 SEO"></a>1.2 SEO</h3><p><code>Search Engine Optimization</code>的缩写，译为“搜索引擎优化”。SEO是指根据搜索引擎的算法机制，对网站内部和外部进行调整优化，提高网站在搜索引擎中关键词的自然排名，获得更多的展现量，吸引更多目标客户访问网站，达到企业网络营销的目标。</p><h2 id="2-SEO工作原理"><a href="#2-SEO工作原理" class="headerlink" title="2. SEO工作原理"></a>2. SEO工作原理</h2><pre class="mermaid">graph LRa(页面抓取)--&gt;b(页面分析)b--&gt;c(页面排序)c--&gt;d(用户查询)</pre><h3 id="2-1-页面抓取"><a href="#2-1-页面抓取" class="headerlink" title="2.1 页面抓取"></a>2.1 页面抓取</h3><ul><li>也称页面收录，是指搜索引擎通过特定程序（蜘蛛程序英文Spider）在互联网上采集网页数据。</li><li>搜索引擎最基础的工作。搜索引擎抓取页面的能力直接决定了其可提供的信息量，以及覆盖互联网的范围，进而影响用户的查询结果。</li></ul><h4 id="2-1-1抓取流程："><a href="#2-1-1抓取流程：" class="headerlink" title="2.1.1抓取流程："></a>2.1.1抓取流程：</h4><div style="text-align:center"><svg viewBox="0 0 624 473" height="473" width="624" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg">    <defs></defs>    <g transform="translate(-284.00,-238.48)">        <g id="shape1" transform="translate(516.93,239.48)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="34.1" x="36.4">域名</tspan>            </text>        </g>        <g id="shape2" transform="translate(566.93,299.48)">            <path fill="none" stroke="#191919" d="M.0,.0L.0,34.7"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M3.0,34.7L.0,40.7L-3.0,34.7L3.0,34.7"></path>        </g>        <g id="shape3" transform="translate(516.93,340.16)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="34.1" x="36.4">首页</tspan>            </text>        </g>        <g id="shape4" transform="translate(566.93,400.16)">            <path fill="none" stroke="#191919" d="M.0,.0L.0,34.7"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M3.0,34.7L.0,40.7L-3.0,34.7L3.0,34.7"></path>        </g>        <g id="shape5" transform="translate(490.72,440.83)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M76.2,91.7L152.4,45.9L76.2,.0L.0,45.9L76.2,91.7z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="50.0" x="49.4">URL链接</tspan>            </text>        </g>        <g id="shape6" transform="translate(643.14,486.70)">            <path fill="none" stroke="#191919" d="M.0,.0L140.4,.0"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M140.4,-3.0L146.4,.0L140.4,3.0L140.4,-3.0"></path>            <rect y="-10.3" fill="#ffffff" height="18.4" width="40.0" x="51.7"></rect>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="4.1" x="51.7">无URL</tspan>            </text>        </g>        <g id="shape7" transform="translate(789.58,460.85)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M25.9,51.7L91.7,51.7L91.7,51.7C105.9,51.7,117.5,40.1,117.5,25.9C117.5,11.6,105.9,.0,91.7,.0L25.9,.0L25.9,.0C11.6,.0,.0,11.6,.0,25.9C.0,40.1,11.6,51.7,25.9,51.7z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="30.1" x="31.6">停止抓取</tspan>            </text>        </g>        <g id="shape8" transform="translate(566.93,532.57)">            <path fill="none" stroke="#191919" d="M.0,.0L.0,72.2L-46.9,72.2"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M-46.9,75.2L-52.9,72.2L-46.9,69.2L-46.9,75.2"></path>        </g>        <g id="shape9" transform="translate(394.25,574.50)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M119.8,60.4L119.8,.0L.0,.0L.0,60.4L119.8,60.4z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="34.3" x="28.7">链接页面1</tspan>            </text>        </g>        <g id="shape10" transform="translate(394.25,650.09)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M119.8,60.4L119.8,.0L.0,.0L.0,60.4L119.8,60.4z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="34.3" x="28.7">链接页面2</tspan>            </text>        </g>        <g id="shape11" transform="translate(566.93,532.57)">            <path fill="none" stroke="#191919" d="M.0,.0L.0,117.5L50.7,117.5"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M50.7,114.5L56.7,117.5L50.7,120.5L50.7,114.5"></path>        </g>        <g id="shape12" transform="translate(623.62,619.87)">            <path fill="#ffffff" fill-rule="nonzero" stroke="#323232" d="M152.4,60.4L152.4,.0L.0,.0L.0,60.4L152.4,60.4z"></path>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="34.3" x="45.0">链接页面3</tspan>            </text>        </g>        <g id="shape13" transform="translate(394.25,604.72)">            <path fill="none" stroke="#191919" d="M.0,.0L-73.0,.0L-73.0,-118.0L90.5,-118.0"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M90.5,-121.0L96.5,-118.0L90.5,-115.0L90.5,-121.0"></path>        </g>        <g id="shape14" transform="translate(776.03,650.09)">            <path fill="none" stroke="#191919" d="M.0,.0L72.3,.0L72.3,-131.5"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M69.3,-131.5L72.3,-137.5L75.3,-131.5L69.3,-131.5"></path>            <rect y="-66.3" fill="#ffffff" height="18.4" width="40.0" x="53.3"></rect>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="-51.9" x="53.3">无URL</tspan>            </text>        </g>        <g id="shape15" transform="translate(566.93,532.57)">            <path fill="none" stroke="#191919" d="M.0,.0L.0,147.7L-46.9,147.7"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M-46.9,150.7L-52.9,147.7L-46.9,144.7L-46.9,150.7"></path>            <rect y="18.8" fill="#ffffff" height="18.4" width="53.6" x="-25.8"></rect>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="33.2" x="-25.8">提取URL</tspan>            </text>        </g>        <g id="shape16" transform="translate(394.25,680.31)">            <path fill="none" stroke="#191919" d="M.0,.0L-73.0,.0L-73.0,-193.6L90.5,-193.6"></path>            <path stroke-width="1" fill="#191919" stroke="#191919" stroke-linecap="round" d="M90.5,-196.6L96.5,-193.6L90.5,-190.6L90.5,-196.6"></path>            <rect y="-165.0" fill="#ffffff" height="18.4" width="67.2" x="-105.6"></rect>            <text style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt" xml:space="preserve">                <tspan y="-150.6" x="-105.6">发现新URL</tspan>            </text>        </g>    </g></svg></div><h4 id="2-1-2-抓取方式"><a href="#2-1-2-抓取方式" class="headerlink" title="2.1.2 抓取方式"></a>2.1.2 抓取方式</h4><ul><li><p>广度抓取：</p><div style="text-align:center"><svg height="467" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="758" viewBox="0 0 758 467">    <defs>        <linearGradient x1="0%" x2="0%" y1="0%" y2="100%" id="lg1">            <stop offset="0.00" stop-color="#8a8a8a"></stop>            <stop offset="0.65" stop-color="#999999"></stop>            <stop offset="1.00" stop-color="#797979"></stop>        </linearGradient>    </defs>    <g transform="translate(-187.98,-195.77)">        <path stroke-dasharray="11,5,2.5,5,2.5,5" fill="#ffffff" d="M.0,.0L321.3,.0L321.3,113.4L.0,113.4L.0,.0z" transform="translate(188.98,548.03)" stroke="#323232" id="shape1" fill-rule="nonzero"></path>        <path stroke-dasharray="11,5,2.5,5" fill="#ffffff" d="M.0,.0L467.7,.0L467.7,113.4L.0,113.4L.0,.0z" transform="translate(188.98,425.20)" stroke="#323232" id="shape2" fill-rule="nonzero"></path>        <path stroke-dasharray="11,5,2.5,5" fill="#ffffff" d="M.0,.0L755.9,.0L755.9,141.7L.0,141.7L.0,.0z" transform="translate(188.98,275.91)" stroke="url(#lg1)" id="shape3" fill-rule="nonzero"></path>        <g transform="translate(472.44,196.77)" id="shape4">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="36.4" y="34.1">首页</tspan>            </text>        </g>        <g transform="translate(522.44,256.77)" id="shape5">            <path fill="none" d="M.0,.0L.0,28.0L-240.0,28.0L-240.0,54.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M-237.0,54.0L-240.0,60.0L-243.0,54.0L-237.0,54.0" stroke="#191919"></path>        </g>        <g transform="translate(232.44,316.77)" id="shape6">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="32.4" y="34.1">页面1</tspan>            </text>        </g>        <g transform="translate(536.85,316.77)" id="shape7">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="32.4" y="34.1">页面3</tspan>            </text>        </g>        <g transform="translate(689.06,316.77)" id="shape8">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="32.4" y="34.1">页面4</tspan>            </text>        </g>        <g transform="translate(384.65,316.77)" id="shape9">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="32.4" y="34.1">页面2</tspan>            </text>        </g>        <g transform="translate(232.44,436.77)" id="shape10">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="26.8" y="34.1">页面1.1</tspan>            </text>        </g>        <g transform="translate(232.44,556.77)" id="shape11">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="21.2" y="34.1">页面1.1.1</tspan>            </text>        </g>        <g transform="translate(384.65,436.77)" id="shape12">            <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>            <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                <tspan x="26.8" y="34.1">页面2.1</tspan>            </text>        </g>        <g transform="translate(332.44,346.77)" id="shape13">            <path fill="none" d="M.0,.0L46.2,.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M46.2,-3.0L52.2,.0L46.2,3.0L46.2,-3.0" stroke="#191919"></path>        </g>        <g transform="translate(484.65,346.77)" id="shape14">            <path fill="none" d="M.0,.0L46.2,.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M46.2,-3.0L52.2,.0L46.2,3.0L46.2,-3.0" stroke="#191919"></path>        </g>        <g transform="translate(636.85,346.77)" id="shape15">            <path fill="none" d="M.0,.0L46.2,.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M46.2,-3.0L52.2,.0L46.2,3.0L46.2,-3.0" stroke="#191919"></path>        </g>        <g transform="translate(789.06,346.45)" id="shape16">            <path fill="none" d="M.0,.0L32.0,.0L32.0,58.3L-588.6,58.3L-588.6,120.3L-562.6,120.3" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M-562.6,117.3L-556.6,120.3L-562.6,123.3L-562.6,117.3" stroke="#191919"></path>        </g>        <g transform="translate(332.44,466.77)" id="shape17">            <path fill="none" d="M.0,.0L46.2,.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M46.2,-3.0L52.2,.0L46.2,3.0L46.2,-3.0" stroke="#191919"></path>        </g>        <g transform="translate(484.65,466.77)" id="shape18">            <path fill="none" d="M.0,.0L32.0,.0L32.0,58.0L-284.2,58.0L-284.2,120.0L-258.2,120.0" stroke="#191919"></path>            <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M-258.2,117.0L-252.2,120.0L-258.2,123.0L-258.2,117.0" stroke="#191919"></path>        </g>    </g></svg></div></li><li><p>深度抓取:</p></li></ul><div style="text-align:center">    <svg height="467" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="758" viewBox="0 0 758 467">        <defs>            <linearGradient x1="0%" x2="0%" y1="0%" y2="100%" id="lg1">                <stop offset="0.00" stop-color="#8a8a8a"></stop>                <stop offset="0.65" stop-color="#999999"></stop>                <stop offset="1.00" stop-color="#797979"></stop>            </linearGradient>        </defs>        <g transform="translate(-187.98,-195.77)">            <path stroke-dasharray="11,5,2.5,5,2.5,5" fill="#ffffff" d="M.0,.0L321.3,.0L321.3,113.4L.0,113.4L.0,.0z" transform="translate(188.98,548.03)" stroke="#323232" id="shape1" fill-rule="nonzero"></path>            <path stroke-dasharray="11,5,2.5,5" fill="#ffffff" d="M.0,.0L467.7,.0L467.7,113.4L.0,113.4L.0,.0z" transform="translate(188.98,425.20)" stroke="#323232" id="shape2" fill-rule="nonzero"></path>            <path stroke-dasharray="11,5,2.5,5" fill="#ffffff" d="M.0,.0L755.9,.0L755.9,141.7L.0,141.7L.0,.0z" transform="translate(188.98,275.91)" stroke="url(#lg1)" id="shape3" fill-rule="nonzero"></path>            <g transform="translate(472.44,196.77)" id="shape4">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="36.4" y="34.1">首页</tspan>                </text>            </g>            <g transform="translate(522.44,256.77)" id="shape5">                <path fill="none" d="M.0,.0L.0,28.0L-240.0,28.0L-240.0,54.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M-237.0,54.0L-240.0,60.0L-243.0,54.0L-237.0,54.0" stroke="#191919"></path>            </g>            <g transform="translate(232.44,316.77)" id="shape6">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="32.4" y="34.1">页面1</tspan>                </text>            </g>            <g transform="translate(536.85,316.77)" id="shape7">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="32.4" y="34.1">页面3</tspan>                </text>            </g>            <g transform="translate(689.06,316.77)" id="shape8">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="32.4" y="34.1">页面4</tspan>                </text>            </g>            <g transform="translate(384.65,316.77)" id="shape9">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="32.4" y="34.1">页面2</tspan>                </text>            </g>            <g transform="translate(282.44,376.77)" id="shape10">                <path fill="none" d="M.0,.0L.0,54.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M3.0,54.0L.0,60.0L-3.0,54.0L3.0,54.0" stroke="#191919"></path>            </g>            <g transform="translate(232.44,436.77)" id="shape11">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="26.8" y="34.1">页面1.1</tspan>                </text>            </g>            <g transform="translate(282.44,496.77)" id="shape12">                <path fill="none" d="M.0,.0L.0,54.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M3.0,54.0L.0,60.0L-3.0,54.0L3.0,54.0" stroke="#191919"></path>            </g>            <g transform="translate(232.44,556.77)" id="shape13">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="21.2" y="34.1">页面1.1.1</tspan>                </text>            </g>            <g transform="translate(282.44,616.77)" id="shape14">                <path fill="none" d="M.0,.0L.0,32.0L70.2,32.0L70.2,-270.0L96.2,-270.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M96.2,-273.0L102.2,-270.0L96.2,-267.0L96.2,-273.0" stroke="#191919"></path>            </g>            <g transform="translate(434.65,376.77)" id="shape15">                <path fill="none" d="M.0,.0L.0,54.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M3.0,54.0L.0,60.0L-3.0,54.0L3.0,54.0" stroke="#191919"></path>            </g>            <g transform="translate(384.65,436.77)" id="shape16">                <path fill="#ffffff" d="M100.0,60.0L100.0,.0L.0,.0L.0,60.0L100.0,60.0z" stroke="#323232" fill-rule="nonzero"></path>                <text xml:space="preserve" style="fill:#191919;font-family:Microsoft YaHei;font-size:10.00pt">                    <tspan x="26.8" y="34.1">页面2.1</tspan>                </text>            </g>            <g transform="translate(434.65,496.77)" id="shape17">                <path fill="none" d="M.0,.0L.0,32.0L70.2,32.0L70.2,-150.0L96.2,-150.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M96.2,-153.0L102.2,-150.0L96.2,-147.0L96.2,-153.0" stroke="#191919"></path>            </g>            <g transform="translate(586.85,376.77)" id="shape18">                <path fill="none" d="M.0,.0L.0,32.0L70.2,32.0L70.2,-30.0L96.2,-30.0" stroke="#191919"></path>                <path stroke-width="1" fill="#191919" stroke-linecap="round" d="M96.2,-33.0L102.2,-30.0L96.2,-27.0L96.2,-33.0" stroke="#191919"></path>            </g>        </g>    </svg></div><h4 id="2-2-3-页面更新"><a href="#2-2-3-页面更新" class="headerlink" title="2.2.3 页面更新"></a>2.2.3 页面更新</h4><p>即口头理解，对收录的内容进行更新。还有收录新内容。</p><p>分为四种，定期更新、增量更新、分类更新、智能更新。</p><ul><li><p>定期更新。</p><p>​    也称为周期性抓取，指搜索引擎周期性对已经抓取的页面进行更新。替换原有页面，储存新页面，删除不存在的页面。</p><p>​    更新慢，30-60天，适合普通企业网站。</p></li><li><p>增量更新。</p><p>​    通过对已抓取的页面进行定时监控，实现对页面的更新及维护。针对网站的重要页面，如网站首页。     缩减抓取时间，展示最新内容。</p></li><li><p>分类更新。</p><p>​    指根据页面的类别或性质而制定相应更新周期。</p><p>​    如新闻资讯类页面的更新周期可以精确到分钟。</p></li><li><p>智能更新。</p><p>​    搜索引擎可以监控并分析出网站内容的更新频率，据此调整搜索引擎抓取频率和时间点，从而获得网页最新内容。</p></li></ul><p>不难看出，定期更新是工作的开始与基础，定期更新开始的同时，对收录的网站进行分类，以决定之后进行增量更新还是分类更新。在更新数次之后，转换为智能更新。</p><h4 id="1-2-4-网页存储"><a href="#1-2-4-网页存储" class="headerlink" title="1.2.4 网页存储"></a>1.2.4 网页存储</h4><p>原始页面、文件类型、文件大小、最后修改时间、IP地址、抓取时间。</p><h3 id="2-2-页面分析"><a href="#2-2-页面分析" class="headerlink" title="2.2 页面分析"></a>2.2 页面分析</h3><p>页面分析步骤</p><pre class="mermaid">graph LRa(内容提取)--&gt;b(分词)b--&gt;c(去重)c--&gt;d(关键词索引)d--&gt;e(关键词重组)</pre><ul><li><p>内容提取</p><p>​        搜索引攀从页面源代码中提取信息的过程。搜索引擎抓取的信息,除了用户可在浏览器上有效阅读的外,还有大量HTML标签等无法有效使用的内容。搜索引整将会去除各类无价值的信息,提取可以用于排名处理的页面信息。经过内容提取后,搜索引擎才会获得一个连续的文字序列。</p><p>​        对搜索引擎来说,并不是页面所有的信息都要进行抓取,比如,页面上对排名计算不产生影响的导航条、版权文字说明、广告等区块。搜索引擎需要处理大量的网页,所以对于无价值信息直接忽略,以有效节省计算资源,提升响应速度,删除无价值信息。学名 降噪 。</p><p>​    主流的降噪技术有:<br>​            a. 网页结构法。</p><p>​            网页结构法是根据HTML标签对页面进行分区,分出页头、导航、正文、广告等区块,只抓取正文中重要的部分。</p><p>​            b. 模板法。<br>​            模板法是从一组网页中提取出相同的模板,而后利用这些模板从网页中抽取有用的信息。</p><p>​            c. 可视化信息法。<br>​            可视化信息是利用页面中元素的布局信息划分页面,保留页面中间区域,其他区域则认为是“噪音”。</p></li><li><p>分词</p><p>​        也称切词，搜索引擎将内容提取后，按照一定的原则重新组合成文字列表的过程。经过分词得到的文字列表，一般都能满足用户的查询需求。</p><p>​        几种分词方法:</p><p>​            a. 字符串匹配分词法。</p><p>​            字符串匹配分词法是搜索引擎基于一个大而权威的“词典”进行切词,只要页面上的词与“词典”中的词匹配,则分词成功。</p><p>​            b. 统计分词法。<br>​            统计分词法是根据相邻的两个(或多个)字出现的概率来判断是否组合成词。比如“学”和“习”两个字经常同时出现,那么搜索引擎就会认为“学习”是一个词。</p><p>​            c. 理解分词法。</p><p>​            ….</p><p><del>最开始百度的相对于谷歌的优势就在这里。奈何百度整天吃老本。</del></p></li><li><p>去重</p><p>​        页面内容经过降噪、去停止词等过程之后剩下的内容，采用算法对重复的内容进行屏蔽处理。</p></li><li><p>关键字索引</p><p>​        搜索引擎从页面的有效信息中提取关键字,同时记录每组关键字出现的频率、次数、格式、位置等。并为关键字建立索引，从而能够快速定位到某个关键字。最终，页面与关键字之间呈现一对多的关系,一个页面可能会包含多个关键字。</p></li><li><p>关键字重组</p><p>​        根据用户搜索信息的习惯，建立一个关键字对应多个页面的关系表。借此实现，通过某一个特定关键字，返回一个或多个网页的搜索结果。</p></li></ul><h3 id="2-3页面排序"><a href="#2-3页面排序" class="headerlink" title="2.3页面排序"></a>2.3页面排序</h3><p>相关因素：页面相关性、链接权重、用户习惯。</p><ul><li><p>页面相关性与关键字、匹配度、权重标签有（<code>&lt;h&gt;&lt;font&gt;&lt;b&gt;&lt;i&gt;&lt;u&gt;</code>）、关键字密度、关键字分布相关。</p></li><li><p>链接权重：链接主要分内部链接及外部链接两种，某一页面得到的链接越多，从一定程度上反映了该页面越重要，链接权重值就越高。</p></li><li><p>用户习惯：根据用户点击次数和浏览时间来改进搜索结果质量。通过用户的点击次数和浏览时间来推测用户对搜索结果的偏好</p></li></ul><h3 id="2-4-用户查询"><a href="#2-4-用户查询" class="headerlink" title="2.4 用户查询"></a>2.4 用户查询</h3><p>流程：</p><pre class="mermaid">graph TDa[输入]--&gt;b[切词];b--匹配--&gt;c{关键词索引};c--否--&gt;d[空白列表];c--是--&gt;e[返回根据排序生成列表];</pre><hr><blockquote><p>  搜索指令:site a; a -b ; a * b; inurl : a ; filetype : a </p></blockquote><h2 id="3-网站搭建所需条件与优化"><a href="#3-网站搭建所需条件与优化" class="headerlink" title="3.网站搭建所需条件与优化"></a>3.网站搭建所需条件与优化</h2><h3 id="3-1-域名"><a href="#3-1-域名" class="headerlink" title="3.1 域名"></a>3.1 域名</h3><p>公司、个人在网络上建站，须先申请取得一个域名。域名相当于每个人的姓名＋身份证。为了便于别人记忆你的网站的同时，也区别于其他网站。即，域名具有唯一性。</p><p>必须向特定机构申请注册才能获得域名。腾讯云、阿里云、华为云等国内厂商以及国外的都可以购买。</p><h3 id="3-1-1种类"><a href="#3-1-1种类" class="headerlink" title="3.1.1种类"></a>3.1.1种类</h3><p>（1）按语种划分。可以分为：英文域名、中文域名和其他语种域名。</p><blockquote><p>  中文域名目前较少，但未来会变多。</p></blockquote><p>（2）按用途划分。根据域名的后缀来区分网站的不同属性。国际上制定了统一的域名后缀规则，不同的域名后缀代表不同的用途。</p><p>（3）按级别划分。从域名的层级角度考虑，一般把域名分为顶级域名、二级域名和三级域名。</p><blockquote><p>  顶级域名与部分二级域名（.com.cn之类的）需要购买，其他二级域名与三级域名可自行设置使用。</p></blockquote><ul><li>  com：Commercial organizations,商业组织,公司</li><li>  xyz：创意、创新；三维空间与无限可能</li><li>  net：网络服务商</li><li>  top：顶级、高端、适用于任何商业 公司 个人</li><li>  tech：科技、技术</li><li>  org：Other organizations,非盈利组织</li><li>  gov：Governmental entities,政府部门</li><li>  edu：Educational institutions,教研机构</li><li>  int：International organizations,国际组织</li><li>  pub： public大众、公共、知名。</li></ul><blockquote><p>  个人可购买的后缀有: .com .top .pub .xyz .vip 等。越常见域名价格越贵，其他域名只可特殊部门和单位申请或购买，即需要认证和更高级别审核。</p></blockquote><h3 id="3-2购买步骤"><a href="#3-2购买步骤" class="headerlink" title="3.2购买步骤"></a>3.2购买步骤</h3><p>准备资料、寻找注册机构、查询域名、正式申请、申请成功。</p><h4 id="3-2-1域名购买准备材料"><a href="#3-2-1域名购买准备材料" class="headerlink" title="3.2.1域名购买准备材料"></a>3.2.1域名购买准备材料</h4><p>需要实名制认证（国内厂商）—身份证正反面拍照、小钱钱（）。</p><h3 id="3-3域名优化"><a href="#3-3域名优化" class="headerlink" title="3.3域名优化"></a>3.3域名优化</h3><p>网站优化工作开始之前，应规划设计好网站的域名。域名的长度、名称、时间等方面的因素会对网站产生重要的影响，设计好这些因素是网站优化的基础工作。</p><p>（1）域名长度。域名较长，会增加记忆的难度；短域名更有利于网站推广，方便用户记忆。搜索引擎也更喜欢抓取长度较短的域名。域名注册时尽可能的简短。</p><p>（2）域名名称。网站的域名与其主题相关。首先要定位好网站的主题，根据主题选择与之相关的域名。当用户看到域名后，就能基本了解网站是做什么的，可以直观地了解其所处的行业。</p><p>（3）域名注册时间。在一定程度上，域名的注册时间越长，越能提升域名的可信度。域名的注册时间越早，也就越能增加网站在搜索引擎中的权重。</p><p>（4）域名使用时间。域名使用时间是指某个域名与某个网站绑定后，该网站的运营时长。域名使用时间越短，搜索引擎会认为该域名的可信度较低，指向不稳定，权重要相应降低。</p><p>（5）域名过期时间。域名过期时间是指到某个时间点后，域名将无法继续使用。搜索引擎认为到期时间晚的域名比到期时间早的域名更重要。</p><p>（6）域名后缀。域名后缀是指代表一个域名类型的符号，不同后缀的域名表示不同的含义。一般情况下，以“.edu”、“.gov”、“.org”（非营利机构）等为后缀的域名在搜索引擎中权重较高。</p><p>（7）子域名。从用户的角度看，子域名更容易被记忆；从搜索引擎优化的角度看，其更重视绑定了子域名的频道。因此，网站管理人员对一个网站中的重要频道设置子域名，可以有效提升用户使用体验，提高搜索引擎的友好性。</p><blockquote><p>  总结：购买域名前先想好网站类型，然后想一个简短精悍的一个字符串，如果还是太长，建议分级，级别大的放后边，如，zhidao.baidu.com。只需要购买baidu.com即可。其他前缀可后期设置为二级、三级域名。购买时根据网站类型与自己的钱包选择合适后缀，然后尽量买更长时间。</p></blockquote><h3 id="3-2网络空间"><a href="#3-2网络空间" class="headerlink" title="3.2网络空间"></a>3.2网络空间</h3><p>网站能否更好地吸引用户的访问和利于搜索引擎的抓取，选择合适的网站空间是非常重要的工作。</p><h4 id="3-2-1-网络空间分类"><a href="#3-2-1-网络空间分类" class="headerlink" title="3.2.1 网络空间分类"></a>3.2.1 网络空间分类</h4><p>（1）按网络空间的类型划分，可以将网站空间大体分为虚拟主机、VPS、云主机、服务器。</p><p>（2）根据网站空间支持的Web语言，可以将网站空间类型分为ASP虚拟主机、PHP虚拟主机、JSP虚拟主机、静态空间和全能空间。</p><p>（3）按空间接入光纤的线路划分网站空间，可以分为电信主机、网通主机、铁通主机、双线主机和多线主机。</p><h4 id="3-2-2-网络空间重要性"><a href="#3-2-2-网络空间重要性" class="headerlink" title="3.2.2 网络空间重要性"></a>3.2.2 网络空间重要性</h4><ul><li>  从用户体验角度来讲，用户在访问网站时，希望可以快速打开想要浏览的页面，而不愿浪费时间等待网页的打开。</li><li>  从搜索引擎友好性角度来讲，网站空间的服务器能快速响应有利于搜索引擎收录。如果搜索引擎抓取时，网站空间的服务器响应速度慢或者没响应，搜索引擎可能放弃抓取，该网站会被被搜索引擎屏蔽。</li></ul><h4 id="3-2-3-网络空间考虑因素"><a href="#3-2-3-网络空间考虑因素" class="headerlink" title="3.2.3 网络空间考虑因素"></a>3.2.3 网络空间考虑因素</h4><ul><li><p>网站空间的大小和类型。网站空间大小适中。近期够用即可，并为远期的扩展升级留条路。一般，虚拟主机的性价比较高，适合小型企业和个人网站使用。</p></li><li><p>访问速度。影响因素：服务器带宽、不同运营商的网络互通问题。</p></li><li><p>同IP网站的数量。共用同一个IP地址的网站数量越少越好，太多易存在安全隐患。主机IP被针对，所有网站一窝端。</p></li><li><p>  同IP网站的质量。如果同一个网站空间内，存在大量的垃圾网站，不利于搜索引擎的抓取。因为搜索引擎拉黑的是主机IP。也是一窝端。</p></li><li><p>  网站空间所在国家。同国家、地区IP访问当然速度快。跨国家、地区访问，可能因防火墙问题被屏蔽。</p></li><li><p>  是否支持SEO常用技术。网络空间不支持的情况下，搜索排名会大大下降甚至不被收录。非常影响网站运营。</p></li><li><p>  是否提供数据备份。若网站空间不提供自动数据备份服务，则需网站管理者手动操作备份，避免发生意外造成数据丢失。</p></li><li><p>  网站空间的硬件配置。访问者越多，服务器负担越大。针对自己网站的访客情况按需选择配置。</p></li><li><p>  网站空间服务商的服务水平。有实力的网站空间服务商会聘用技术过硬的人员、选择质量好的服务器。当出现问题时，他们能够在短时间内排除故障。所以，网站空间服务商的反应速度以及技术实力是选择网站空间的重要指标。</p></li></ul><blockquote><p>  个人购买时，只考虑服务器所在地区即可，主流提供商其他服务都问题不大。</p></blockquote><h3 id="3-3-备案"><a href="#3-3-备案" class="headerlink" title="3.3 备案"></a>3.3 备案</h3><p>网站要在中国大陆的网络空间服务器上运行，必须备案（到工信部提交个人以及网站信息）。网站备案分为企业用户备案和个人用户备案，两者需要准备的资料不同。个人备案，准备</p><h4 id="3-3-1备案方式与流程"><a href="#3-3-1备案方式与流程" class="headerlink" title="3.3.1备案方式与流程"></a>3.3.1备案方式与流程</h4><p>网站备案的方式：公安局备案、ICP备案。</p><ul><li>  公安局备案一般按照各地公安机关指定的地点和方式进行。</li><li>  ICP备案可以自主通过官方备案网站在线备案或者通过当地电信部门两种方式来进行备案。</li></ul><h4 id="3-2-网站备案的好处"><a href="#3-2-网站备案的好处" class="headerlink" title="3.2 网站备案的好处"></a>3.2 网站备案的好处</h4><ul><li>访问速度快</li><li>网站信任度高</li><li>更容易收录</li><li>交换友情链接</li><li>解除危险网站提示</li></ul>]]></content>
      
      
      <categories>
          
          <category> SEO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小数转换二进制</title>
      <link href="/2021/09/02/%E5%B0%8F%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
      <url>/2021/09/02/%E5%B0%8F%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%BA%8C%E8%BF%9B%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="小数转换为二进制"><a href="#小数转换为二进制" class="headerlink" title="小数转换为二进制"></a>小数转换为二进制</h2><p>直接开干。</p><p>  以<code>0.35</code>为例.</p><p>每次用小数部分乘2，所得积的整数部分作为二进制的一位。</p><ol><li>​      0.35 x 2=0.7–&gt;0</li><li>​      0.70 x 2=1.4–&gt;1</li><li>​      0.40 x 2=0.8–&gt;0</li><li>​      0.80 x 2=1.6–&gt;1</li><li>​      0.60 x 2=1.2–&gt;1</li><li>​      0.20 x 2=0.4–&gt;0<br>   ​    ​    ……</li></ol><p>然后就是<code>3~8</code>不停循环。</p><p>这就是<code>float</code>与<code>double</code>类型的数据不是很准确的原因。</p><p>这里就看是32位浮点数，还是64位浮点数。32位时，加上整数位取23位为止。64位同理。</p><p>所以0.35转换后为 <code>0101 1001 1001 1001 1001 ... </code></p><h3 id="符号位"><a href="#符号位" class="headerlink" title="符号位"></a>符号位</h3><p>然后，此数为正，S 位为0；</p><h3 id="指数位"><a href="#指数位" class="headerlink" title="指数位"></a>指数位</h3><p>此数二进制为1.011011011… x 2<sup>-2</sup>  ，故指数位为  -2 + 127=125<sub>D</sub> –&gt;<code>01111101</code><sub>b</sub></p><p><mark>此处也可先把幂与127转换为真值，然后进行运算。因为一般幂较小，二进制容易求。所以这样算方便计算的概率较大</mark></p><p>具体可参照本博客内“计算机中的数”文章。</p><p>传送门待开启。</p><h3 id="基数位"><a href="#基数位" class="headerlink" title="基数位"></a>基数位</h3><p>循环着取23位即可。即 <code>0110 0110 0110 0110 0110 011</code></p><p>故<code>0.35</code> 转换为二进制为 <code>0 0111 1101  0110 0110 0110 0110 0110 011</code></p>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 数据转换 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十进制转浮点数</title>
      <link href="/2021/09/02/%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
      <url>/2021/09/02/%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%B5%AE%E7%82%B9%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-浮点数"><a href="#1-浮点数" class="headerlink" title="1. 浮点数"></a>1. 浮点数</h2><h3 id="1-1-优缺点"><a href="#1-1-优缺点" class="headerlink" title="1.1 优缺点"></a>1.1 优缺点</h3><p>优：相对于定点数来说可表达范围更大的数据类型。</p><p>缺：失去了准确性。</p><h3 id="1-2-组成"><a href="#1-2-组成" class="headerlink" title="1.2 组成"></a>1.2 组成</h3><p>浮点数由三部分组成。符号位，偏移位，数据位。</p><p>专业的叫法为：</p><ul><li><p>Sign：符号位，表示浮点数是正数或负数。0正，1负。</p></li><li><p>Exponent：指数位–阶码。类似于科学技术法 1x10<sup>12</sup> 中的12的部分，但略有不同。这里是以2为底数而不是10。</p><p> ​        当浮点数为32位时，指数位有8位。如0.00001531 之类的数，指数部分将会是负数。为了表示这些数。便将2<sup>8</sup> 平分，但还有<code>0</code>需要表示，所以就是  -(2<sup>7</sup>-1) <del>0 与1</del>2<sup>7</sup> 。但是还有个前提，需要表示正负，所以为了除去符号位就使所有数都偏移一个量，保证所有数为正，这样就可省略符号位。即偏移2<sup>7</sup> -1=127。</p></li><li><p>Mantissa：基数位–尾数。浮点数具体数值的实际表示。</p></li></ul><div>    <div>        <style>          th {              padding: 10px 20px;          }td {          border-style: inset;          border-width: 5px;          margin: 10px 15px;          padding: 10px 20px;      }      tr {          margin: 10px 15px;      }        </style>    </div>      <div>        <h3 id="1-3-种类"><a href="#1-3-种类" class="headerlink" title="1.3 种类"></a>1.3 种类</h3><p>目前标准的浮点数有两种 <code>32 bit</code> 与 <code>64 bit</code> 以后定会出现更高的。</p><ul><li><code>32 bit</code></li></ul><div style="text-align:center"><svg width="400" height="80" xmlns="http://www.w3.org/2000/svg"> <!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ --> <g>  <title>background</title>  <rect fill="none" id="canvas_background" height="82" width="402" y="-1" x="-1"></rect>  <g display="none" id="canvasGrid">   <rect fill="url(#gridpattern)" stroke-width="0" y="0" x="0" height="100%" width="100%" id="svg_7"></rect>  </g> </g> <g>  <title>Layer 1</title>  <g id="svg_14">   <rect id="svg_1" height="40" width="50" y="20.00001" x="36.3" stroke-width="1.5" stroke="#000" fill="#FABA6F"></rect>   <rect id="svg_2" height="40" width="100" y="20.00001" x="86.3" stroke-width="1.5" stroke="#000" fill="#FABA6F"></rect>   <rect id="svg_3" height="40" width="200" y="20.00001" x="186.3" stroke-width="1.5" stroke="#000" fill="#FABA6F"></rect>   <text xml:space="preserve" text-anchor="start" font-family="Helvetica, Arial, sans-serif" font-size="16" id="svg_4" y="45.60158" x="40.3" fill-opacity="null" stroke-opacity="null" stroke-width="0" stroke="#000" fill="#000000">s:1位</text>   <text xml:space="preserve" text-anchor="start" font-family="Helvetica, Arial, sans-serif" font-size="16" id="svg_5" y="45.60158" x="111.3" fill-opacity="null" stroke-opacity="null" stroke-width="0" stroke="#000" fill="#000000">E:8位</text>   <text xml:space="preserve" text-anchor="start" font-family="Helvetica, Arial, sans-serif" font-size="16" id="svg_6" y="45.60158" x="267.3" fill-opacity="null" stroke-opacity="null" stroke-width="0" stroke="#000" fill="#000000">M:23位</text>  </g> </g></svg></div><ul><li><code>64bit</code></li></ul><div style="text-align:center">  <svg width="400" height="80" xmlns="http://www.w3.org/2000/svg">   <!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ -->   <g>    <title>background</title>    <rect x="-1" y="-1" width="402" height="82" id="canvas_background" fill="none"></rect>    <g id="canvasGrid" display="none">     <rect id="svg_7" width="100%" height="100%" x="0" y="0" stroke-width="0" fill="url(#gridpattern)"></rect>    </g>   </g>   <g>    <title>Layer 1</title>    <rect fill="#FABA6F" stroke="#000" stroke-width="1.5" x="36.3" y="20.00001" width="50" height="40" id="svg_1"></rect>    <rect fill="#FABA6F" stroke="#000" stroke-width="1.5" x="86.3" y="20.00001" width="100" height="40" id="svg_2"></rect>    <rect fill="#FABA6F" stroke="#000" stroke-width="1.5" x="186.3" y="20.00001" width="200" height="40" id="svg_3"></rect>    <text fill="#000000" stroke="#000" stroke-width="0" stroke-opacity="null" fill-opacity="null" x="40.3" y="45.60158" id="svg_4" font-size="16" font-family="Helvetica, Arial, sans-serif" text-anchor="start" xml:space="preserve">s:1位</text>    <text style="cursor: move;" fill="#000000" stroke="#000" stroke-width="0" stroke-opacity="null" fill-opacity="null" x="111.3" y="45.60158" id="svg_5" font-size="16" font-family="Helvetica, Arial, sans-serif" text-anchor="start" xml:space="preserve">E:11位</text>    <text style="cursor: move;" fill="#000000" stroke="#000" stroke-width="0" stroke-opacity="null" fill-opacity="null" x="267.3" y="45.60158" id="svg_6" font-size="16" font-family="Helvetica, Arial, sans-serif" text-anchor="start" xml:space="preserve">M:52位</text>   </g>  </svg>    </div><p>此文以32位举例说明运算步骤。</p><h2 id="2-十进制转浮点数"><a href="#2-十进制转浮点数" class="headerlink" title="2. 十进制转浮点数"></a>2. 十进制转浮点数</h2><p>具体算法可参考<mark><a href="https://blogofxyz.gitee.io/2021/09/02/%E5%B0%8F%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%BA%8C%E8%BF%9B%E5%88%B6/">点这里</a></mark> </p><table style="text-align: center;margin:auto;">            <tbody><tr>            <th colspan="5">浮点数表示范围</th>            </tr>      <tr>          <th colspan="2">单精度32位</th>          <th colspan="2">双精度64位</th>          <th rowspan="2">表示的对象</th>       </tr>          <tr>      <td>指数</td>      <td>位数</td>      <td>指数</td>      <td>位数</td>  </tr>  <tr>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>s=0，表示0;s=1,表示-0</td>  </tr>  <tr>      <td>0</td>      <td>非0</td>      <td>0</td>      <td>非0</td>      <td>正负规格化数</td>  </tr>  <tr>      <td>1~254</td>      <td>任意数</td>      <td>1~2046</td>      <td>任意数</td>      <td>正负浮点数</td>  </tr>  <tr>      <td>255</td>      <td>0</td>      <td>2047</td>      <td>0</td>      <td>正负无穷</td>  </tr>  <tr>      <td>非零</td>      <td>0</td>      <td>非零</td>      <td>0</td>      <td>NaN(不是数)</td>  </tr></tbody></table></div></div>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浮点数 </tag>
            
            <tag> 二进制 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(待补充)markdown进阶</title>
      <link href="/2021/08/31/%EF%BC%88%E5%BE%85%E8%A1%A5%E5%85%85%EF%BC%89markdown%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/08/31/%EF%BC%88%E5%BE%85%E8%A1%A5%E5%85%85%EF%BC%89markdown%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="1-文字"><a href="#1-文字" class="headerlink" title="1. 文字"></a>1. 文字</h2><ul><li><p>  上下标。上标–<code>&lt;sup&gt;&lt;/sup&gt;</code>，例2<sup>999</sup> 下标<code>&lt;sub&gt;&lt;/sub&gt;</code> ，例 t<sub>a</sub>。</p></li><li><p>说明框。<code>&lt;</code> +信息。效果如下</p><blockquote></blockquote></li></ul><h2 id="2-图进阶"><a href="#2-图进阶" class="headerlink" title="2. 图进阶"></a>2. 图进阶</h2><h3 id="2-0-经验"><a href="#2-0-经验" class="headerlink" title="2.0 经验"></a>2.0 经验</h3><p>对于文章中图的引用的劝告。</p><ul><li><p>可操作性排序：引用网络资源URL &gt; 自己图床URL &gt; mermaid绘图 &gt; HTML的svg导入</p></li><li><p>后期维护代价排序：引用网络资源URL &gt; 自己图床URL &gt; mermaid绘图 = HTML的svg导入</p><p>​    如果引用的网络资源URL</p><ul><li>存在风险为，资源的失效风险，即，网站停运，侵权等问题删除。</li><li>好处，引用图的类型不受限制，任何图都能插入。</li></ul><p>​    如果引用自己图床URL</p><ul><li>存在风险，一般白嫖图床的可用空间较小，所以需要谨慎用图，并整理自己的图床，删除不用，或上传压缩过的图。同时，自己对图床内部文件的整理（重命名，移动等）等会影响引用URL的失效。所以整理后记得修改URL。当自己图床被引用次数较多时，工作量会变得很大。</li><li>好处，同样是引用图的种类不受限制。</li></ul><p>​    如果是mermaid绘图，或HTML的svg元素引用。</p><ul><li>缺点是只适用于简单的逻辑图，由线条与基本图形构成的图。使用方法在下文。</li><li>可以一劳永逸，后期不需要考虑失效问题。</li><li>mermaid绘图也可能存在兼容性问题，因为有些情况下虽然支持markdown，但并不支持mermaid渲染。</li></ul><p>​    选择哪种，自行斟酌。</p></li></ul><h3 id="2-1-绘制一般图"><a href="#2-1-绘制一般图" class="headerlink" title="2.1 绘制一般图"></a>2.1 绘制一般图</h3><p>可通过<code>markdown</code>支持部分<code>html</code>标签的方式来实现。</p><p>此处以<code>svg</code>来举例。也可通过其他方法。</p><h4 id="2-1-1-操作-amp-问题解决"><a href="#2-1-1-操作-amp-问题解决" class="headerlink" title="2.1.1 操作 &amp; 问题解决"></a>2.1.1 操作 &amp; 问题解决</h4><p><code>markdown</code> 中会自动对<code>html</code>进行转义。所以，如果你直接放置<code>svg</code>代码于 一 处，则可能会乱七八糟。这与svg段代码是否格式化标准有关。</p><p>避免方法为：</p><p>先声明一个<code>&lt;div&gt; </code> 标签。然后将<code>svg</code>代码放置其中即可。<mark style="border-radius:10px;padding:5px;background-color:#47a6e8">代码中切勿存在空行</mark> </p><p>这是你会发现图像歪的离谱，只需要为div添加text-align属性，并指定center的值即可解决。</p><h4 id="2-1-2-svg代码怎么得到"><a href="#2-1-2-svg代码怎么得到" class="headerlink" title="2.1.2 svg代码怎么得到"></a>2.1.2 svg代码怎么得到</h4><p>大多数绘图软件都支持svg格式文件导出。导出后用记事本打开，复制即可。</p><p>另，推荐<code>svg</code>绘图网站：<a href="https://c.runoob.com/more/svgeditor/">传送门</a>.</p><h3 id="2-1-思维导图-amp-流程图"><a href="#2-1-思维导图-amp-流程图" class="headerlink" title="2.1 思维导图 &amp; 流程图"></a>2.1 思维导图 <code>&amp;</code> 流程图</h3><h4 id="2-1-1-语法"><a href="#2-1-1-语法" class="headerlink" title="2.1.1 语法"></a>2.1.1 语法</h4><p>看上去是思维导图。实际是代码块的一个进阶。</p><ul><li><p>用<code>mermaid</code>语言的代码块。</p></li><li><p><code>graph </code> 声明图的方向 。</p><p>TB : top to bottom</p><p>TD : top-down/ same as top to bottom</p><p>BT : bottom to top</p><p>RL : right to left</p><p>LR : left to right</p></li><li><p>用字符串区分节点。</p><p>​    相当于各大语言中声明的变量名。</p><p>​    每一节点只需声明一次即可。</p></li><li><p>用 <code>[ ]</code>、<code>()</code> 与 <code>{}</code> ，以及<code>//</code>与<code>\\</code> 组合呈现出不同的边框形状声明节点文本内容。</p></li><li><p>用<code>-</code> 、<code>.</code>、<code>=</code> 与 <code>&gt;</code> 组合在横线上显示文本</p><p>​    <code>-</code>与<code>=</code>越多，连线越长。</p><p>​    <code>&gt;</code>表示横线的箭头。</p><p>如图（博主blog暂不支持渲染，可自行查看）</p><pre class="mermaid">  graph LRa--&gt;b.-c.-d</pre></li></ul><h4 id="2-1-2-不同边框图"><a href="#2-1-2-不同边框图" class="headerlink" title="2.1.2 不同边框图"></a>2.1.2 不同边框图</h4><ul><li>代码：</li></ul><pre class="line-numbers language-none"><code class="language-none">graph TDsubgraph oneA[a_text]--&gt;B(b_text);B--&gt;C([c_text]);C--&gt;D[(d_text)];D--&gt;E((e_text)) ;endsubgraph twoF&gt;f_text]--&gt;G{g_text};G--&gt;H{{h_text}};H--&gt;I[/i_text/];I.-&gt;J[\j_text\];endsubgraph threek[/k_text\]--&gt;l[\l_text/];l.-m[[m_text]];m-.-n[n_text];end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>效果(暂不支持渲染，可自行尝试)：<pre class="mermaid">    graph LR  A[a_text]--&gt;B(b_text)  B--&gt;C([c_text])  C--&gt;D[(d_text)]  D--&gt;E((e_text))   E--&gt;F&gt;f_text]  F--&gt;G{g_text}</pre><pre class="mermaid">    graph LR  G{g_text}--&gt;H  H--&gt;I[/i_text/]  I.-&gt;J[\j_text\]  j--&gt;k[/k_text\]  k--&gt;l[\l_text/]  l.-m[[m_text]]  m-.-n[n_text]</pre></li></ul><h4 id="2-1-3-横线显示文本"><a href="#2-1-3-横线显示文本" class="headerlink" title="2.1.3 横线显示文本"></a>2.1.3 横线显示文本</h4><ul><li><p>代码：</p><pre class="mermaid">  graph TBA1 --&gt; B1A2 ==&gt; B2A3 -.-&gt; B3</pre></li></ul><h4 id="2-1-3-横向图演示："><a href="#2-1-3-横向图演示：" class="headerlink" title="2.1.3 横向图演示："></a>2.1.3 横向图演示：</h4><ul><li><p>代码</p><pre class="line-numbers language-none"><code class="language-none">graph LRa(中国)--&gt;aa(河南)aa--&gt;aaa{郑州}aa--&gt;aab{...}a--&gt;ab(北京)ab--&gt;aba{朝阳区}ab--&gt;abb{...}a--&gt;ad(...)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>思维导图</p><pre class="mermaid">  graph LRa(中国)--&gt;aa(河南)aa--&gt;aaa{郑州}aa--&gt;aab{...}a--&gt;ab(北京)ab--&gt;aba{朝阳区}ab--&gt;abb{...}a--&gt;ad(...)</pre></li></ul><h4 id="2-1-4-纵向图演示"><a href="#2-1-4-纵向图演示" class="headerlink" title="2.1.4 纵向图演示"></a>2.1.4 纵向图演示</h4><ul><li><p>代码</p><pre class="line-numbers language-none"><code class="language-none">graph TDa(中国)--&gt;aa(河南)aa--&gt;aaa{郑州}aa--&gt;aab{...}a--&gt;ab(北京)ab--&gt;aba{朝阳区}ab--&gt;abb{...}a--&gt;ad(...)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>思维导图</p><pre class="mermaid">  graph TDa(中国)--&gt;aa(河南)aa--&gt;aaa{郑州}aa--&gt;aab{...}a--&gt;ab(北京)ab--&gt;aba{朝阳区}ab--&gt;abb{...}a--&gt;ad(...)</pre></li></ul><h3 id="2-2-饼图"><a href="#2-2-饼图" class="headerlink" title="2.2 饼图"></a>2.2 饼图</h3><p>​    同为<code>mermaid</code>的进阶</p><p>​    语法更简单，直接看例子。</p><ul><li> 代码：</li></ul>   <pre class="line-numbers language-none"><code class="language-none">pie title 我班人数比"男生":95"女生":5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>&lt;pre class="mermaid"&gt;    pie title 我班人数比    "男生":95    "女生":5&lt;/pre&gt;</code></pre><h2 id="n-参考"><a href="#n-参考" class="headerlink" title="n.参考"></a>n.参考</h2><p>参考链接：<a href="https://iseex.github.io/2020-11/typora-diagram/">Typora也能做思维导图？做笔记的又一个绝佳选择？ </a></p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（未完）Java</title>
      <link href="/2021/08/30/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89Java/"/>
      <url>/2021/08/30/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89Java/</url>
      
        <content type="html"><![CDATA[<h2 id="学前准备"><a href="#学前准备" class="headerlink" title="学前准备"></a>学前准备</h2><ul><li><p>安装JDK</p><p>​    浏览器搜索下载即可。</p></li><li><p>安装IDE，推荐idea。</p><p>​    网上有破解资源，但不推荐。</p><p>​    第一。学生时期可选择教育优惠，试用一年。或者社区版免费使用，功能并没有少多少。</p><p>​    第二。不利于以后就业。如果就业之后使用Java开发。则可能被追究法律责任，另外，公司也都会自行购买企业版本。</p><p>​    学生试用：<a href="https://www.jetbrains.com/shop/eform/students">传送门</a> 需要大学邮箱，另可能大多数学校需要提供学生证或其他学生身份证件。试用期为大学毕业前。</p><p>​    其他身份请前往浏览：<a href="https://www.jetbrains.com/zh-cn/idea/buy/#discounts?billing=yearly">传送门</a></p><h2 id="0-IDEA快捷输入。"><a href="#0-IDEA快捷输入。" class="headerlink" title="0. IDEA快捷输入。"></a>0. IDEA快捷输入。</h2><ul><li><p><code>sout</code>–快捷输入一段输出的代码如下</p><p>可在任意变量或值后直接<code>.sout</code> 即可看到提示。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">System.out.println();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>soutv</code>–与<code>sout</code>相比，会加上“参数名=”，同样可直接变量或值后加。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">System.out.println("args = " + args);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>fori</code>–快捷输入循环代码块</p><p>第一次生成是<code>i</code>，二层循环是<code>j</code>… 之后只需要填入范围即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">for (int i = 0; i &lt; ; i++) {                    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="1-数据类型（与其他语言相比）"><a href="#1-数据类型（与其他语言相比）" class="headerlink" title="1. 数据类型（与其他语言相比）"></a>1. 数据类型（与其他语言相比）</h2><h3 id="1-1-String类型"><a href="#1-1-String类型" class="headerlink" title="1.1 String类型"></a>1.1 String类型</h3><h2 id="2-for-、输入、输出"><a href="#2-for-、输入、输出" class="headerlink" title="2. for 、输入、输出"></a>2. for 、输入、输出</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.company;import java.util.Scanner;public class Main {    public static void main(String[] args) {// write your code here        double Chinese;        double English;        double C;        double Csharp;        //      生成输入对象。        Scanner scan=new Scanner(System.in);//      nextline---字符串                C=scan.nextDouble();                Chinese=scan.nextDouble();        Csharp=scan.nextDouble();        English=scan.nextDouble();        System.out.println("args = " + avg(C,Chinese,Csharp,English));    }    public static double avg(double... score) {        double term = 0;        double max = 0, min = 0;        for (double v : score) {            System.out.println("v = " + v);            if (v &gt; max) max = v;            if (v &lt; min) min = v;            term += v;        }        System.out.println(term + ((term &gt;(max+min)/2)?"挺大的":"不算大"));        System.out.println("term = " + term);        return term / score.length;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  ​    </p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（未完）计算机组成原理</title>
      <link href="/2021/08/30/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
      <url>/2021/08/30/%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="⚪-计算机系统组成"><a href="#⚪-计算机系统组成" class="headerlink" title="⚪. 计算机系统组成"></a>⚪. 计算机系统组成</h2><pre class="mermaid">graph TDa[计算机系统]--&gt;aa[硬件系统]aa--&gt;aaa[主机]aaa--&gt;aaaa[中央处理器]aaaa--&gt;aaaaa[运算器]aaaa--&gt;aaaab[控制器]aaa--&gt;aaab[内存]aaab--&gt;aaaba[只读存储器]aaab--&gt;aaabb[随机存储器]aaab--&gt;aaabc[高速存储器]aa--&gt;aab[外设]aab--&gt;aaba[I/O设备]aab--&gt;aabb[外存]aab--&gt;aabc[网络设备]a--&gt;ab[软件系统]ab--&gt;aba[系统软件]aba--&gt;abaa[操作系统]aba--&gt;abab[程序设计语言]aba--&gt;abac[实用程序]ab--&gt;abb[应用软件]</pre><h2 id="1-计算机的结构体系"><a href="#1-计算机的结构体系" class="headerlink" title="1. 计算机的结构体系"></a>1. 计算机的结构体系</h2><h3 id="1-1-冯诺依曼机结构"><a href="#1-1-冯诺依曼机结构" class="headerlink" title="1.1 冯诺依曼机结构"></a>1.1 冯诺依曼机结构</h3><p>特指硬件。</p><ul><li><p>输入设备</p></li><li><p>存储器</p></li><li><p>运算器</p></li><li><p>控制器</p></li><li><p>输出设备</p><p>现在计算机–&gt;微型计算机，一般由CPU（运算器、控制器）、I\O接口（输入输出接口）、存储器（外存）组成。</p></li></ul><h4 id="1-1存储器（外存）"><a href="#1-1存储器（外存）" class="headerlink" title="1.1存储器（外存）"></a>1.1存储器（外存）</h4><p>  存储程序与数据。</p><h4 id="1-2-CPU"><a href="#1-2-CPU" class="headerlink" title="1.2 CPU"></a>1.2 CPU</h4><h5 id="1-2-1-运算器"><a href="#1-2-1-运算器" class="headerlink" title="1.2.1 运算器"></a>1.2.1 运算器</h5><p>功能：进行算数逻辑运算<br>        组成：算术逻辑运算单元（ALU）、累加器、其他寄存器 </p><h5 id="1-2-2-控制器"><a href="#1-2-2-控制器" class="headerlink" title="1.2.2 控制器"></a>1.2.2 控制器</h5><h4 id="1-2-3-…"><a href="#1-2-3-…" class="headerlink" title="1.2.3 ….."></a>1.2.3 …..</h4><h2 id="2-计算机软件系统"><a href="#2-计算机软件系统" class="headerlink" title="2. 计算机软件系统"></a>2. 计算机软件系统</h2><h3 id="2-1-软件"><a href="#2-1-软件" class="headerlink" title="2.1 软件"></a>2.1 软件</h3><p>用于计算机的各种程序统称为软件。</p><h4 id="2-1-1-系统程序"><a href="#2-1-1-系统程序" class="headerlink" title="2.1.1 系统程序"></a>2.1.1 系统程序</h4><p>用来简化程序设计，提高计算机的使用效率，发挥和扩大计算机的功能和用途。</p><ul><li><p>操作系统：用来管理计算机硬件、软件资源，自动调度用户的作业程序，使多个用户能有效地共用一套系统。</p></li><li><p>语言程序。如汇编程序、编译程序等。</p></li><li><p>各种服务性程序。</p></li></ul><h4 id="2-1-2-应用程序"><a href="#2-1-2-应用程序" class="headerlink" title="2.1.2 应用程序"></a>2.1.2 应用程序</h4><p>   用户利用计算机来解决某些问题而编制的程序。</p><h2 id="3-计算机的其他组成"><a href="#3-计算机的其他组成" class="headerlink" title="3. 计算机的其他组成"></a>3. 计算机的其他组成</h2><h3 id="3-1-数据"><a href="#3-1-数据" class="headerlink" title="3.1 数据"></a>3.1 数据</h3><p>能被计算机所能接收、在储、处理的数字、字符、字母、汉字、图片、图形、声音、动画、视频<br>等都称为计算机的数据。</p><h4 id="3-1-1-数"><a href="#3-1-1-数" class="headerlink" title="3.1.1  数"></a>3.1.1  数</h4><p>[传送门]([计算机中的数 | X-Y-Z`s Blog (gitee.io)](<a href="https://blogofxyz.gitee.io/2021/09/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0/">https://blogofxyz.gitee.io/2021/09/07/计算机中的数/</a>))</p><h5 id="3-1-1-1-数的流通"><a href="#3-1-1-1-数的流通" class="headerlink" title="3.1.1.1 数的流通"></a>3.1.1.1 数的流通</h5><pre class="mermaid">graph LRa[输入信息]==转换==&gt;b[二进制形式]==输出==&gt;c[信息]a--便于存储,运算--&gt;bb--输出--&gt;c</pre><h2 id="4-计算机的发展趋势"><a href="#4-计算机的发展趋势" class="headerlink" title="4. 计算机的发展趋势"></a>4. 计算机的发展趋势</h2><ul><li>微型化。手机，智能手表等。 </li><li>巨型化。超级计算机。</li><li>网络化。通讯网络。</li><li>智能化。机器人。</li><li>多媒体化。声音，视频，动画等媒体的诞生。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 笔记&amp;心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行处理乱码</title>
      <link href="/2021/08/29/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%84%E7%90%86%E4%B9%B1%E7%A0%81/"/>
      <url>/2021/08/29/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%84%E7%90%86%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>主要原因是命令行默认 ASCII 编码字符。而这种编码不支持中文的。</p><p>所以如果需要在命令行打开一些文件，或者类似的操作。</p><h2 id="1-转换编码方式。"><a href="#1-转换编码方式。" class="headerlink" title="1.转换编码方式。"></a>1.转换编码方式。</h2><h3 id="1-1-操作前在命令行输入"><a href="#1-1-操作前在命令行输入" class="headerlink" title="1.1 操作前在命令行输入"></a>1.1 操作前在命令行输入</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">CHCP 65001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后回车。</p><p>小黑框会返回这么一行字：<mark>Active code page: 65001</mark></p><p>这就转换成功了。然后在进行之前要进行的操作。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言与cmd</title>
      <link href="/2021/08/23/c%E8%AF%AD%E8%A8%80/"/>
      <url>/2021/08/23/c%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="1-C语言执行cmd命令"><a href="#1-C语言执行cmd命令" class="headerlink" title="1. C语言执行cmd命令"></a>1. C语言执行cmd命令</h2><h3 id="1-1-启动程序"><a href="#1-1-启动程序" class="headerlink" title="1. 1   启动程序"></a>1. 1   启动程序</h3><ul><li><p>start  path+.exe /.exe</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(){    system("start explorer.exe");    system("start S:\\S_Chat\\WeChat\\WeChat.exe");    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="1-2-关机"><a href="#1-2-关机" class="headerlink" title="1.2 关机"></a>1.2 关机</h3><h4 id="1-2-1-shutdown-s-t-time"><a href="#1-2-1-shutdown-s-t-time" class="headerlink" title="1.2.1  shutdown  -s -t  time"></a>1.2.1  shutdown  -s -t  time</h4><p>  ​    -s 为shutdown命令中关机的指令，还可以是  “-f：强制关机” , “-r：重启”,“-h：休眠”，“-l：注销”。</p><p>  ​    -t 为倒计时形式。</p><p>  ​    time为倒计时的时间，单位为秒。</p>  <pre class="line-numbers language-c" data-language="c"><code class="language-c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(){    system("shutdown -f -t 300"); //五分钟后强制关机    //system("shutdown -s -t 300");//五分钟后关机    // system("shutdown -r -t 300");//五分钟后重启    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-2-在某时刻关机"><a href="#1-2-2-在某时刻关机" class="headerlink" title="1.2.2 在某时刻关机"></a>1.2.2 在某时刻关机</h4><p><a href="https://answers.microsoft.com/zh-hans/windows/forum/all/at%E8%A2%AB%E5%BC%83%E7%94%A8%E5%90%8E%E5%A6%82/f2fd63e0-7f52-49cb-854f-1f505a6edee1">在11:11时刻关机</a></p><h3 id="1-3-取消上边的关机命令"><a href="#1-3-取消上边的关机命令" class="headerlink" title="1.3 取消上边的关机命令"></a>1.3 取消上边的关机命令</h3><p>命令行输入：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">shutdown -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回车。</p><h2 id="2-有啥用呢？"><a href="#2-有啥用呢？" class="headerlink" title="2. 有啥用呢？"></a>2. 有啥用呢？</h2><p>首先说启动那个。</p><h3 id="2-1-cmd启动命令"><a href="#2-1-cmd启动命令" class="headerlink" title="2.1 cmd启动命令"></a>2.1 cmd启动命令</h3><h4 id="2-1-1-恶搞。"><a href="#2-1-1-恶搞。" class="headerlink" title="2.1.1 恶搞。"></a>2.1.1 恶搞。</h4><p>可以写一个for循环连续打开同一个程序多次。吓唬一下。当然。别弄成百上千次。我没试过，也不敢试。</p><p>但前提是你需要了解他（她）电脑程序安装的布局。如果他（她）没有整理电脑的习惯。那就好说了，每个程序都安装在 C 盘，不需要去了解。</p><pre class="line-numbers language-none"><code class="language-none">C:\Program FilesC:\Program Files (x86)//懂得都懂<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>QQ，微信，各个视频软件不给他安排上？让他开开眼？</p><h4 id="2-1-2-桌面启动程序"><a href="#2-1-2-桌面启动程序" class="headerlink" title="2.1.2 桌面启动程序"></a>2.1.2 桌面启动程序</h4><p>可以用c++或C语言的桌面开发，写一个自己的桌面启动程序。一个图标，一个点击事件，一个启动就建成了。</p><h3 id="2-2-cmd-关机命令"><a href="#2-2-cmd-关机命令" class="headerlink" title="2.2 cmd 关机命令"></a>2.2 cmd 关机命令</h3><h4 id="2-2-1-恶搞"><a href="#2-2-1-恶搞" class="headerlink" title="2.2.1 恶搞"></a>2.2.1 恶搞</h4><p>也是恶搞。</p><h4 id="2-2-2-平时省劲"><a href="#2-2-2-平时省劲" class="headerlink" title="2.2.2 平时省劲"></a>2.2.2 平时省劲</h4><p>平时关机需要点至少两下。如果是个生成的exe程序，或者bat文件，双击即可。</p><h4 id="2-2-3-省电"><a href="#2-2-3-省电" class="headerlink" title="2.2.3 省电"></a>2.2.3 省电</h4><p>有的时候下载东西。但是自己有事不能看着，这个命令就能用了。大概估算时间。然后设置下就行了。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（待优化）python入门</title>
      <link href="/2021/08/21/%EF%BC%88%E5%BE%85%E4%BC%98%E5%8C%96%EF%BC%89python%E5%85%A5%E9%97%A8/"/>
      <url>/2021/08/21/%EF%BC%88%E5%BE%85%E4%BC%98%E5%8C%96%EF%BC%89python%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>假期自学，代码都是自己看视频时联想敲得，与任何教程无关。为了腾电脑的地方，顺便复习下，学习后边的内容，就整理了下之前敲得。注释与解释不太多（别幻想别人写一大堆注释，有写注释的习惯吗），看的话凑活看，不懂得可以联系me。其他内容持续更新。</p><p>python版本:3.6.6</p><p>python在线运行代码：-&gt;&gt;&gt;&gt; [菜鸟在线 Editor](<a href="https://www.runoob.com/try/runcode.php?filename=HelloWorld&amp;type=python3">菜鸟教程在线编辑器 (runoob.com)</a>)-&gt;&gt;&gt;&gt;</p><h2 id="1-if…elif…else"><a href="#1-if…elif…else" class="headerlink" title="1. if…elif…else"></a>1. if…elif…else</h2><ul><li><p>if条件中 且 用‘and’ 或 用‘or’</p></li><li><p> keyword: “产生随机字符串”，</p></li></ul> <pre class="line-numbers language-python" data-language="python"><code class="language-python"> ##  if条件中 且 用‘and’ 或 用‘or’  n = input("输入任意数字")if int(n) % 2 == 0 and n != "0":    print("输入为偶数")elif int(n) % 2 != 0:    print("输入为奇数")else:    print("输入非数字或 “0” ")  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-运算符、文件写入、id"><a href="#2-运算符、文件写入、id" class="headerlink" title="2. 运算符、文件写入、id()"></a>2. 运算符、文件写入、id()</h2><h3 id="2-1运算符"><a href="#2-1运算符" class="headerlink" title="2.1运算符"></a>2.1运算符</h3><h4 id="2-1-1-算数与赋值运算符"><a href="#2-1-1-算数与赋值运算符" class="headerlink" title="2.1.1 算数与赋值运算符"></a>2.1.1 算数与赋值运算符</h4><p>​    几个与其他语言不同，或比较特殊的几个。</p><p>​      ** ：幂，如2**5为2^5^ 。</p><p>​      //  ：取整除，“/”，所得结果带小数部分。“//”，结果只有整数部分。</p><p>​      /=、//=、**=：类比理解。</p><h3 id="2-1-2-逻辑运算符"><a href="#2-1-2-逻辑运算符" class="headerlink" title="2.1.2 逻辑运算符"></a>2.1.2 逻辑运算符</h3><p>​    在条件组合时不是其他语言那样  “||”, “&amp;&amp;”,  “!”。</p><ul><li>“||” 用 “or” 替换</li><li>“&amp;&amp;” 用 “and” 替换</li><li>“!” 用 “not” 替换</li></ul><h3 id="2-1-3-位运算符"><a href="#2-1-3-位运算符" class="headerlink" title="2.1.3 位运算符"></a>2.1.3 位运算符</h3><p>​    &amp; <sup>与</sup> ， | <sup>或</sup>， ^ <sup>异或</sup> ， ~ <sup>取反</sup>， &lt;&lt; <sup>左移</sup>， &gt;&gt; <sup>右移</sup>。运算只针对于二进制数，运算逻辑与其他语言相同。</p><p>其中用到  <mark>格式化输出字符串</mark> 。可通过目录前往了解学习。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  encoding:utf-8#  keyword:“input”，“逻辑运算符”，“&gt;&gt;”，“&lt;&lt;”，“|”，“^”,#      “变量地址”from os import errora = input("输入字符串")x = input("输入一个数 X:")# 输入xtry:    x = int(x)except:    print("输入数据有误!")    exit(0)# 输入yy = input("输入一个数Y:")try:    y = int(y)except:    print("输入数据有误!")    exit(0)templea = "% 8s\n% 10d\n"templeb = "{0: &gt;9s}\n{1: &gt;#20b}\n"templec = "{0: &gt;9s}\n{1: &gt;#20b}\n{2: &gt;#20b}\n"a += "\n"prs1 = [    ("原数(x):", x),    ("原数(y):", y),    ("值id(x)：", id(x)),]prs2 = [    ("二进制(x):", x),    ("二进制(y):", y),    ("右，移(x&gt;&gt;2):", x &gt;&gt; 2),    ("左，移(x&lt;&lt;2):", x &lt;&lt; 2),]prs3 = [    ("异或(x^y,y^x):", x ^ y, y ^ x),    ("_或(x|y，y|x):", x | y, y | x),]for item in prs1:    a += templea % itemfor item in prs2:    a += templeb.format(item[0], item[1])for item in prs3:    a += templec.format(item[0], item[1], item[2])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-while"><a href="#3-while" class="headerlink" title="3. while"></a>3. while</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword: “while”，“ascll转字符”，“字符转ascll”，#      “ord()”，“chr()”，#  encoding:utf-8string = "A"#  根据字符取ascll码值a = ord("A")i = 0while i &lt; 60:  #  根据ascll码值取字符  st ring += chr(a)  if i % 3 == 0: print()  print(a, ":" + chr(a), end=" ")  i = i + 1  a = a + 1print(string)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-序列"><a href="#4-序列" class="headerlink" title="4. 序列"></a>4. 序列</h2><h3 id="4-1-序列的基本操作"><a href="#4-1-序列的基本操作" class="headerlink" title="4.1 序列的基本操作"></a>4.1 序列的基本操作</h3><p>加，乘，切片，索引</p><p> 序列支持负数索引, 当序数为负时从右向左数<br>        list(start,end.stop)<br>         序列为’[]’,元组为’()’,字典为’{}’。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  encoding:utf-8#  keyword：“序列加”，“序列乘”，“序列切片”，“序列索引”print("")name=["张三","张四","张五","李四","李五"]number=[1,2,3,4]#  乘print(name*3)#  加print("name+number", name+number,"")#  切片【从第二个开始，到第六个以前，间隔为2】namenum=name+numberprint("namenum[1:5:2]",namenum[1:5:2],"")print("namenum[:5:]",namenum[:5:],"")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-序列的常见方法"><a href="#4-2-序列的常见方法" class="headerlink" title="4.2 序列的常见方法"></a>4.2 序列的常见方法</h3><p>max，min，exist，unexist</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword:“序列最大值”，“序列最小值”，“序列存在判断”，#  encoding:utf-8numbers=[1.2,123.1,456,486,456,156,111,222,333]print(numbers)print("最大值",max(numbers))print("最小值",min(numbers))print("长度",len(numbers))x=456print("是否存在",x,x in numbers)y=678print("是否不存在",y,y not in numbers)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-序列的遍历"><a href="#4-3-序列的遍历" class="headerlink" title="4.3 序列的遍历"></a>4.3 序列的遍历</h3><p>for…in…(enumerate())</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"># for a b in c :#  表达式#  a:序列(index)，当前值得序号。#  b:临时量，取出来的值都赋值给他，#  c:序列#  keyword:"for循环","遍历",# encoding:utf-8name = ["dage", "erge", "sange", "laosi", "laowu", "xiaoliu"]print(name)a=0for linshide in name:  if a % 2==0 :    ## 换行    print("\n")  print("\t"+linshide,end="")## 不换行打印  a=a+1 ## python不支持自增|自减运算for xuhao, name in enumerate(name):  if xuhao % 2==0 :    print("")  print("\t序号是：" + str(xuhao), "\t名字是" + name, end="")##不换行输出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-4-序列的-增-删-改"><a href="#4-4-序列的-增-删-改" class="headerlink" title="4.4 序列的 增 删 改"></a>4.4 序列的 增 删 改</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#!keyword: “序列修改”，“序列增”，“序列删”，“序列改”，#  定义:# encoding:utf-8name = ["dage", "erge", "sange", "laosi", "laowu", "xiaoliu"]print("\n定义的数组为：")print(name)#  添加:name.append("laomo")print("\n添加一个后的数组：" )print(name)#  通过索引获取指定值。直接重新赋值。strint=name[0]="dageda"print("\n添加一个后再修改下的数组：")print(name)# 删除指定“dage” 即 删除name[2]del name[0]print("\n删除 name[0] 的数组：")print(name)#  等效的代码#  name.remove("dage")#  print("\n删除“dage” 的数组：")#  print(name)# 二次删除会出错（删除不存在的元素会出错）#  name.remove("dage")#  print(name)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-5-序列的统计求和"><a href="#4-5-序列的统计求和" class="headerlink" title="4.5 序列的统计求和"></a>4.5 序列的统计求和</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#! keyword：“序列求和”，“序列统计出现次数”，# encoding:utf-8nums=[123,456,789,321,951,654,789,123,654,987,147,258,654,852,147,369,741,852,963]nums_plus=nums*2# 统计某一元素出现次数if 147 in nums_plus :  print("147出现次数为\t:"+ str(nums_plus.count(147)))else:  print(str(147)+"不存在")# 全部元素求和（仅限元素全为数字类型）print("nums和为\t:"+str(sum(nums))+"\nnums_plus和为\t:"+str(sum(nums_plus)))# keyword：“序列求和”，“序列统计出现次数”，nums=[123,456,789,321,951,654,789,123,654,987,147,258,654,852,147,369,741,852,963]nums_plus=nums*2##? 统计某一元素出现次数if 147 in nums_plus :  print("147出现次数为\t:"+ str(nums_plus.count(147)))else:  print(str(147)+"不存在")##? 全部元素求和（仅限元素全为数字类型）print("nums和为\t:"+str(sum(nums))+"\nnums_plus和为\t:"+str(sum(nums_plus)))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-6-序列的排序"><a href="#4-6-序列的排序" class="headerlink" title="4.6 序列的排序"></a>4.6 序列的排序</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"># / 1.sort(interable【序列名】，key=none【关键词，默认为none,-# / -可设置为 “str.lower” 不区分大小写】，-# / -reverse【降序，boolean变量，默认为升序(false)】)# / 2.排序可用sorted()方法，也可用 “yigexulie.sort()” -# / -sorted()三个参数（序列名，关键词，逆序）.返回一个序列-# / - sort()两个参数（关键词，逆序）#  keyword：“序列排序”，# encoding:utf-8# 定义俩序列names=["toms","Jone","Tony","alice","obma"]numbers=[123,456,789,321,951,654,789,123,654,987,147,258,654,852,147,369,741,852,963]print("\n原序列names:")print(names)print("\n原序列numbers:")print(numbers)#排序names.sort()numbers.sort()print("\n升序排列names(区分大小写)：")print(names)#添加key使不区分大小写names.sort(key=str.lower)print("\n升序排列names(不区分大小写)：")print(names)print("\n升序排列numbers：")print(numbers)names.sort(key=str.lower,reverse=True)print("\n降序排列names：")print(names)print("\n降序排列numbers：")numbers= sorted(numbers,reverse=True)print(numbers)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-7-序列推导式"><a href="#4-7-序列推导式" class="headerlink" title="4.7 序列推导式"></a>4.7 序列推导式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"># list= [a for b in c]# a:表达式; b: 为迭代个数; c: 临时量,每次取出来东西都赋值给他.# encoding:utf-8import mathimport random##example: 一般定义法list1 = []for i in range(20):  list1.append(random.randint(30, 99))print("list1")print(list1)##example:定义从30~99的20个随机数。list2 = []list2 = [random.randint(30, 99) for i in range(20)]print("\nlist2:")print(list2)##example:定义从2开始的偶数立方数列list3 = []list3 = [math.pow(i, 3) for i in range(1, 20, 3)]##//range(start，end，step)函数print("\nlist3:")print(list3)##example:从list4中运算后筛选符合条件的##//newlist=[expression for var in list if condition]list4 = []list4 = [math.sqrt(i) for i in list3 if math.sqrt(i) % 2 == 0]print("\nlist4:")print(list4)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-元组"><a href="#5-元组" class="headerlink" title="5. 元组"></a>5. 元组</h2><p>元组不能编辑，不能删除一个或多个元素，只能整个删除</p><p> 序列为’[]’,元组为’()’,字典为’{}’。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"># encoding:utf-8num = 156st = "string_a"one_index = [12, 45, 65, 78]##? 声明一个很杂的元组tup1 = (  num,  st,  one_index,)print("有一个元组为:")print(tup1)##! tuple 在声明是，如果只有一个值，必须在后边加逗号tup2 = ("123456321",)tup3 = ("ab", "cd", "ef", 98765132, "#$%$&amp;")print("组合后的元组：")##? 元组可进行 '+','*' 运算alltuple = tup1 + tup2 + tup3print(alltuple * 2)##? 输出指定序号元素t = input("请输入元组序数" + "0~" + str(len(alltuple)))print(alltuple[int(t) - 1]) # 序号从 0 开始<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-字典"><a href="#6-字典" class="headerlink" title="6. 字典"></a>6. 字典</h2><h3 id="6-1-字典的生成"><a href="#6-1-字典的生成" class="headerlink" title="6.1 字典的生成"></a>6.1 字典的生成</h3><p>序列为’[]’,元组为’()’,字典为’{}’。</p><p>示例：</p><p>​    声明两个序列，用于合成字典.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dicti_b = {"拉丁语": "Latin", "鸟语": "!&amp;*/"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"># encoding:utf-8#  声明一个字典.dicti_a = {}dicti_b = {"拉丁语": "Latin", "鸟语": "!&amp;*/"}# 两种声明方法。dicti_c = dict()# 声明两个序列，用于合成字典.English = ["Chinese", "English", "Japanese", "Russian", "French", "German", "Korean"]Chinese = ["中文", "英语", "日语", "俄语", "法语", "德语", "韩语"]# zip函数压缩.didi = zip(Chinese, English)# 生成函数.dicti_d = dict(didi)print("声明的字典a")print(dicti_a)print("声明的字典b")print(dicti_b)print("声明的字典c")print(dicti_c)print("声明的字典d")print(dicti_d)# clear用于清除字典里的所有项。dicti_c.clear()# 输出 clear 后的字典 d 中的元素及个数print("dicti_c clear()后" + "dicti_c还有" + str(len(dicti_c)) + "个元素")print(dicti_c)# del用于删除对象del dicti_dprint("delete后的 e")# 插入一个错误调试.try:  print(dicti_d)except NameError as error:  print(error)finally:  print("结束")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-字典的基本操作"><a href="#6-2-字典的基本操作" class="headerlink" title="6.2. 字典的基本操作"></a>6.2. 字典的基本操作</h3><p> add &amp; delete &amp; 遍历</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"># keyword：“字典添加”，“字典删除”，“字典遍历”# encoding :utf-8name = { "吴晓咖","刘佳怡","徐之才","单久思","曹侃儿","开俊峰","倪吉本","苗人凤","荣家达","狄俊娥","牛春波","莫桑石",}sign = {"子鼠", "丑牛", "寅虎", "卯兔", "辰龙", "巳蛇", "午马", "未羊", "申猴", "酉鸡", "戌狗", "亥猪"}# 压缩。term = zip(name, sign)roster = dict(term)print(roster)# 遍历输出for xxoo in roster.items():    print(xxoo)print("你想要添加还是删除?")t = input("1.删除。\n2.添加。\n3.修改\n")if t == "1":    del_name = input("请输入删除人的名字:")    ## 删除操作    if del_name in roster:        del roster[del_name]    else:        print("输入人名不存在.操作结束!")elif t == "2":    add_name = input("请输入姓名:")    if add_name in roster:        print("此人已录入。操作结束!")        else:        add_sign = input("请输入此人生肖:")            if add_sign not in sign:            print("兄弟，十二生肖都不会背呀。")        else:            ## 添加操作。            roster[add_name] = add_signelif t == "3":    edit_name = input("请输入修改人姓名：")    if edit_name in roster:        print(roster[edit_name])            edit_sign = input("请输入修改人生肖：")            if edit_sign not in sign:            print("兄弟，十二生肖都不会背呀。")        else:            roster[edit_name] = edit_signelse:    print("你好像没有按要求输入呦（1 or 2）！")## 只输出值，不输出标签的遍历。for ooxx in roster.keys():    print(ooxx)## 值与标签双遍历。for key, value in roster.items():    print("键是：" + key + "    值为：" + value)##  两种输出值的方法.假设输入要查询的人名变量为 find_name##  1.直接根据人名进行输出，没有后边的判断则会出错。##    print(roster[find_name] if edit_name in roster else print("没有此人"))##  2.根据人名判断是否存在，当不存在时输出后一位指定的值。默认为 “none”##    print(roster.get(find_name,"没有此人"))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-字符串"><a href="#7-字符串" class="headerlink" title="7. 字符串"></a>7. 字符串</h2><h3 id="7-1-字符串的基本操作"><a href="#7-1-字符串的基本操作" class="headerlink" title="7.1 字符串的基本操作"></a>7.1 字符串的基本操作</h3><p>“+”，“split”，“切片”</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword:“字符串拼接”，“字符串分割”，“字符串切片”，#          “字符串计算长度”.# encoding: utf-8poem_first = "老夫聊发少年狂，左牵黄，右擎苍，锦帽貂裘，千骑卷平冈。为报倾城随太守，亲射虎，看孙郎。"poem_second = "酒酣胸胆尚开张。鬓微霜，又何妨！持节云中，何日遣冯唐？会挽雕弓如满月，西北望，射天狼。"letter = "        Transportation has been greatly changed in the past few years. In ancient days, people used to travel by horse or carriage. The journey was often tiring and tedious. Then people had buses, trains and ships, which could shorten the time of the long-distance trip. \n\n\t\t\t"#  字符串拼接all_poem = poem_first + poem_secondprint("整首诗如下：" + all_poem)#  字符串分割#  split(a,b):a为分割时的字符,b为分割次数，默认为无限（-1也是无限次）#  如果不指定第一个参数，默认以空白字符--#  --不管空多少，都算一个，eg：“   ”，“ ”，“\n” 都是一样的）strs = all_poem.split("。", -1)print("整首诗按句号分割为：")for linshi in strs:    print("@" + linshi)# 或者print(strs)#  截取字符串 poem_first[a:b:c]（同序列切片.）a = 2b = 30c = 3print(    "\n分片字符串为(开始" + str(a) + "，到" + str(b) + "，间隔为" + str(c) + ": ", poem_first[a:b:c])#  去除空格# 去除开始与末尾的\t,\n,\r(回车)与" "空格可以去除多个。特殊字符只能去除一个。print("\n英语作文去空格:\t", letter.strip(" "))# 去除左侧空格或特殊字符# print("\n英语作文去空格:\t", letter.lstrip(" "))# 去除左侧空格或特殊字符# print("\n英语作文去空格:\t", letter.rstrip(" "))#  字母变为小写。print("\n英语作文变小写:\t", letter.lower())#  字母变大写。print("\n英语作文变大写:\t", letter.upper())#  替代字符。print("\n英语作文空格换位'@'：\t", letter.replace(" ", "@"))#  计算字符串长度.#  不区分字母与汉字。字母与汉字都算一个长度。print("\n不区分字母与汉字长度为：" + str(len(poem_first)))#  以 GBK 编码格式输出字符串长度print("\nUTF-8计数长度为：" + str(len(poem_first.encode("gbk"))))#  以 UTF-8 编码格式输出字符串长度print("\nUTF-8计数长度为：" + str(len(poem_first.encode())))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-2-字符串索引"><a href="#7-2-字符串索引" class="headerlink" title="7.2. 字符串索引"></a>7.2. 字符串索引</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword:“字符串查找”，“字符串存在判断”，mulanshi = "唧唧复唧唧，木兰当户织。不闻机杼声，唯闻女叹息。问女何所思，问女何所忆。女亦无所思，女亦无所忆。昨夜见军帖，可汗大点兵，军书十二卷，卷卷有爷名。阿爷无大儿，木兰无长兄，愿为市鞍马，从此替爷征。东市买骏马，西市买鞍鞯，南市买辔头，北市买长鞭。旦辞爷娘去，暮宿黄河边，不闻爷娘唤女声，但闻黄河流水鸣溅溅。旦辞黄河去，暮至黑山头，不闻爷娘唤女声，但闻燕山胡骑鸣啾啾。万里赴戎机，关山度若飞。朔气传金柝，寒光照铁衣。将军百战死，壮士十年归。归来见天子，天子坐明堂。策勋十二转，赏赐百千强。可汗问所欲，木兰不用尚书郎，愿驰千里足，送儿还故乡。爷娘闻女来，出郭相扶将；阿姊闻妹来，当户理红妆；小弟闻姊来，磨刀霍霍向猪羊。开我东阁门，坐我西阁床，脱我战时袍，著我旧时裳。当窗理云鬓，对镜帖花黄。出门看火伴，火伴皆惊忙：同行十二年，不知木兰是女郎。雄兔脚扑朔，雌兔眼迷离；双兔傍地走，安能辨我是雄雌？"mulan = "木兰"#  检测某一字符创是否存在于目标字符串（可以加入切片操作）print(mulan in mulanshi[0:5:])print(mulan in mulanshi[0:10:])#  find()   输出指定 “木兰” 在 “木兰诗” 中第一次出现的索引 -1 。print(" “木兰” \t第一次\t出现位置为：\t", mulanshi.find(mulan, 7, 390))#  rfind()  输出指定 “木兰” 在 “木兰诗” 中最后一次出现的索引 -1print(" “木兰” \t第一次\t出现位置为：\t", mulanshi.rfind(mulan))#  index()  输出“女”第一次出现的位置。print(" “女” \t\t第一次\t出现位置为：\t", mulanshi.index("女"))#  count()  输出出现次数print(    "“木兰”\t\t出现次数为：\t", mulanshi.count("木兰"), "\n “女” \t\t出现次数为：\t", mulanshi.count("女"))#  判断是否以指定字符串结尾或者开始。同样可加入切片。print(mulanshi.startswith("唧唧复唧唧", 0, 20))print(mulanshi.startswith("唧唧复唧唧", 1, 20))print(mulanshi.endswith("雄雌？"))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-3-格式化字符串"><a href="#7-3-格式化字符串" class="headerlink" title="7.3. 格式化字符串"></a>7.3. 格式化字符串</h2><p>% 格式化</p><p>% [命名] [宽度] . [精度度] typecode</p><ul><li>表示右对齐。- 表示左对齐。<br>‘ ‘ 一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。<br>0 表示使用 0 填充。<br>“宽度”： 表示填充后的宽度。<br>精确度：表示小数点后精度 。</li></ul><table><thead><tr><th align="center">typecode</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">%r</td><td align="center">字符串 (repr()显示)</td></tr><tr><td align="center">%g</td><td align="center">指数(e)或浮点数 (根据显示长度)</td></tr><tr><td align="center">%s</td><td align="center">字符串(str()显示)</td></tr><tr><td align="center">%G</td><td align="center">指数(E)或浮点数 (根据显示长度)</td></tr><tr><td align="center">%c</td><td align="center">单个字符输出</td></tr><tr><td align="center">%b(i)(d)(o)(x)</td><td align="center">二、八、十、十六进制整数</td></tr><tr><td align="center">%e（E）</td><td align="center">指数(基底写为e(E))</td></tr><tr><td align="center">%f(F)</td><td align="center">浮点数,与上相同</td></tr><tr><td align="center">%%</td><td align="center">字符”%”</td></tr></tbody></table><p>format 格式化<br>{ [index] <b style="color:red"> [ <b style="color:yellow">[:<b style="color:green">[fill] align</b> ] [sign] [#] [width] [.precision] [type] </b> ]</b>  }</p><table><thead><tr><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">index</td><td align="center">默认按顺序自动分配。可选参数，用于指定设置格式的对象在–<br>#           –参数列表中的索引位置，从0开始。</td></tr><tr><td align="center">fill</td><td align="center">可选参数，用于空白处填充的字符。</td></tr><tr><td align="center">align</td><td align="center">可选参数， 用于指定对齐方式。</td></tr><tr><td align="center">&lt;</td><td align="center">左对齐。</td></tr><tr><td align="center">&gt;</td><td align="center">右对齐。</td></tr><tr><td align="center">^</td><td align="center">居中对齐。需指定宽度。</td></tr><tr><td align="center">=</td><td align="center">右对齐。只对数字类型有用，尤其用于输出负数。</td></tr><tr><td align="center"><br>sign</td><td align="center">可选参数，用于指定有无符号数<br>‘+’：正数添加‘+’号,负数添加‘-’号。<br>‘-‘：只有负号添加符号。<br>‘ ‘:正数加空格补齐，负数加负号</td></tr><tr><td align="center">#</td><td align="center">可选参数，加#时输出二进制，八进制十六进制会添加  0b  0o  0x 前缀</td></tr><tr><td align="center">type</td><td align="center">…….</td></tr><tr><td align="center">type</td><td align="center">含义</td></tr><tr><td align="center">:–:</td><td align="center">:——————————–:</td></tr><tr><td align="center">s</td><td align="center">对字符串格式格式化</td></tr><tr><td align="center">b</td><td align="center">十进制数转换为二进制再格式化；</td></tr><tr><td align="center">d</td><td align="center">十进制数</td></tr><tr><td align="center">o</td><td align="center">十进制数转换为八进制再格式化；</td></tr><tr><td align="center">c</td><td align="center">十进制数转换为对应Unicode字符</td></tr><tr><td align="center">%</td><td align="center">显示百分比(默认小数后六位)</td></tr><tr><td align="center">x,X</td><td align="center">十进制数转换为十六进制再格式化</td></tr><tr><td align="center">e,E</td><td align="center">转换为科学计数法再格式化</td></tr><tr><td align="center">f,F</td><td align="center">转换为浮点数再格式化(默认六位小数)</td></tr><tr><td align="center">g,G</td><td align="center">e与f或E与F之间互换</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python">import mathtemplate_a = "编号:%-08d\t 网站名：%s \t 网站：https://www.%s.com\t 公司老总:%4s\t"temps = [    (1, "百度", "baidu", "李彦宏"),    (2, "淘宝", "taobao", "马云"),    (3, "腾讯", "tencent", "马化腾"),]print(template_a)for ls in temps:    print(template_a % ls)strin1 = "马云,\t身价:\t{0:,.5f}".format(5621684.1531516)strin2 = "刘强东,\t身价:\t{0:.10f}".format(464553126.89645321384932)print(strin1)print(strin2)print(    "π为：{:.12f}\n'1801001'\t的二进制为：\t{:#b}\n'86159452'\t的八进制为：\t{:#o}\n'4532154'\t的十六进制为：\t{:#x}".format(        math.pi, 1801001, 86159452, 4532154    ))print(    "这是abc：\t{abc}\n这是bcd：\t{bcd:#x}\n这是cde：\t{cde:}\n".format(        abc="1354632", bcd=8465123, cde=[123, 456, 789]    ))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-python数据存储原理"><a href="#8-python数据存储原理" class="headerlink" title="8. python数据存储原理"></a>8. python数据存储原理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“存储原理”，“id()”，“id”# encoding: utf-8def print_id(a, b):    print("a:{0: &gt;15s} id(a): {1: &gt;15s} ".format(str(a), str(id(a))))    print("b:{0: &gt;15s} id(b): {1: &gt;15s} ".format(str(b), str(id(b))))    print()print("{: ^40s}\n".format("-----------string测试----------"))a = "ss1263"b = "ssssss1263"print_id(a, b)a = "ssssss1263"print("修改a的值")print_id(a, b)print("修改b的值")b = "ss1263"print_id(a, b)print("删除a，b")del (a, b)c = "ss1263"print("id(c)", id(c))print("{: ^40s}\n".format("-----------number测试----------"))a = "451263"b = "1263"print_id(a, b)a = "1263"print("修改a")print_id(a, b)print("修改b")b = "451263"print_id(a, b)print("删除a与b")del (a, b)c = "451263"print("id(c)", id(c))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-正则表达式"><a href="#9-正则表达式" class="headerlink" title="9.正则表达式"></a>9.正则表达式</h2><p>基础正则了解：<a style="font-family:’kaiti’;">[点我]([正则语法整理 | X-Y-Z`s Blog (gitee.io)](https://blogofxyz.gitee.io/2021/08/14/正则语法整理/))</a></p><h3 id="9-1-查找"><a href="#9-1-查找" class="headerlink" title="9.1 查找"></a>9.1 查找</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  match &amp; search &amp; findall#  match     匹配整个字符。#  search    在字符串中匹配#  findall 匹配字符串中所有符合表达式的字符串。#  keyword：“正则表达式”，“正则匹配”，“正则”# encoding: utf-8# !!!!!!!!!!导入reimport re#  1.re.match(regular_express,string)#    比较字符串是否符合要求.elements = [    "19137934628",    "15946295618",    "78945631245",    "48651534582@qq.com",    "68453121@163.com",    "12348621@qweewq.com" "15648934529@gmail.com",    "萨博隔热垫石膏板",    "地方不对付认购",    "调查表身高多少",]regular_express_a = [    r"[0-9]{0,12}@(qq|gmail|163)\.com",    r"1[0-9]{10}$",    r"[^0-9a-zA-Z]",]for i in elements:    for index, j in enumerate(regular_express_a):        ret_a = re.match(j, i)        print(index)        if (ret_a != None) and (index == 0):            print("这是个可使用邮箱", i)        if (ret_a != None) and (index == 1):            print("这是个手机号", i)        if (ret_a != None) and (index == 2):            print("这是一串其他的", i)#  2.re.search(regular_express, string, [flags])#    从字符串中查找符合条件的第一个字符。#    flags:  re.l不区分字母大小写，#            re.A不匹配汉字string = "遥远两端，爱挂在天空飞。风停了也无所谓，只因为你总说。Everthing will be okay。准备好了three two one， I'm always Online。和你one to one ，爱开始扩散。我们连结了-穿越-天空-银河。oh~~。开始倒数three-two-one，删除我的孤单。more and more尽是深刻。爱亮了，爱笑了，I'm always online。变色的生活，任性的挑拨。疯狂的冒出了头。单方的守侯，试探的温柔，却还是少了点什么。遥远两端，爱挂在天空飞。风停了也无所谓，只因为你总说：Everthing Will Be okay。我准备好了three two one, I'm AlWays online，和你one to one 爱开始扩散。我们连结了，穿越-天空-银河-oh~~。开始倒数three two one ，删除我的孤单。"regular_express_b = r"(always|online|穿越-天空-银河)"ret_b = re.search(regular_express_b, string)print(ret_b.start())print(ret_b.end())print(ret_b.group())#  3.findall(regular_express, string, [flags])#    查找多个符合条件的字符串#    re.IGNORECASE:忽略大小写。#    re.LOCALEret_c = re.findall(regular_express_b, string, re.IGNORECASE)print(ret_c)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-2-替换"><a href="#9-2-替换" class="headerlink" title="9.2 替换"></a>9.2 替换</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword: “正则替换”，# encoding: utf-8import restring = "蒹葭苍苍，白露为霜。所谓伊人，在水一方。溯洄从之，道阻且长。溯游从之，宛在水中央。\n蒹葭萋萋，白露未晞。所谓伊人，在水之湄。溯洄从之，道阻且跻。溯游从之，宛在水中坻。\n蒹葭采采，白露未已。所谓伊人，在水之涘。溯洄从之，道阻且右。溯游从之，宛在水中沚。\n"letters = "     Transportation has been greatly changed in the past few years. In ancient days, people used to travel by horse or carriage. The journey was often tiring and tedious. Then people had buses, trains and ships, which could shorten the time of the long-distance trip."regular_express = [r"(蒹葭|伊人)", r"(en|in|an)"]print(re.sub(regular_express[0], "xx", string))print(re.sub(regular_express[1], " --XXXn-- ", letters))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-3-分割"><a href="#9-3-分割" class="headerlink" title="9.3 分割"></a>9.3 分割</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“正则分割”，“分割”，# encoding: utf-8import renames = "焦英武、杨清双、吕纪领、张建春、焦灵卫、赵现伟\n陈秀荣、郎波、程磊、刘子祥、谢绍明 胡红军、张克龙、戴怀海 戴怀敏、张国勤\n李小璇、李军耐、张文博、赵联、肖鹏、边宪武、李伟、李宇、夏廷堂、韩世民、董燕平、张正银\n魏国琼、肖桂茂、李德安、白建永、张旭贵、李香明\n霍建辉、吴旭峰、陈云祥、丁连奇、王遂现、范小锋\n杨宗兵、向书章、李金民、戴家元、刘传禄、贺炳强、云秀芳\n刘善刚、姚海军、贾天义、李加有、方承、杨涛\n杨天海、王富军、张中华、王成林、秦振贵、尚鲜军、李友强、尚加聪"pattern = r"( |、|\n)"tup = re.split(pattern, names)for index, item in enumerate(tup):    if index % 2 == 0:        print("第", int(index / 2), "项：", item)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-函数"><a href="#10-函数" class="headerlink" title="10. 函数"></a>10. 函数</h2><h3 id="10-1普通函数"><a href="#10-1普通函数" class="headerlink" title="10.1普通函数"></a>10.1普通函数</h3><p>掺杂前边的知识，搞得有点多。就算做前边的复习了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword: “global”，“function”，“python中的switch”，#           “switch”，“列表各项相加”，“函数”，“正则运用”，#           “正方形面积”，“圆的面积”，“一次函数”，“二次函数”# ---------------------function----------------------&gt;##  函数次方运算import mathimport re# 输入用正则处理输入字符，筛选数字# python没有switch，用字典+函数实现def case1(lis):    """一次函数"""    if len(lis) &lt; 2:        lis.append(1)    if len(lis) &lt; 3:        lis.append(0)    print(lis[0] * lis[1] + lis[2])def case2(lis):    """二次函数 lis[0]: x,lis[1]:a(默认为1), lis[2]:b(默认为0), lis[3]:c(默认为0) 。"""    if len(lis) &lt; 2:        lis.append(1)    if len(lis) &lt; 3:        lis.append(0)    if len(lis) &lt; 4:        lis.append(0)    print(lis[1] * math.pow(lis[0], 2) + lis[2] * lis[0] + lis[3])def case3(lis):    """多个数求和 &amp; 多字符串拼接"""    print("\n------------数组求和函数-----------\n\n")    string = ""    number = 0    bo = True    for i in lis:        t = re.match(regular_express_se, i)        if t != None and bo:            number += int(i)        else:            bo = False        string += i    print("{0:{2}&gt;6s}:{1:}\n".format("序列", lis, chr(12288)))    if bo:        print("{0:{2}&gt;6s}:{1:}\n".format("各项求和结果", str(number), chr(12288)))    else:        print("{0:{2}&gt;6s}:{1:}\n".format("字符拼接为", string, chr(12288)))def case4(lis):    """数字序列逐项求和"""    #  输出模板    Template = "前%03d项和为% 13d \n"    val = 0    for i in lis:        val += i        print(Template % (lis.index(i) + 1, val))def case5(lis):    """求长方形面积 lis[0]: 长，lis[1]: 宽."""    print(        """{str1:{space}&gt;7s}={length:&gt;5d} \n{str2:{space}&gt;7s}={width:&gt;5d} \n{str3:{space}&gt;7s}={squr:&gt;5d} \n""".format(            str1="此长方形长",            str2="此长方形宽",            str3="此正方形面积",            length=lis[0],            width=lis[1],            squr=lis[0] * lis[1],            space=chr(12288),        )    )def case6(lis):    return Noneswitch = {1: case1, 2: case2, 3: case3, 4: case4, 5: case5, 6: case6}def _function(lis, sec_fun):    """函数大杂烩    lis[0] : x,    lis[1] : a=1 or y    lis[2] : b=0,    lis[3] : c=0,    ……    lis[n] : ……"""    #  函数内声明全局变量时不能赋值,    #  同时，如果要引用全局变量，全局变量--    #  --所在函数必须在此操作之前使用过一次。    if len(lis) &lt; 1:        print("输入有效数据不足，无法进行运算.")        return None        else:        return switch[sec_fun](lis)def se_start_input():    """开始时的函数选择"""    #  检查选择是否合法    Regular_Express = r"^[1-6]{1}($| +)"        st = input(        "选择进行几次函数的运算\n"        + "1.一次函数\n(依次输入x，a 默认为1，b 默认为1)\n\n"        + "2.二次函数\n(依次输入x，a 默认为1，b 默认为0,c 默认为0,)\n\n"        + "3.数字或字符串相加\n(依次输入多项)\n\n"        + "4.逐项相加\n(依次输入多个数字)\n\n"        + "5.长方形求面积\n(依次输入长，宽)\n\n"        + "6.结束\n"    )        result = re.match(Regular_Express, st)    if result == None:        print("输入错误！只能输入‘1-6’ 呦！")        return 0    else:        return int(st)# ---------------------------------------------------&lt;#print("\n\n--------------函数运算-------------\n", "\n")#  选择玩的函数sec_fun_ = 0sec_fun_ = se_start_input()if sec_fun_ != 0 and sec_ele_ != 7:    print("\n请根据选择运算，输入一系列数据，以空格分隔\n        请输入:")    #  输入        inp = input()    #  分割.-1指分割不限次数    lt = inp.split(" ", -1)    #  空序列，最后传入函数处理    lis = []        #  case3的正则    regular_express_add = r"[^ \n]"    #  筛选数字的正则    regular_express_se = r"^[0-9]+$"        #  按不同函数用不同正则再次筛选    if sec_fun_ != 3:        #  处理字符串：只录入数字        for index, i in enumerate(lt):            if re.match(regular_express_se, lt[index]) != None:                try:                    lis.append(int(i))                except:                    try:                        lis.append(float(i))                    except:                        print("数字转换有误")    else:        #  处理字符串：录入非空格字符串        for index, i in enumerate(lt):            if re.match(regular_express_add, lt[index]) != None:                lis.append(i)        _function(lis, sec_fun_)    print("over")else:    print("over")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-2匿名函数"><a href="#10-2匿名函数" class="headerlink" title="10.2匿名函数"></a>10.2匿名函数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“匿名函数”，“关键字参数”，“默认值参数”，#  当函数中出现有默认值时必须位于参数集的最后# encoding:utf-8def R_S(R, pai=3.14, string=""):  """圆求面积"""  print(    "\n\n"    + string    + "\n"    + "此圆的半径 r={radius: 5d}\n此圆的面积 S= {squr:.3f}".format(      radius=R, squr=R * R * pai    ),  )x = int(input("输入圆的半径"))#  匿名函数 用 lambda 修饰词前缀.y = lambda ds: ds * ds * 3.14print("\n" + str(y(x)))R_S(x, string="R_S(x):")R_S(x, 3, "R_S(x, 3):")R_S(string="R_S(pai=3.142, R=x):", pai=3.142, R=x)#  传入数组，或多参数。def func(*par):  for i in par:    print(i)    #  参数原理为：定义一个变量的列表，用*来传入列表地址#  若传入参数类型繁多，则读取时需了解每次读取的数据类型。strs = ["语文", "数学", "英语", "物理", "化学"]strss = ["Chinese", [12.0, 45.12, 44.11], 45699, bin(423),hex(423)]func(*strs)print("\n")func(*strss)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-class"><a href="#11-class" class="headerlink" title="11. class"></a>11. class</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“class”，“从序列中取随机元素”，“从字典中取随机元素”#           “choice”，# encoding:utf-8brand = {"上汽集团": "大众", "东风": "雪铁龙", "奔驰": "Mercedes-Benz", "凯迪拉克": "Cadillac"}produce_country = ["China", "American", "India", "European"]code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"# -----------------class----------------&gt;#class Car:  """ 汽车模型 先生成后赋值 """  Name = ""  Brand = ""  Producer = ""  Produce_Country = ""  def make_success(self):    print(      "生成了一辆小汽车",      "\n名字:" + self.Name,      "\n品牌:" + self.Brand,      "\n生产商:" + self.Producer,      "\n产地:" + self.Produce_Country,      "\n",    )# 一个类中同一方法只能生效最后一次定义。""" 初始化函数与构造函数 括号内不加参数时函数内   def __init__():     brand = self.carname   print("生成了一辆小汽车:222") """# -------------------function-----------------------&lt;##-----------------class-----------------&gt;#def mass_produce(number):  """ 批量造车 """  import random  lis = []  i = 0  while i &lt; number:    i = i + 1    j = 0    name = ""    while j &lt;= 10:      name += code[random.randint(0, len(code) - 1)]      j = j + 1    car = Car()    car.Name = name    car.Brand = random.choice((list(brand)))    car.Produce_Country = random.choice(produce_country)    car.Producer = brand[car.Brand]    lis.append(car)  return lis# ---------------------function----------------------&lt;#numb = int(input("输入生产汽车的数量"))t = mass_produce(numb)for i in t:  i.make_success()print("已成功生产", numb, "辆车")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-访问限制"><a href="#12-访问限制" class="headerlink" title="12. 访问限制"></a>12. 访问限制</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“访问限制”，#  没多大用。。。。。。。# encoding:utf-8class car:  """ produce car """# price: ""# _brand: ""# __color: ""  def __init__(self):    self.price = 4000    self._brand = "asdfa"    self.__color = "red"vehicle = car()print(vehicle.price)print(vehicle._brand)print(vehicle._car__color)vehicle.price = 50vehicle._brand = "qqqqqqqqqqq"vehicle._car__color = "aaaaaaaaaa"print(vehicle.price)print(vehicle._brand)print(vehicle._car__color)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-property"><a href="#13-property" class="headerlink" title="13. property"></a>13. property</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">#  keyword：“属性变化”，“装饰器”，“property”# encoding:utf-8class car:  """计算价格"""  def __init__(self, door, tie):    self.door = door    self.tie = tie    self.band_price = 5000.0#  方法转换为属性  @property  def total_cost(self):    """(door + tie) x 4 + price"""    return (self.door + self.tie) * 4 + self.band_pricespend = car(203, 450)print(spend.total_cost)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="14-学习中……"><a href="#14-学习中……" class="headerlink" title="14.学习中……"></a>14.学习中……</h2>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 语言入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/2021/08/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2021/08/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><hr><p>常见的数据类型有：<br>[byte](#1. byte)，<a href="#char">char</a>，<a href="#short">short</a>，<a href="#int">int</a>，<a href="#float">float</a>，<a href="#long">long</a>，<a href="#double">double</a>，<a href="#date">date</a>，<a href="#date">datetime</a>，<a href="#other">other</a></p><div id="byte"></div><h3 id="1-byte"><a href="#1-byte" class="headerlink" title="1. byte"></a>1. byte</h3><p>​    byte 为字节。有点常识就知道   1字（节）=8位。即用八个二进制位来表示，所以有</p><p>​    (-2<sup>7</sup>)~(2<sup>7</sup>-1)</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">byte a=1;//  -128~127<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    <u>？？？为啥整数比负数少一个？？？</u></p><p>​    是因为   -128<del>-1可以用 10000000</del>11111111 来表示</p><p>​    开头的 ‘1’ 表示此数为负，只能用 00000000~01111111来表示0~127，因为再加一就是-128啦。    </p><div id="char"></div><p></p><h3 id="2-char"><a href="#2-char" class="headerlink" title="2. char"></a>2. char</h3><p>​    char 类型占用一字节，8个二进制位。</p><p>​    char为字符型，学过几门语言的人都知道：在程序中大小写英文字母，以及数字的数据大小就是一个字符。与 byte 所占内存一样为一字节。如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">char b='a';//也就是ASCII表示的字符。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就是声明一个字符变量 a，给其赋值为字符 “a”。</p><div id="short"></div><h3 id="3-short"><a href="#3-short" class="headerlink" title="3. short"></a>3. short</h3><p> short 用来定义数字变量。一般很少用，其大小为两个字节，也就是16个二进制位。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">short c;// -32,768 ~ 32,768-1。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  可表示 (-2<sup>15</sup>)~(2<sup>15</sup>-1)</p><p>  理解过程看 byte型。</p><div id="int"></div><h3 id="4-int"><a href="#4-int" class="headerlink" title="4. int"></a>4. int</h3><p>  int 类型占用两字节，32个二进制位。<br>  可表示 (-2<sup>31</sup>)~(2<sup>31</sup>-1)</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">int d; //-2,147,483,648 ~ 2,147,483,647    正负2十多亿<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  int类型较为常用，相比较short，int表示的数更不容易溢出，切占用内存不大。</p><div id="float"></div><h3 id="5-float"><a href="#5-float" class="headerlink" title="5. float"></a>5. float</h3><p>  float类型占用四字节，32个二进制位。</p><p>  可表示 (-3.4x10<sup>38</sup>)~(3.4x10<sup>38</sup>)</p>  <pre class="line-numbers language-c" data-language="c"><code class="language-c">float e;//大概情况为越偏离0，越不精确。32位进制位分别用作字符位（正负），整数位和尾数。建议先了解编程中的多位数科学技术法。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  <a href="https://blog.csdn.net/albertsh/article/details/92385277">精确度以及表示范围详解（点我！点我！）</a></p><p>​    float类型为唯二的能表示小数的数据类型之一，另一个就是double类型。相比较double的64位，float占的内存更小。</p><div id="long"></div><h3 id="6-long"><a href="#6-long" class="headerlink" title="6. long"></a>6. long</h3><p><span id="long"></span></p><p>  long类型占用64个二进制位。</p><p>可表示 (-2<sup>63</sup>)~(2<sup>63</sup>-1)</p>  <pre class="line-numbers language-c" data-language="c"><code class="language-c">long f;//-9,223,372,036,854,775,8078  ~  9,223,372,036,854,775,807<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  long类型一般用于特殊用途，毕竟这么大的数生活中不怎么用得到。但是，联想一下，64位。。。<br>  能否想到我们的电脑。同为64位。所以long类型就是我们的64位机的单个读取单位。</p>  <div id="double"></div><h3 id="7-double"><a href="#7-double" class="headerlink" title="7. double"></a>7. double</h3><p>  double类型  8字节，64个二进制位。</p><p>  float的升级版。升级版说明 double 的特点。</p><p>​    一般刚学编程语言的人做题时自己定义 float 型无法通过，可以换成 double 试试。因为 double 的精度更高。所以根据自己的需求选择 double 还是 float 。</p>  <div id="date"></div><h3 id="8-date"><a href="#8-date" class="headerlink" title="8. date"></a>8. date</h3><p>  此类型与datetime，localtime，关系紧密。在各个语言中，有的只有一种，有的都存在。不同语言规定不同。比如在JavaScript 中只有date，没有datetime。date的格式如下</p>  <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> time<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">2021-08-21T05:12:39.827Z<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  但在C#中，没有date类型，只有datetime类型。</p>  <pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using System;namespace ConsoleApp1{    class Program    {        static void Main(string[] args)        {            DateTime time = DateTime.Now;            Console.WriteLine(time);            Console.ReadKey();        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>   <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">2021/8/21 13:19:29<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    而HTML中，这三种又都存在。特别在input中。</p><ul><li><p>指定为date类型时，只能输入年月日。</p><input type="date" style="width:50%;margin:0 auto"></li><li><p>指定为datetime时，只能输入年月日时分。但现在浏览器已不支持此控件。<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/datetime">详细声明见此</a></p><input type="datetime-local" style="width:50%;margin:0 auto">    </li><li><p>指定为datetime-local时，只能输入年月日时分。</p><input type="datetime-local" style="width:50%;margin:0 auto"></li></ul><p>   具体数据显示格式根据语言不同也不同。</p>  <div id="other"></div><h3 id="9-other"><a href="#9-other" class="headerlink" title="9. other"></a>9. other</h3><p>  other 是指这几种类型可以与 sign，unsign，还有叠加形式。</p><p>如：</p>  <pre class="line-numbers language-c" data-language="c"><code class="language-c">long long g;//128位unsign int h;//无符号整型。划负为正，正数的范围乘2.long int i；//还是int<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>  除此之外，个别语言还有 WORD 型（字，两字节。），DWORD 型，等。</p><hr><p>  不同的语言也有自己特有的，比如数据库一般都有的 datetime类型，text类型，decimal类型（也是表示小数的），imag类型（不错，就是存图片的）等等。 了解每个数据类型，就是为了根据自己的需求定义适合的数据类型。不能计算 1 + 1 就定义两个 long 类型 。养成好习惯，才能更高效合理的利用计算机有限的内存资源。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win添加右键新建项</title>
      <link href="/2021/08/21/win%E6%B7%BB%E5%8A%A0%E5%8F%B3%E9%94%AE%E6%96%B0%E5%BB%BA%E9%A1%B9/"/>
      <url>/2021/08/21/win%E6%B7%BB%E5%8A%A0%E5%8F%B3%E9%94%AE%E6%96%B0%E5%BB%BA%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="右键新建菜单添加新项"><a href="#右键新建菜单添加新项" class="headerlink" title="右键新建菜单添加新项"></a>右键新建菜单添加新项</h1><hr><p>​    **<code>|ू･ω･</code> )检查下道具（没有js的添加项）`</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/1.png" style="zoom: 67%;"><hr><h2 id="1-打开注册表编辑器（regedit）"><a href="#1-打开注册表编辑器（regedit）" class="headerlink" title="1. 打开注册表编辑器（regedit）"></a>1. 打开注册表编辑器（regedit）</h2><p>​         win+R召唤“运行”对话框-》输入”regedit”-》回车。或者在开始菜单的搜索框输入“注册表编辑器”or“regedit”。</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/2.png" style="zoom: 67%;"><h2 id="2-找到系统已统计目标后缀名"><a href="#2-找到系统已统计目标后缀名" class="headerlink" title="2. 找到系统已统计目标后缀名"></a>2. 找到系统已统计目标后缀名</h2><p>​        Ctrl+F召唤“搜索对话框”-》输入想要添加的新建文件的后缀名，前加‘.’，（eg：.js）</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/3.png" style="zoom: 50%;"><p>​        如图：</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/4.png" style="zoom:67%;"><h2 id="3-添加右键新建项"><a href="#3-添加右键新建项" class="headerlink" title="3. 添加右键新建项"></a>3. 添加右键新建项</h2><p>​        找到后缀文件夹-》右键新建项（命名为“ShellNew”）-》      ▲！别输入空格</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/5.png" style="zoom:67%;"><p>​          鼠标在“ShellNew”目录上右键-》新建-》字符串值（命名为NullFile）      ▲！别输入空格<br>​    </p><p>​    </p><pre><code>     [==也可以新建成特定样版文件==](#补充) </code></pre><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/6.png" style="zoom:67%;"><h2 id="4-验证是否成功"><a href="#4-验证是否成功" class="headerlink" title="4. 验证是否成功"></a>4. 验证是否成功</h2><p>​    返回桌面右键查看应该就出现了。</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/7.png" style="zoom:120%;"><ul><li>(命名为“filename”时的效果！！注意文件名：默认还是“新建xxx.js”)</li></ul><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/8.png" style="zoom:67%;"><p><b>    如果没有显示可能情况：</b></p><ul><li>重命名时输入空格。</li></ul><hr><div id="补充"></div><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>​    <strong><strong>补充内容</strong></strong>：</p><h2 id="1-新建文件并输入模板。"><a href="#1-新建文件并输入模板。" class="headerlink" title="1. 新建文件并输入模板。"></a>1. 新建文件并输入模板。</h2><p>​    在一个偏僻的位置新建一个与添加的格式后缀相同的文件.(eg：123.js)</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/9.png" style="zoom:67%;"><h2 id="2-指定文件路径。"><a href="#2-指定文件路径。" class="headerlink" title="2. 指定文件路径。"></a>2. 指定文件路径。</h2><p>​    在添加字符串值时重命名为“filename”-》右键filename项修改，填入刚刚新建的文件的path+文件名。</p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag1/10.png" style="zoom:67%;">]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux换源</title>
      <link href="/2021/08/14/Linux%E6%8D%A2%E6%BA%90/"/>
      <url>/2021/08/14/Linux%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-Linux更换源-其他源也可通过这种方式添加"><a href="#kali-Linux更换源-其他源也可通过这种方式添加" class="headerlink" title="kali Linux更换源(其他源也可通过这种方式添加)"></a><code>kali</code> Linux更换源(其他源也可通过这种方式添加)</h2><p>主要解决国内大多数linux系统下载软件以及其他东西时网速过慢。</p><hr><h2 id="1-找配置文件"><a href="#1-找配置文件" class="headerlink" title="1.找配置文件"></a>1.找配置文件</h2><p>进入源列表文件夹</p><ul><li>可能不同的Linux下文件夹的结构不同，可以通过一级一级向下递进找到sources.list。</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo cd /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-找链接"><a href="#2-找链接" class="headerlink" title="2.找链接"></a>2.找链接</h2><p>打开<span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://developer.aliyun.com/mirror/kali?spm=a2c6h.13651102.0.0.1d231b115YDKhc">这个</a><span class="github-emoji"><span>👈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f448.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>网站，复制源的链接。</p><h2 id="3-修改配置文件"><a href="#3-修改配置文件" class="headerlink" title="3.修改配置文件"></a>3.修改配置文件</h2><p>回到Linux，打开sources.list文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo vi sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 进入插入模式（点击‘i’进入编辑模式）</p><p>如果没有管理员权限会保存失败。</p><p>删除其他源，如果原来就没有的话直接添加进去（Linux命令行中Ctrl+shift+v复制）。</p><h2 id="5-保存"><a href="#5-保存" class="headerlink" title="5.保存"></a>5.保存</h2><p>Esc退出编辑模式，点击‘：’输入‘wq’进行保存并退出（write ，quit）。</p><h2 id="6-更新"><a href="#6-更新" class="headerlink" title="6.更新"></a>6.更新</h2><p>输入下列命令进行一些更新。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt-get updatesudo apt-get upgradesudo apt-get dist-upgradesudo apt-get clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/14/hello-world/"/>
      <url>/2021/08/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎使用 <a href="https://hexo.io/">Hexo</a>! 这是你第一篇文章。去<a href="https://hexo.io/docs/">documentation</a>可查看更多信息。如果你使用hexo时有问题，可以去 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> 解决疑问，或者到 <a href="https://github.com/hexojs/hexo/issues">GitHub</a>咨询我。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建另一篇文章"><a href="#创建另一篇文章" class="headerlink" title="创建另一篇文章"></a>创建另一篇文章</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>了解更多: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>了解更多: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署至远程网站"><a href="#部署至远程网站" class="headerlink" title="部署至远程网站"></a>部署至远程网站</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>了解更多: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win添加开机启动</title>
      <link href="/2021/08/14/win%E6%B7%BB%E5%8A%A0%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
      <url>/2021/08/14/win%E6%B7%BB%E5%8A%A0%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="如何添加开机启动项"><a href="#如何添加开机启动项" class="headerlink" title="如何添加开机启动项"></a>如何添加开机启动项</h2><ul><li>一般应用都有开机启动的选项.</li><li>但是有的应用就偏偏没有，或者一些破解软件的开机启动无法启动,</li><li>再或者360等管家就把开机启动弄坏了</li></ul><hr><h3 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h3><ul><li><p>在微软标志上右键，或者开始菜单找 “运行” 这一项，运行。</p><p>  （或者 “win+R” ）</p></li></ul><p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag/win%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A82.jpg"></p><h3 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h3><ul><li><p>在输入框输入</p><pre class="line-numbers language-shell"><code class="language-shell">shell:startup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag/win%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A83.png"></p><p>然后点 “确定”。</p><h3 id="step-3"><a href="#step-3" class="headerlink" title="step 3"></a>step 3</h3><ul><li>在打开的文件夹里拖入想要开机启动的程序的快捷方式。</li></ul><p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag/win%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A84.png"></p><h2 id="如果想关闭开机启动项……"><a href="#如果想关闭开机启动项……" class="headerlink" title="如果想关闭开机启动项……"></a>如果想关闭开机启动项……</h2><ul><li>有 N 种方式，我就不多说了。</li><li>如果觉得360管理打开太麻烦，可以用任务管理器。<span class="github-emoji"><span>👇</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li></ul><p><img src="https://gitee.com/blogofxyz/blog-photo/raw/master/imag/win%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A85.png"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则语法整理</title>
      <link href="/2021/08/14/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%95%B4%E7%90%86/"/>
      <url>/2021/08/14/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="正则表达式基础语法字符"><a href="#正则表达式基础语法字符" class="headerlink" title="正则表达式基础语法字符"></a>正则表达式基础语法字符</h2><p>   <strong>先了解两个文中用到的概念，一些语言中也有类似的功能。</strong></p><ul><li><p>贪婪模式    ：贪婪模式则尽可能多的匹配所搜索的字符串。</p></li><li><p>非贪婪模式：尽可能少的匹配所搜索的字符串。</p><hr></li></ul><h2 id="1-常用字符"><a href="#1-常用字符" class="headerlink" title="1. 常用字符"></a>1. 常用字符</h2><table><thead><tr><th align="left">符号</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>”匹配字符“<code>n</code>”。“<code>\n</code>”匹配一个换行符。串行“<code>\\</code>”匹配“<code>\</code>”而“<code>\(</code>”则匹配“<code>(</code>”。</td></tr><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串的结束位置。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。+ 等价于{1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。? 等价于{0,1}。</td></tr><tr><td align="left">{<em>n</em>,<em>m</em>}</td><td align="left"><em>m</em>和<em>n</em>均为非负整数，其中<em>n</em>&lt;=<em>m</em>，m可省略。最少匹配<em>n</em>次且最多匹配<em>m</em>次。逗号和两个数之间不能有空格。</td></tr><tr><td align="left">?</td><td align="left">当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。例如，对于字符串“<code>oooo</code>”，“<code>o+?</code>”将匹配单个“<code>o</code>”，而“<code>o+</code>”将匹配所有“<code>o</code>”。</td></tr><tr><td align="left">.</td><td align="left">匹配除“\n”之外的任何单个字符。要匹配包括“\n”在内的任何字符，请使用像“`(.</td></tr><tr><td align="left">(pattern)</td><td align="left">匹配pattern并获取这一匹配。要匹配圆括号字符，请使用“<code>\(</code>”或“<code>\)</code>”。可内嵌  “x|y”</td></tr><tr><td align="left">(?:pattern)</td><td align="left">匹配pattern但不获取匹配结果，即非获取匹配。这在使字符“`(</td></tr><tr><td align="left">(?=pattern)</td><td align="left">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。非获取匹配。如，“`Windows(?=95</td></tr><tr><td align="left">(?!pattern)</td><td align="left">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。非获取匹配。<br>“`Windows(?!95</td></tr><tr><td align="left">(?&lt;=pattern)</td><td align="left">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“`(?&lt;=95</td></tr><tr><td align="left">(?&lt;!pattern)</td><td align="left">反向否定预查，与正向否定预查类拟，只是方向相反。例如“`(?&lt;!95</td></tr><tr><td align="left">x|y</td><td align="left">匹配x或y。例如，“`z</td></tr><tr><td align="left">[xyz]</td><td align="left">字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>”可以匹配“<code>plain</code>”中的“<code>a</code>”。</td></tr><tr><td align="left">[^xyz]</td><td align="left">不匹配括号内任意一个字符。</td></tr><tr><td align="left">[a-z]</td><td align="left">字符范围。匹配指定范围内的任意字符。<br>如：[0-9]匹配数字，[a-zA-Z]匹配所有字母</td></tr><tr><td align="left">[^a-z]</td><td align="left">排除指定范围。<br>如：[^0-9]匹配数字外的任意字符</td></tr><tr><td align="left">\b</td><td align="left">匹配单词边界。<br>如：d\b    匹配以d结尾的单词。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td align="left">\d</td><td align="left">匹配数字字符。等价于[0-9]。</td></tr><tr><td align="left">\w</td><td align="left">匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>”。</td></tr><tr><td align="left">\B</td><td align="left">匹配非单词边界。不匹配指定条件字符结尾的字符串</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td align="left">\D</td><td align="left">匹配非数字字符。等价于[^0-9]。</td></tr><tr><td align="left">\W</td><td align="left">匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>”。</td></tr><tr><td align="left">\f</td><td align="left">匹配换页符。等价于\x0c和\cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配换行符。等价于\x0a和\cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配回车符。等价于\x0d和\cM。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于\x09和\cI。</td></tr></tbody></table><h2 id="2-比较难理解的字符"><a href="#2-比较难理解的字符" class="headerlink" title="2. 比较难理解的字符"></a>2. 比较难理解的字符</h2><table><thead><tr><th align="left">符号</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">\cx</td><td align="left">匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。</td></tr><tr><td align="left">\xn</td><td align="left">匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\x41”匹配“A”。“\x041”则等价于“\x04&amp;1”。正则表达式中可以使用ASCII编码。.</td></tr><tr><td align="left">\num</td><td align="left">匹配num，其中num 是一个正整数。对所获取的匹配的引用。例如，“(.)\1”匹配两个连续的相同字符。</td></tr><tr><td align="left">\n</td><td align="left">标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果<em>n</em>为八进制数字（0-7），则n为一个八进制转义值。</td></tr><tr><td align="left">\nm</td><td align="left">标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm。</td></tr><tr><td align="left">\nml</td><td align="left">如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。</td></tr><tr><td align="left">\un</td><td align="left">匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。</td></tr></tbody></table><h2 id="3-常用正则表达式"><a href="#3-常用正则表达式" class="headerlink" title="3. 常用正则表达式"></a>3. 常用正则表达式</h2><p><mark>正则表达式筛选式不唯一，有的简单，有的复杂，不要惊讶。</mark></p><p><mark>更新中</mark></p><table><thead><tr><th align="center">用户名</th><th align="left"><code>/^[a-z0-9_-]{3,16}$/</code></th></tr></thead><tbody><tr><td align="center">密码</td><td align="left"><code>/^[a-z0-9_-]{6,18}$/</code></td></tr><tr><td align="center">十六进制值</td><td align="left"><code>/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</code></td></tr><tr><td align="center">电子邮箱</td><td align="left"><code>/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/ /^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.{1,2}[a-z]+)+$/</code></td></tr><tr><td align="center">URL</td><td align="left"><code>/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/</code></td></tr><tr><td align="center">IP 地址</td><td align="left"><code>/((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/</code></td></tr><tr><td align="center">HTML 标签</td><td align="left"><code>/^&lt;([a-z]+)([^&lt;]+)*(?:&gt;(.*)&lt;\/\1&gt;|\s+\/&gt;)$/</code></td></tr><tr><td align="center">删除代码\注释</td><td align="left"><code>(?&lt;!http:|\S)//.*$</code></td></tr><tr><td align="center">Unicode编码中的汉字范围</td><td align="left"><code>/^[\u2E80-\u9FFF]+$/</code></td></tr><tr><td align="center">…</td><td align="left">…</td></tr></tbody></table><p>​     </p><p>  声明：本文对一篇文章进行加工，简化，美化产生的。</p><p>原文如下：<a href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html">点我传送</a></p>]]></content>
      
      
      <categories>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="/404.html"/>
      <url>/404.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于‘俺’</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>成就</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>类别</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>交流</title>
      <link href="/contact/index.html"/>
      <url>/contact/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎留言"><a href="#欢迎留言" class="headerlink" title="欢迎留言"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加我联系方式：</p><ul><li><strong>Q Q</strong>：<strong>1970476603</strong></li><li><strong>微信</strong>：<strong>i_19-99-666</strong></li></ul><p>欢迎来访<br><strong>当然不介意小jiejie加我~~</strong></p><h1 id="友链交换"><a href="#友链交换" class="headerlink" title="友链交换"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p><ul><li><strong>名称：</strong>你的博客名称</li><li><strong>地址：</strong>你的博客地址</li><li><strong>简介：</strong>一句话简介</li><li><strong>头像：</strong>你的头像地址</li></ul><p>例如我的博客友链，大家可以加到自己博客里哦：</p><ul><li><strong>名称：</strong>张小白</li><li><strong>地址：</strong><a class="selfurl">https://blogofxyz.gitee.io</a> (国内访问快)/<a class="selfurl">https://blogofxyz.top/</a> (github部署)</li><li><strong>简介：</strong>平时没少学没用东西的一个家伙。</li><li><strong>头像：</strong><a class="selfurl">https://blogofxyz.gitee.io/medias/avatar.jpg</a></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>小伙伴与大佬</title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="赞赏名单"><a href="#赞赏名单" class="headerlink" title="赞赏名单"></a>赞赏名单</h1><p>感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！</p><h1 id="友链交换"><a href="#友链交换" class="headerlink" title="友链交换"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p><ul><li><strong>名称：</strong>你的博客名称</li><li><strong>地址：</strong>你的博客地址</li><li><strong>简介：</strong>一句话简介</li><li><strong>头像：</strong>你的头像地址</li></ul><p>例如我的博客友链，大家可以加到自己博客里哦：</p><ul><li><p><strong>名称：</strong>Zhang-little-white</p></li><li><p><strong>地址：</strong> <a style="text-decoration:none" class="selfurl">https://blogofxyz.gitee.io</a> (gitee访问快)</p><p><a style="text-decoration:none;    white-space: pre;">   &nbsp; &nbsp; &nbsp;  &nbsp;</a>            <a style="text-decoration:none" class="selfurl">https://blogofxyz.top/ </a>(github部署)</p></li><li><p><strong>简介：</strong>小白一个</p></li><li><p><strong>头像：</strong><a style="text-decoration:none" class="selfurl">https://blogofxyz.gitee.io/medias/avatar.jpg</a></p></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>导航</title>
      <link href="/navigate/index.html"/>
      <url>/navigate/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
